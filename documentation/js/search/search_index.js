var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.248,1,1.681]],["body/components/AppComponent.html",[0,1.655,1,2.465,2,2.142,3,0.166,4,0.166,5,1.839,6,1.839,7,1.839,8,1.839,9,0.166,10,2.033,11,1.111,12,2.973,13,1.685,14,4.012,15,2.757,16,2.725,17,2.725,18,4.738,19,2.725,20,3.978,21,0.293,22,0.701,23,1.847,24,1.654,25,4.738,26,3.287,27,0.94,28,2.686,29,3.675,30,6.063,31,4.738,32,4.589,33,5.174,34,2.973,35,2.821,36,2.117,37,0.942,38,3.978,39,0.534,40,0.022,41,0.785,42,0.469,43,0.473,44,2.686,45,1.117,46,3.245,47,0.533,48,0.671,49,3.978,50,1.446,51,1.556,52,1.556,53,1.117,54,1.264,55,2.686,56,1.446,57,2.686,58,2.496,59,2.686,60,1.839,61,2.033,62,1.264,63,1.685,64,2.496,65,1.446,66,1.556,67,0.6,68,1.117,69,2.686,70,1.117,71,2.686,72,0.888,73,2.686,74,1.052,75,2.686,76,1.446,77,2.686,78,1.685,79,2.686,80,3.978,81,2.686,82,2.686,83,3.978,84,2.686,85,2.686,86,2.053,87,1.556,88,1.187,89,2.292,90,0.147,91,0.008,92,3.154,93,2.686,94,2.686,95,2.292,96,2.686,97,1.839,98,2.292,99,2.686,100,2.686,101,2.686,102,2.725,103,2.686,104,1.187,105,2.686,106,2.686,107,2.686,108,3.978,109,2.686,110,2.033,111,2.686,112,1.654,113,1.839,114,2.686,115,1.389,116,2.292,117,3.588,118,1.349,119,2.686,120,1.556,121,2.686,122,3.978,123,1.264,124,2.686,125,2.686,126,2.686,127,2.686,128,2.686,129,2.686,130,2.686,131,2.686,132,1.324,133,2.686,134,2.033,135,2.686,136,2.686,137,2.094,138,1.685,139,2.686,140,2.033,141,2.033,142,1.97,143,2.292,144,2.686,145,2.686,146,2.686,147,2.686,148,2.686,149,2.686,150,2.292,151,2.686,152,1.446,153,1.264,154,2.496,155,2.725,156,1.839,157,3.588,158,1.839,159,1.839,160,1.264,161,1.839,162,1.349,163,1.839,164,1.264,165,1.839,166,1.839,167,0.008,168,0.012,169,0.008]],["title/modules/AppModule.html",[170,1.115,171,2.241]],["body/modules/AppModule.html",[1,3.316,3,0.23,4,0.23,9,0.23,15,1.75,40,0.022,47,0.547,48,0.93,51,2.903,52,2.155,53,1.547,54,1.75,62,1.75,63,2.334,65,2.003,90,0.203,91,0.011,97,2.548,153,1.75,167,0.011,168,0.015,169,0.011,170,1.161,171,4.529,172,1.376,173,1.869,174,3.554,175,3.554,176,2.214,177,1.547,178,3.175,179,3.175,180,3.175,181,3.175,182,4.088,183,4.088,184,3.776,185,3.508,186,4.088,187,3.143,188,0.983,189,2.334,190,3.72,191,2.214,192,5.01,193,2.214,194,3.792,195,2.548,196,3.72,197,3.175,198,3.175,199,2.155,200,5.01,201,2.816,202,3.72,203,3.72,204,3.72,205,3.175,206,2.816,207,5.01,208,2.548,209,3.72,210,3.72,211,3.72,212,2.816]],["title/modules/AppRoutingModule.html",[170,1.115,182,2.241]],["body/modules/AppRoutingModule.html",[3,0.311,4,0.311,9,0.311,40,0.022,47,0.466,48,1.256,50,2.706,86,1.97,90,0.275,91,0.014,117,3.443,167,0.015,168,0.018,169,0.015,172,1.859,176,2.221,177,2.09,182,3.81,191,2.221,193,2.684,213,5.027,214,3.443,215,3.513,216,4.16,217,5.027,218,5.027,219,5.027,220,3.805,221,4.29,222,4.29,223,3.805,224,5.027]],["title/classes/BlinkTab.html",[91,0.01,225,1.485]],["body/classes/BlinkTab.html",[3,0.212,4,0.212,9,0.212,11,1.777,21,0.374,22,0.836,23,2.1,27,0.811,37,1.08,39,0.682,40,0.022,41,0.569,42,0.804,43,0.605,47,0.364,67,0.766,70,2.436,72,1.42,90,0.363,91,0.018,142,1.427,167,0.01,168,0.014,169,0.01,225,2.644,226,1.133,227,1.724,228,0.723,229,1.925,230,1.957,231,2.494,232,2.603,233,2.555,234,1.427,235,1.731,236,4.742,237,3.431,238,0.907,239,0.766,240,2.747,241,1.847,242,1.656,243,1.133,244,1.847,245,1.847,246,2.436,247,1.615,248,2.589,249,1.724,250,1.516,251,1.133,252,1.847,253,2.436,254,1.516,255,1.427,256,1.988,257,2.153,258,2.41,259,1.988,260,0.643,261,2.153,262,1.988,263,1.199,264,2.553]],["title/classes/ChangeClock.html",[91,0.01,265,1.4]],["body/classes/ChangeClock.html",[3,0.194,4,0.194,9,0.194,11,1.814,21,0.342,22,0.784,27,0.74,37,1.028,39,0.623,40,0.022,41,0.737,42,0.806,43,0.552,47,0.24,67,0.699,72,0.699,74,2.206,90,0.366,91,0.018,104,1.384,112,2.341,115,1.094,132,1.846,167,0.009,168,0.013,169,0.009,188,1.572,226,1.034,228,0.66,229,1.951,230,1.975,231,2.506,232,2.589,233,2.589,234,1.302,235,1.756,238,0.828,239,0.699,242,1.553,243,1.034,251,1.034,258,2.421,260,0.969,263,1.094,265,2.421,266,1.384,267,4.448,268,3.132,269,2.235,270,1.474,271,2.206,272,1.389,273,1.384,274,2.206,275,1.034,276,1.227,277,1.384,278,2.206,279,1.574,280,1.574,281,1.574,282,2.206,283,1.574,284,1.574,285,1.574,286,1.574,287,1.574,288,1.574,289,2.093]],["title/classes/ChangeLanguage.html",[91,0.01,282,1.4]],["body/classes/ChangeLanguage.html",[3,0.194,4,0.194,9,0.194,11,1.814,21,0.342,22,0.784,27,0.74,37,1.028,39,0.623,40,0.022,41,0.737,42,0.806,43,0.552,47,0.24,67,0.699,72,0.699,74,2.206,90,0.366,91,0.018,104,1.384,112,2.341,115,1.094,132,1.846,167,0.009,168,0.013,169,0.009,188,1.572,226,1.034,228,0.66,229,1.951,230,1.975,231,2.506,232,2.589,233,2.589,234,1.302,235,1.314,238,0.828,239,0.699,242,1.553,243,1.034,251,1.034,258,2.421,260,1.157,263,1.094,265,2.206,266,1.384,269,1.574,270,1.474,271,2.206,272,1.389,273,1.384,274,2.206,275,1.034,276,1.227,277,1.384,278,2.206,279,1.574,280,1.574,281,1.574,282,2.421,283,1.574,284,1.574,285,1.574,286,1.574,287,2.235,288,1.574,289,2.093,290,4.448,291,3.132]],["title/classes/ChangeName.html",[91,0.01,271,1.4]],["body/classes/ChangeName.html",[3,0.194,4,0.194,9,0.194,11,1.814,21,0.342,22,0.784,27,0.74,37,1.028,39,0.623,40,0.022,41,0.737,42,0.806,43,0.552,47,0.24,67,0.699,72,0.699,74,2.206,90,0.366,91,0.018,104,1.384,112,2.341,115,1.094,132,1.846,167,0.009,168,0.013,169,0.009,188,1.572,226,1.034,228,0.66,229,1.951,230,1.975,231,2.506,232,2.589,233,2.589,234,1.302,235,1.314,238,0.828,239,0.699,242,1.553,243,1.034,251,1.034,258,2.421,260,1.157,263,1.094,265,2.206,266,1.384,269,1.574,270,1.474,271,2.421,272,1.389,273,1.384,274,2.206,275,1.034,276,1.227,277,1.384,278,2.206,279,1.574,280,1.574,281,1.574,282,2.206,283,2.235,284,1.574,285,1.574,286,1.574,287,1.574,288,1.574,289,2.093,292,4.448,293,3.132]],["title/classes/ChangeSendOnEnter.html",[91,0.01,278,1.4]],["body/classes/ChangeSendOnEnter.html",[3,0.194,4,0.194,9,0.194,11,1.814,21,0.342,22,0.784,27,0.74,37,1.028,39,0.623,40,0.022,41,0.737,42,0.806,43,0.552,47,0.24,67,0.699,72,0.699,74,2.206,90,0.366,91,0.018,104,1.384,112,2.341,115,1.094,132,1.846,167,0.009,168,0.013,169,0.009,188,1.572,226,1.034,228,0.66,229,1.951,230,1.975,231,2.506,232,2.589,233,2.589,234,1.302,235,1.756,238,0.828,239,0.699,242,1.553,243,1.034,251,1.034,258,2.421,260,0.969,263,1.094,265,2.206,266,1.384,269,1.574,270,1.474,271,2.206,272,1.389,273,1.384,274,2.206,275,1.034,276,1.227,277,1.384,278,2.421,279,1.574,280,1.574,281,1.574,282,2.206,283,1.574,284,1.574,285,1.574,286,2.235,287,1.574,288,1.574,289,2.093,294,4.448,295,3.132]],["title/classes/ChangeTheme.html",[91,0.01,274,1.4]],["body/classes/ChangeTheme.html",[3,0.194,4,0.194,9,0.194,11,1.814,21,0.342,22,0.784,27,0.74,37,1.028,39,0.623,40,0.022,41,0.737,42,0.806,43,0.552,47,0.24,67,0.699,72,0.699,74,2.206,90,0.366,91,0.018,104,1.384,112,2.341,115,1.094,132,1.846,167,0.009,168,0.013,169,0.009,188,1.572,226,1.034,228,0.66,229,1.951,230,1.975,231,2.506,232,2.589,233,2.589,234,1.302,235,1.314,238,0.828,239,0.699,242,1.553,243,1.034,251,1.034,258,2.421,260,1.157,263,1.094,265,2.206,266,1.384,269,1.574,270,1.474,271,2.206,272,1.389,273,1.384,274,2.421,275,1.034,276,1.227,277,1.384,278,2.206,279,1.574,280,1.574,281,1.574,282,2.206,283,1.574,284,1.574,285,2.235,286,1.574,287,1.574,288,1.574,289,2.093,296,4.448,297,3.132]],["title/components/ChatComponent.html",[0,1.248,160,1.681]],["body/components/ChatComponent.html",[0,1.347,1,0.91,2,1.664,3,0.12,4,0.12,5,1.325,6,1.325,7,1.325,8,1.325,9,0.12,11,0.863,12,2.42,13,1.214,14,3.516,15,2.416,17,2.116,19,2.116,21,0.211,22,0.545,23,1.953,24,1.285,26,2.763,27,0.73,36,2.066,37,1.223,39,0.767,40,0.022,41,0.798,42,0.659,43,0.68,45,2.002,46,2.642,47,0.464,48,0.484,53,0.804,56,1.042,58,1.214,60,1.325,66,1.121,67,0.432,68,0.804,72,1.203,78,1.214,86,0.758,88,0.855,90,0.106,91,0.006,92,1.042,102,3.017,113,2.116,132,0.541,134,1.464,137,2.381,138,1.938,140,1.464,141,1.464,142,1.831,143,3.76,152,1.042,153,0.91,154,1.938,155,3.516,156,1.325,157,3.017,158,1.325,159,1.325,160,2.416,161,1.325,162,0.972,163,1.325,164,0.91,165,1.325,166,1.325,167,0.006,168,0.009,169,0.006,188,1.357,208,1.325,225,0.804,228,0.408,229,0.913,230,0.863,235,0.913,238,0.511,239,0.432,246,2.002,247,1.454,248,0.855,249,1.553,250,1.365,251,1.02,253,0.804,254,1.946,255,2.327,260,0.723,272,1.682,275,0.639,298,1.651,299,3.76,300,4.212,301,3.09,302,2.637,303,3.858,304,3.09,305,3.858,306,3.858,307,3.858,308,3.858,309,3.858,310,3.09,311,3.76,312,4.405,313,1.464,314,3.09,315,1.938,316,3.09,317,1.935,318,1.79,319,3.516,320,2.339,321,3.858,322,2.419,323,1.935,324,2.637,325,3.76,326,2.637,327,2.92,328,1.935,329,2.116,330,2.637,331,3.09,332,1.935,333,3.09,334,2.552,335,3.09,336,2.637,337,2.116,338,3.09,339,1.935,340,3.335,341,2.116,342,1.935,343,5.049,344,1.664,345,3.09,346,3.09,347,3.293,348,2.642,349,1.935,350,1.935,351,3.858,352,3.09,353,1.935,354,3.09,355,3.858,356,3.09,357,1.935,358,2.235,359,1.935,360,1.651,361,1.935,362,2.116,363,1.935,364,1.325,365,1.651,366,1.935,367,2.637,368,1.651,369,1.121,370,1.325,371,1.935,372,1.935,373,1.935,374,3.09,375,1.651,376,1.651,377,1.935,378,1.935,379,3.09,380,1.935,381,1.935,382,1.935,383,1.935,384,1.935,385,1.935,386,1.651,387,1.935,388,1.935,389,3.09,390,1.935,391,1.935,392,3.09,393,1.935,394,1.651,395,1.464,396,1.325,397,1.935,398,1.935,399,1.935,400,1.935,401,3.09,402,3.293,403,1.935,404,1.651,405,1.935,406,1.935,407,1.935,408,1.464,409,1.935,410,3.293,411,3.858,412,3.09,413,1.651,414,1.935,415,2.637,416,2.637,417,1.651,418,1.651,419,2.339,420,1.935,421,1.935,422,1.935,423,2.339,424,1.651,425,1.935,426,3.09,427,2.637,428,1.651,429,1.651,430,1.464,431,1.651,432,1.651,433,1.651]],["title/injectables/ChatEffects.html",[434,1.4,435,2.447]],["body/injectables/ChatEffects.html",[3,0.173,4,0.173,9,0.173,21,0.305,22,0.722,23,2.078,27,0.967,34,3.041,35,3.198,36,2.362,37,1.061,39,0.555,40,0.022,41,0.463,42,0.329,43,0.492,47,0.493,48,0.698,58,1.751,60,1.912,61,2.113,65,1.503,66,1.618,67,0.623,68,1.161,70,2.363,78,1.751,88,2.359,90,0.153,91,0.014,92,2.874,102,3.656,110,3.099,113,2.804,152,2.874,167,0.008,168,0.012,169,0.008,225,1.161,228,0.588,230,1.144,238,1.281,239,1.082,240,2.372,243,2.156,244,2.61,246,2.552,253,1.161,259,2.372,262,2.372,264,1.503,272,1.278,315,2.568,341,4.204,344,3.198,348,3.32,365,2.383,367,4.137,434,1.604,435,3.656,436,1.618,437,2.383,438,2.204,439,5.07,440,3.494,441,3.494,442,4.847,443,4.137,444,4.847,445,2.383,446,3.458,447,2.792,448,5.07,449,4.094,450,5.338,451,5.338,452,4.094,453,4.094,454,4.137,455,2.792,456,3.099,457,4.041,458,4.137,459,4.094,460,3.494,461,4.094,462,2.792,463,3.099,464,2.804,465,4.094,466,4.137,467,3.494,468,4.094,469,4.094,470,5.338,471,5.338,472,2.792,473,3.494,474,4.556,475,1.912,476,2.792,477,2.383,478,2.792]],["title/modules/ChatModule.html",[170,1.115,183,2.241]],["body/modules/ChatModule.html",[3,0.234,4,0.234,9,0.234,23,1.248,35,3.524,40,0.022,47,0.548,48,0.945,53,2.105,54,1.778,61,2.861,65,2.034,90,0.207,91,0.011,153,1.778,160,3.081,162,3.289,167,0.011,168,0.015,169,0.011,170,1.18,172,1.397,173,1.899,174,3.582,175,2.371,176,2.523,177,1.571,183,4.551,184,3.793,185,3.524,187,3.176,188,0.999,189,2.371,191,2.237,193,2.237,194,3.833,195,2.588,199,2.934,206,2.861,319,2.588,362,2.588,423,2.861,479,3.225,480,3.225,481,3.225,482,3.225,483,4.107,484,4.107,485,3.779,486,3.833,487,2.588,488,4.321,489,2.861,490,2.861,491,5.063,492,3.225,493,3.225,494,5.063,495,3.225,496,3.779,497,3.779]],["title/modules/ChatRoutingModule.html",[170,1.115,484,2.241]],["body/modules/ChatRoutingModule.html",[0,1.689,3,0.299,4,0.299,9,0.299,23,1.958,32,3.66,40,0.022,47,0.513,48,1.209,50,2.603,65,2.603,86,1.895,90,0.264,91,0.014,118,2.43,160,2.791,167,0.014,168,0.017,169,0.014,172,1.788,176,2.137,177,2.01,191,2.137,193,2.621,214,3.312,215,3.454,216,4.062,220,4.49,221,4.127,222,4.127,223,3.66,484,3.721,495,4.127,498,4.835,499,3.312,500,4.835,501,4.127]],["title/modules/CoreModule.html",[170,1.115,184,2.07]],["body/modules/CoreModule.html",[3,0.221,4,0.221,9,0.221,29,2.246,34,2.246,36,1.25,40,0.022,43,0.631,47,0.553,48,0.895,50,1.927,53,2.03,54,1.685,62,2.938,63,2.246,67,1.09,88,1.582,90,0.267,91,0.01,97,2.452,117,2.452,123,1.685,153,1.685,167,0.011,168,0.014,169,0.011,170,1.524,171,2.246,172,1.324,173,1.799,174,2.246,175,2.246,176,2.454,177,1.488,184,3.943,187,3.062,188,0.946,189,2.246,191,2.157,193,2.157,199,2.828,216,3.343,260,0.671,435,3.343,446,3.469,475,2.452,486,3.695,487,2.452,502,3.055,503,3.055,504,3.055,505,2.71,506,4.881,507,3.58,508,4.881,509,3.58,510,4.166,511,3.343,512,2.71,513,3.055,514,3.58,515,2.452,516,3.58,517,2.71,518,3.58,519,3.055,520,3.58,521,3.58,522,2.71,523,2.71,524,3.695,525,3.58,526,2.452,527,3.58,528,3.58,529,4.881,530,2.71,531,1.927,532,3.055,533,3.055,534,3.58,535,3.58,536,3.58,537,3.58,538,3.58,539,2.71,540,2.71,541,3.58,542,5.555,543,3.58,544,3.055,545,2.71,546,3.58,547,3.58,548,2.71]],["title/interfaces/IAppState.html",[68,1.485,549,1.321]],["body/interfaces/IAppState.html",[3,0.288,4,0.288,9,0.288,21,0.508,22,1.022,23,2.242,29,4.142,36,1.627,40,0.022,42,0.743,43,1.022,47,0.484,68,2.745,76,3.555,86,1.825,90,0.345,123,2.192,132,1.897,167,0.014,168,0.017,169,0.014,522,3.526,531,2.508,549,1.722,550,2.699,551,3.19,552,6.603,553,3.318,554,3.97,555,4.658,556,3.97,557,3.526,558,4.387,559,3.526]],["title/interfaces/IChatState.html",[76,1.923,549,1.321]],["body/interfaces/IChatState.html",[3,0.295,4,0.295,9,0.295,21,0.521,22,1.038,40,0.022,42,0.784,47,0.366,72,1.487,76,3.435,86,1.871,90,0.322,137,2.11,142,2.844,167,0.014,168,0.017,169,0.014,235,1.884,241,2.571,254,3.022,255,2.844,260,1.195,263,2.228,344,2.571,549,1.766,550,2.767,554,3.27,560,3.614,561,5.838]],["title/interfaces/ISettingsState.html",[549,1.321,553,1.795]],["body/interfaces/ISettingsState.html",[3,0.28,4,0.28,9,0.28,21,0.494,22,1.004,40,0.022,42,0.793,47,0.437,62,2.129,86,1.773,90,0.311,115,2.352,137,1.999,167,0.013,168,0.017,169,0.013,235,2.03,260,1.288,272,2.102,275,2.269,276,2.639,337,3.099,344,2.436,358,3.786,368,3.862,549,1.673,550,2.622,553,3.129,556,3.099,562,3.425,563,5.097,564,4.525,565,3.099,566,3.862,567,3.425,568,3.425,569,3.425]],["title/interfaces/IUser.html",[358,2.07,549,1.321]],["body/interfaces/IUser.html",[3,0.31,4,0.31,9,0.31,21,0.547,22,1.069,40,0.022,42,0.714,90,0.274,104,2.679,118,2.519,167,0.015,168,0.018,169,0.015,228,1.057,229,1.481,260,1.221,263,2.277,272,2.035,337,4.639,358,3.513,549,1.854,550,2.905,565,4.827,570,4.279,571,4.279,572,6.064]],["title/injectables/LocalStorageService.html",[434,1.4,446,1.923]],["body/injectables/LocalStorageService.html",[3,0.187,4,0.187,9,0.187,15,1.42,21,0.639,24,1.801,36,1.934,37,1.166,39,1.007,40,0.022,41,0.839,42,0.597,43,0.893,45,2.437,47,0.232,48,0.754,58,1.893,86,2.297,88,1.333,90,0.165,91,0.009,118,2.176,123,2.759,137,1.333,152,1.625,167,0.009,168,0.013,169,0.009,228,0.636,239,1.236,260,1.245,273,2.446,322,2.546,324,3.697,334,2.51,336,3.697,434,1.697,436,1.749,446,2.981,463,3.279,464,4.607,515,4.179,544,2.576,573,4.619,574,2.284,575,4.331,576,3.835,577,4.324,578,4.331,579,4.324,580,5.536,581,4.331,582,5.536,583,4.331,584,3.018,585,6.102,586,5.536,587,3.018,588,4.331,589,4.331,590,4.331,591,3.018,592,4.331,593,3.018,594,3.018,595,3.697,596,4.331,597,4.331,598,4.331,599,2.576,600,2.576,601,2.284,602,2.576,603,3.018,604,4.331,605,3.018,606,3.018,607,3.018,608,3.018,609,4.331,610,3.018,611,4.331,612,3.018,613,3.018,614,3.018,615,4.331,616,3.018,617,3.018,618,5.536,619,3.018,620,3.018,621,3.018,622,3.018,623,3.018,624,5.536,625,4.331,626,5.067,627,3.018,628,3.018,629,3.018,630,3.018,631,3.018,632,3.018]],["title/classes/Logger.html",[64,2.241,91,0.01]],["body/classes/Logger.html",[3,0.364,4,0.326,9,0.169,21,0.298,22,0.71,24,1.673,27,0.645,37,1.269,39,1.171,40,0.022,41,0.976,42,0.736,43,1.039,45,2.449,64,2.525,87,3.53,90,0.261,91,0.008,92,2.575,137,1.205,167,0.008,168,0.012,169,0.008,226,0.901,238,1.064,239,0.898,242,0.953,250,1.778,255,2.7,260,0.989,273,1.778,322,3.062,531,2.842,545,4.262,579,5.449,633,1.868,634,7.086,635,4.805,636,4.805,637,5.279,638,4.025,639,2.728,640,2.728,641,2.328,642,4.782,643,2.728,644,5.279,645,4.025,646,3.435,647,5.688,648,4.025,649,3.62,650,2.728,651,3.435,652,4.025,653,2.728,654,7.086,655,6.254,656,5.337,657,6.254,658,2.728,659,4.025,660,2.525,661,4.025,662,4.025,663,5.279,664,4.025,665,2.728,666,4.025,667,2.728,668,4.025,669,4.805,670,2.728,671,2.728,672,4.025,673,2.728,674,4.081,675,2.328,676,2.328,677,2.728,678,1.868,679,2.728,680,2.728,681,2.728,682,2.728,683,2.728,684,2.728,685,2.728,686,2.065,687,2.728]],["title/modules/MaterialModule.html",[170,1.115,185,1.923]],["body/modules/MaterialModule.html",[0,1.437,2,2.215,3,0.254,4,0.254,9,0.254,15,1.936,40,0.022,47,0.502,48,1.028,90,0.225,91,0.012,152,2.215,167,0.012,168,0.016,169,0.012,170,1.672,172,2.332,177,2.227,185,2.883,191,1.818,193,2.366,208,2.818,438,2.215,660,2.581,688,4.114,689,4.114,690,2.818,691,3.114,692,4.114,693,3.511,694,4.114,695,4.114,696,4.114,697,4.114,698,3.511,699,4.114,700,4.114,701,5.356,702,5.356,703,5.356,704,5.356,705,5.356,706,5.356,707,5.356,708,5.356,709,5.356,710,5.356,711,5.356,712,5.356,713,5.356,714,5.356,715,5.356,716,5.356,717,5.356,718,5.356,719,5.356,720,5.356,721,5.356,722,5.356,723,5.356,724,5.356,725,5.356,726,5.356,727,5.356,728,5.356,729,5.356,730,5.356,731,5.356,732,5.356,733,5.356,734,5.356,735,5.356,736,5.356,737,5.356]],["title/interfaces/Message.html",[72,0.797,549,1.321]],["body/interfaces/Message.html",[3,0.389,4,0.286,9,0.286,21,0.504,22,1.017,40,0.022,42,0.741,47,0.355,72,1.635,90,0.253,118,2.899,167,0.014,168,0.017,169,0.014,228,0.975,229,1.704,260,1.178,272,2.056,329,3.951,358,3.816,395,4.985,396,4.307,549,1.71,550,2.679,571,4.924,738,3.946,739,5.77,740,5.77,741,5.77,742,4.624]],["title/components/MessageComponent.html",[0,1.248,162,1.795]],["body/components/MessageComponent.html",[0,1.762,1,1.002,2,1.795,3,0.132,4,0.132,5,1.458,6,1.458,7,1.458,8,1.458,9,0.132,11,1.298,12,2.577,13,1.336,14,3.664,15,2.518,17,2.283,19,2.283,21,0.364,22,0.588,24,1.386,26,3.356,27,0.503,36,2.202,37,1.003,39,0.423,40,0.022,41,0.681,42,0.547,43,0.375,45,0.885,46,2.813,47,0.444,48,0.532,56,1.146,66,1.234,67,0.475,68,0.885,72,1.551,90,0.116,91,0.006,120,1.931,132,1.7,134,2.523,137,3.058,138,2.915,140,2.523,141,3.819,152,2.502,153,1.002,154,2.091,155,2.283,156,1.458,157,3.183,158,1.458,159,1.458,160,1.002,161,1.458,162,2.688,163,1.458,164,1.002,165,1.458,166,1.458,167,0.006,168,0.01,169,0.006,228,0.449,241,1.146,260,0.871,275,0.703,277,1.815,300,2.283,313,1.612,315,2.091,320,2.523,322,1.07,327,3.109,329,1.458,340,3.518,364,1.458,369,1.234,370,1.458,396,3.664,402,1.818,404,1.818,408,3.518,410,2.845,413,5.078,415,2.845,416,3.966,424,1.818,427,2.845,428,1.818,430,3.109,431,1.818,432,3.966,433,3.966,438,1.795,553,1.07,557,1.612,678,1.458,690,2.283,698,1.818,743,1.818,744,3.334,745,4.108,746,3.334,747,5.592,748,3.334,749,3.334,750,2.13,751,3.334,752,3.334,753,3.334,754,2.13,755,2.845,756,2.13,757,2.523,758,2.13,759,2.13,760,3.506,761,2.13,762,1.818,763,1.818,764,2.13,765,2.13,766,3.966,767,2.13,768,3.334,769,2.13,770,2.13,771,2.13,772,2.13,773,2.13,774,2.13,775,2.13,776,2.13,777,2.13,778,1.818,779,1.818,780,2.13,781,2.13,782,2.13,783,3.334,784,3.334,785,3.334,786,1.818,787,2.13,788,2.13,789,2.13,790,2.13,791,2.13,792,1.818,793,2.13,794,4.647,795,3.506,796,2.13,797,1.818,798,1.818,799,1.818,800,2.13,801,2.13,802,1.818,803,2.13,804,2.13,805,2.13,806,2.13,807,2.13,808,2.13,809,2.13,810,3.334,811,5.045,812,3.966,813,4.647,814,2.845,815,3.334,816,4.647,817,4.647,818,5.788,819,6.086,820,5.788,821,3.334,822,4.647,823,3.334,824,2.845,825,3.334,826,2.13,827,1.612,828,2.13,829,2.13,830,2.13,831,3.334,832,3.334]],["title/injectables/MockStore.html",[434,1.4,833,2.241]],["body/injectables/MockStore.html",[3,0.227,4,0.227,9,0.227,21,0.4,22,0.875,24,2.064,27,1.329,36,2.105,37,1.119,39,0.987,40,0.022,41,0.823,42,0.585,43,0.875,45,1.526,47,0.498,48,0.917,51,2.126,53,1.526,54,1.727,56,1.976,67,0.819,88,2.193,90,0.307,91,0.014,92,3.029,123,1.727,167,0.011,168,0.015,169,0.011,176,1.621,177,1.526,191,1.621,193,2.193,199,2.876,201,2.778,212,2.778,228,0.773,238,0.97,239,0.819,322,1.844,334,2.876,434,1.945,436,2.126,517,2.778,531,1.976,539,2.778,540,2.778,686,2.778,833,4.072,834,2.513,835,4.259,836,4.802,837,3.4,838,4.802,839,4.964,840,3.67,841,5.144,842,5.144,843,5.144,844,5.761,845,4.964,846,4.237,847,5.374,848,3.67,849,3.67,850,4.802,851,4.802,852,4.802,853,3.132,854,3.132,855,3.132,856,3.132,857,2.778,858,3.4,859,3.132,860,3.4]],["title/pipes/ParserPipe.html",[120,2.07,483,2.241]],["body/pipes/ParserPipe.html",[3,0.255,4,0.255,9,0.255,11,1.154,13,2.592,24,1.718,37,1.068,39,1.068,40,0.022,41,1.047,42,0.632,43,0.947,45,2.233,47,0.458,48,1.033,51,2.394,52,2.394,86,2.566,90,0.226,91,0.012,120,3.112,123,2.973,167,0.012,168,0.016,169,0.012,239,1.199,260,1.257,299,3.527,483,3.369,641,3.527,678,2.83,766,3.527,861,4.132,862,3.527,863,4.584,864,4.132,865,5.371,866,4.132,867,5.371,868,5.967,869,4.132,870,5.371,871,4.584,872,5.371,873,4.132,874,4.132,875,3.527,876,4.132,877,4.132,878,4.132,879,4.132,880,4.132,881,4.132,882,4.132,883,4.132,884,4.132,885,4.584,886,4.132,887,4.132,888,4.132,889,5.371,890,4.132,891,4.132,892,4.132,893,4.132,894,5.371]],["title/classes/Reset.html",[91,0.01,188,0.944]],["body/classes/Reset.html",[3,0.201,4,0.201,9,0.201,11,1.831,21,0.354,22,0.804,37,0.645,40,0.022,41,0.538,42,0.795,47,0.249,67,0.724,72,0.724,74,2.241,90,0.369,91,0.019,104,1.433,112,2.378,115,1.133,132,1.861,167,0.01,168,0.013,169,0.01,188,1.696,226,1.071,228,0.684,229,1.967,230,1.984,231,2.463,232,2.449,233,2.61,235,1.347,238,0.857,239,0.724,242,1.593,243,1.071,251,1.071,258,2.449,260,0.988,263,1.133,265,2.241,266,1.433,269,1.63,270,1.527,271,2.241,272,1.424,273,1.433,274,2.241,275,1.071,276,1.271,277,1.433,278,2.241,279,1.63,280,1.63,281,1.63,282,2.241,283,1.63,284,1.63,285,1.63,286,1.63,287,1.63,288,2.291,289,2.146,895,3.244]],["title/classes/ReveiveMsg.html",[70,1.485,91,0.01]],["body/classes/ReveiveMsg.html",[3,0.212,4,0.212,9,0.212,11,1.777,21,0.374,22,0.836,23,2.1,27,0.811,37,1.08,39,0.682,40,0.022,41,0.569,42,0.804,43,0.605,47,0.364,67,0.766,70,2.644,72,1.506,90,0.363,91,0.018,142,1.427,167,0.01,168,0.014,169,0.01,225,2.436,226,1.133,227,1.724,228,0.723,229,1.925,230,1.957,231,2.494,232,2.603,233,2.555,234,1.427,235,1.013,238,0.907,239,0.766,240,1.988,241,1.847,242,1.656,243,1.133,244,1.847,245,1.847,246,2.436,247,1.615,248,2.589,249,1.724,250,1.516,251,1.133,252,1.847,253,2.436,254,1.516,255,1.427,256,1.988,257,2.975,258,2.41,259,1.988,260,0.643,261,2.153,262,1.988,263,1.199,264,2.553,896,4.742,897,3.431]],["title/classes/RouteReusableStrategy.html",[91,0.01,511,2.447]],["body/classes/RouteReusableStrategy.html",[3,0.208,4,0.208,9,0.208,21,0.367,24,1.945,36,1.634,37,1.214,39,1.214,40,0.022,41,1.012,42,0.719,43,1.077,45,2.539,47,0.258,50,1.811,90,0.184,91,0.01,117,4.747,118,2.35,123,2.734,167,0.01,168,0.014,169,0.01,226,1.111,228,0.709,231,2.613,235,1.867,318,2.71,322,2.35,344,2.518,438,2.518,510,4.589,511,3.204,512,4.785,513,3.992,568,3.541,757,3.541,837,3.204,898,5.396,899,2.872,900,4.677,901,4.677,902,6.322,903,4.677,904,4.677,905,4.677,906,3.992,907,4.677,908,4.677,909,4.677,910,4.677,911,7.186,912,3.365,913,6.322,914,6.322,915,4.677,916,3.365,917,4.677,918,3.365,919,4.677,920,5.377,921,3.365,922,3.365,923,4.677,924,5.377,925,3.365,926,3.365,927,3.365,928,3.365]],["title/classes/SaveCurrentMsg.html",[91,0.01,248,1.578]],["body/classes/SaveCurrentMsg.html",[3,0.212,4,0.212,9,0.212,11,1.777,21,0.374,22,0.836,23,2.1,27,0.811,37,1.08,39,0.682,40,0.022,41,0.569,42,0.804,43,0.605,47,0.364,67,0.766,70,2.436,72,1.42,90,0.363,91,0.018,142,1.427,167,0.01,168,0.014,169,0.01,225,2.436,226,1.133,227,1.724,228,0.723,229,1.925,230,1.957,231,2.494,232,2.603,233,2.555,234,1.427,235,1.013,238,0.907,239,0.766,240,1.988,241,1.847,242,1.656,243,1.133,244,1.847,245,1.847,246,2.436,247,1.615,248,2.81,249,1.724,250,1.516,251,1.133,252,1.847,253,2.436,254,1.516,255,1.427,256,1.988,257,2.153,258,2.41,259,2.747,260,1.098,261,2.153,262,1.988,263,1.199,264,2.553,929,4.742,930,3.431]],["title/classes/SendMessage.html",[91,0.01,246,1.485]],["body/classes/SendMessage.html",[3,0.212,4,0.212,9,0.212,11,1.777,21,0.374,22,0.836,23,2.1,27,0.811,37,1.08,39,0.682,40,0.022,41,0.569,42,0.804,43,0.605,47,0.364,67,0.766,70,2.436,72,1.506,90,0.363,91,0.018,142,1.427,167,0.01,168,0.014,169,0.01,225,2.436,226,1.133,227,1.724,228,0.723,229,1.925,230,1.957,231,2.494,232,2.603,233,2.555,234,1.427,235,1.013,238,0.907,239,0.766,240,1.988,241,1.847,242,1.656,243,1.133,244,1.847,245,1.847,246,2.644,247,1.615,248,2.589,249,1.724,250,1.516,251,1.133,252,1.847,253,2.436,254,1.516,255,1.427,256,1.988,257,2.153,258,2.41,259,1.988,260,0.643,261,2.975,262,1.988,263,1.199,264,2.553,931,4.742,932,3.431]],["title/classes/SetUserID.html",[74,1.4,91,0.01]],["body/classes/SetUserID.html",[3,0.194,4,0.194,9,0.194,11,1.814,21,0.342,22,0.784,27,0.74,37,1.028,39,0.623,40,0.022,41,0.737,42,0.806,43,0.552,47,0.24,67,0.699,72,0.699,74,2.421,90,0.366,91,0.018,104,1.384,112,2.341,115,1.094,132,1.846,167,0.009,168,0.013,169,0.009,188,1.572,226,1.034,228,0.66,229,1.951,230,1.975,231,2.506,232,2.589,233,2.589,234,1.302,235,1.314,238,0.828,239,0.699,242,1.553,243,1.034,251,1.034,258,2.421,260,0.969,263,1.967,265,2.206,266,1.384,269,1.574,270,1.474,271,2.206,272,1.389,273,1.384,274,2.206,275,1.034,276,1.227,277,1.384,278,2.206,279,1.574,280,1.574,281,1.574,282,2.206,283,1.574,284,2.235,285,1.574,286,1.574,287,1.574,288,1.574,289,2.093,933,4.448,934,3.132]],["title/components/SettingsComponent.html",[0,1.248,164,1.681]],["body/components/SettingsComponent.html",[0,1.716,1,0.948,2,1.718,3,0.125,4,0.125,5,1.38,6,1.38,7,1.38,8,1.38,9,0.125,11,1.259,12,2.486,13,1.264,14,3.579,15,2.459,17,2.185,19,2.185,21,0.22,22,0.563,24,1.327,26,3.278,27,0.476,36,2.398,37,1.236,39,1.039,40,0.022,41,0.969,42,0.669,43,0.921,45,2.431,46,2.714,47,0.436,48,0.504,56,1.085,62,0.948,63,1.264,66,2.846,67,0.45,68,0.838,90,0.11,91,0.006,102,3.579,112,2.49,115,1.912,123,1.864,132,1.737,138,1.264,153,0.948,154,2.002,155,3.087,156,1.38,157,3.087,158,1.38,159,1.38,160,0.948,161,1.38,162,1.012,163,1.38,164,2.459,165,1.38,166,1.38,167,0.006,168,0.009,169,0.006,188,1.583,228,0.425,230,1.737,235,1.543,247,1.502,251,1.053,260,1.145,265,1.553,271,1.553,274,1.553,275,1.308,276,1.553,278,1.553,282,1.553,300,3.087,311,3.847,313,1.525,315,2.002,320,3.412,322,2.853,341,4.257,343,2.723,347,3.382,348,1.38,360,1.719,364,1.38,369,1.167,370,1.38,386,1.719,396,2.185,408,1.525,417,2.723,418,1.719,419,3.412,438,2.813,549,1.18,553,1.012,557,1.525,563,1.525,565,3.579,567,2.415,678,1.38,690,2.185,755,2.723,757,2.415,778,1.719,779,1.719,786,1.719,795,1.719,797,1.719,798,1.719,799,1.719,812,1.719,935,1.719,936,2.723,937,2.415,938,3.962,939,3.191,940,3.962,941,3.191,942,3.191,943,3.191,944,3.191,945,3.191,946,3.191,947,4.192,948,3.191,949,2.015,950,3.191,951,2.723,952,2.015,953,3.191,954,2.015,955,3.191,956,2.015,957,3.191,958,3.191,959,2.015,960,3.191,961,2.015,962,3.191,963,2.015,964,2.015,965,2.723,966,2.015,967,2.015,968,2.015,969,2.015,970,3.191,971,3.191,972,1.719,973,2.015,974,2.015,975,2.015,976,2.015,977,2.015,978,2.015,979,2.015,980,2.015,981,3.191,982,3.191,983,3.191,984,3.191,985,6.216,986,3.191,987,3.191,988,3.191,989,3.191,990,4.507,991,3.191,992,3.191,993,3.191,994,3.191,995,3.191,996,2.015,997,2.015,998,2.015,999,2.015,1000,2.015,1001,2.015,1002,2.015,1003,2.015,1004,2.015]],["title/injectables/SettingsEffects.html",[434,1.4,526,2.447]],["body/injectables/SettingsEffects.html",[3,0.165,4,0.165,9,0.165,21,0.29,22,0.697,27,0.934,33,5.591,36,2.34,37,1.037,39,0.529,40,0.022,41,0.441,42,0.314,43,0.47,47,0.487,48,0.666,53,1.107,54,1.253,58,1.671,60,1.824,65,1.434,66,1.543,67,0.595,68,1.107,86,2.044,90,0.146,91,0.016,92,2.809,112,2.169,115,1.381,132,1.632,167,0.008,168,0.012,169,0.008,228,0.561,230,1.105,238,1.246,239,1.053,243,2.131,250,1.747,260,0.741,269,1.986,270,2.219,275,1.723,283,1.986,284,1.986,285,1.986,286,1.986,287,1.986,288,1.986,289,1.253,315,2.48,318,2.291,341,3.229,344,3.144,348,3.229,364,1.824,369,1.543,370,1.824,375,4.453,376,4.453,434,1.549,436,1.543,438,2.128,439,4.984,440,3.374,441,3.374,443,4.024,445,2.273,446,3.416,448,3.374,454,4.024,457,4.421,458,4.024,460,3.374,463,2.993,464,2.708,466,2.273,467,4.453,474,4.453,475,1.824,477,2.273,526,3.573,569,2.993,972,2.273,1005,2.273,1006,4.715,1007,4.715,1008,2.663,1009,3.953,1010,3.953,1011,2.663,1012,5.218,1013,5.574,1014,3.953,1015,3.953,1016,5.218,1017,3.374,1018,3.374,1019,2.663,1020,3.953,1021,3.953,1022,5.218,1023,3.953,1024,3.953,1025,3.953,1026,3.953,1027,3.953,1028,3.953,1029,3.953,1030,3.953,1031,3.953,1032,2.663,1033,3.953]],["title/modules/SettingsModule.html",[170,1.115,186,2.241]],["body/modules/SettingsModule.html",[3,0.269,4,0.269,9,0.269,40,0.022,47,0.537,48,1.09,53,1.812,54,2.051,90,0.238,91,0.013,132,1.218,153,2.051,164,3.204,167,0.013,168,0.016,169,0.013,170,1.361,172,1.612,173,2.19,174,3.839,175,2.735,176,1.926,177,1.812,185,3.665,186,4.472,187,3.487,188,1.152,189,2.735,191,2.456,193,2.456,194,4.208,195,2.985,199,3.221,206,3.3,486,4.208,487,2.985,488,4.744,489,3.3,490,3.3,493,3.72,1034,3.72,1035,3.72,1036,3.72,1037,4.271,1038,4.359,1039,3.72]],["title/modules/SettingsRoutingModule.html",[170,1.115,1037,2.241]],["body/modules/SettingsRoutingModule.html",[0,1.719,3,0.304,4,0.304,9,0.304,32,3.727,40,0.022,47,0.516,48,1.23,50,2.65,65,2.65,86,1.929,90,0.269,91,0.014,118,2.474,132,1.375,164,2.822,167,0.014,168,0.018,169,0.014,172,1.82,176,2.175,177,2.047,191,2.175,193,2.65,214,3.372,215,3.482,216,4.107,220,3.727,499,3.372,501,4.202,1037,3.762,1039,4.202,1040,4.923,1041,4.923]],["title/injectables/SocketioService.html",[35,1.923,434,1.4]],["body/injectables/SocketioService.html",[3,0.228,4,0.228,9,0.228,16,2.528,21,0.403,22,0.879,23,1.995,24,2.072,27,1.333,34,4.079,35,3.253,37,1.201,39,0.734,40,0.022,41,0.612,42,0.435,43,0.651,45,1.535,47,0.464,48,0.923,53,1.535,62,1.737,63,2.315,72,1.349,90,0.202,91,0.016,110,4.922,118,2.504,167,0.011,168,0.015,169,0.011,228,0.778,238,1.317,239,1.113,272,1.556,302,3.15,322,1.855,394,5.157,395,3.773,434,1.953,436,2.139,438,2.683,456,5.116,530,2.794,837,4.138,885,4.816,1042,3.15,1043,6.042,1044,6.042,1045,4.984,1046,6.31,1047,6.31,1048,4.984,1049,4.984,1050,4.984,1051,3.691,1052,4.984,1053,4.984,1054,6.042,1055,3.691,1056,6.042,1057,4.984,1058,6.042,1059,4.254,1060,3.691,1061,3.691,1062,3.691,1063,3.691,1064,3.691]],["title/modules/TestingModule.html",[170,1.115,860,2.447]],["body/modules/TestingModule.html",[3,0.256,4,0.256,9,0.256,27,1.271,36,2.086,40,0.022,47,0.515,48,1.035,51,2.399,53,1.722,54,1.949,56,2.229,67,0.924,88,1.83,90,0.326,91,0.016,92,2.229,123,1.949,167,0.012,168,0.016,169,0.012,172,1.531,176,1.83,177,1.722,191,1.83,193,2.376,199,3.116,201,3.135,212,3.135,334,2.399,434,2.107,517,3.135,531,2.229,539,3.135,540,3.135,686,3.135,833,3.966,834,2.836,835,4.071,836,4.59,837,2.836,838,3.534,841,4.59,842,4.59,843,4.59,844,5.396,846,3.534,847,4.59,850,4.59,851,5.098,852,5.098,853,3.534,854,3.534,855,3.534,856,3.534,857,3.135,858,3.683,859,3.534,860,4.091]],["title/classes/UnreadCount.html",[91,0.01,253,1.485]],["body/classes/UnreadCount.html",[3,0.212,4,0.212,9,0.212,11,1.777,21,0.374,22,0.836,23,2.1,27,0.811,37,1.08,39,0.682,40,0.022,41,0.569,42,0.804,43,0.605,47,0.364,67,0.766,70,2.436,72,1.42,90,0.363,91,0.018,142,1.427,167,0.01,168,0.014,169,0.01,225,2.436,226,1.133,227,1.724,228,0.723,229,1.925,230,1.957,231,2.494,232,2.603,233,2.555,234,1.427,235,1.013,238,0.907,239,0.766,240,1.988,241,1.847,242,1.656,243,1.133,244,1.847,245,1.847,246,2.436,247,1.615,248,2.589,249,1.724,250,1.516,251,1.133,252,1.847,253,2.644,254,1.516,255,1.427,256,1.988,257,2.153,258,2.41,259,1.988,260,0.643,261,2.153,262,2.747,263,2.047,264,2.553,1065,4.742,1066,3.431]],["title/coverage.html",[1067,3.69]],["body/coverage.html",[0,1.931,1,1.416,9,0.186,10,3.271,35,1.62,40,0.022,42,0.354,62,2.034,64,1.887,68,1.251,70,1.251,72,0.672,74,1.179,76,1.62,78,1.887,87,1.743,88,1.329,91,0.02,120,1.743,137,3.145,160,1.416,162,1.512,164,1.416,167,0.009,168,0.013,169,0.009,188,0.795,225,1.251,227,2.942,246,1.251,248,1.329,253,1.251,265,1.179,266,2.775,271,1.179,274,1.179,278,1.179,282,1.179,298,2.568,358,1.743,369,1.743,434,2.294,435,2.06,437,2.568,446,1.62,483,1.887,499,2.06,505,2.277,511,2.06,512,2.277,515,2.96,523,2.277,524,2.277,526,2.06,531,3.282,549,2.165,551,3.464,553,1.512,554,2.06,556,2.06,558,2.277,559,2.277,560,3.271,562,3.271,570,2.568,573,3.271,574,3.271,601,2.277,633,2.06,738,2.568,743,2.568,792,2.568,802,2.568,833,1.887,834,2.96,858,2.06,862,2.568,898,2.568,899,2.568,935,2.568,1005,2.568,1042,2.568,1067,2.277,1068,2.568,1069,3.008,1070,3.008,1071,4.322,1072,6.853,1073,6.993,1074,6.853,1075,3.008,1076,4.322,1077,3.008,1078,3.008,1079,3.008,1080,3.008,1081,3.008,1082,5.528,1083,5.058,1084,6.793,1085,6.793,1086,3.008,1087,3.688,1088,2.568,1089,2.277,1090,2.568,1091,2.568,1092,2.277,1093,2.568,1094,2.277,1095,3.688,1096,2.568,1097,3.688,1098,2.568,1099,3.008,1100,3.008,1101,3.008,1102,2.568,1103,2.568,1104,3.008,1105,3.008]],["title/dependencies.html",[173,2.159,1106,2.984]],["body/dependencies.html",[34,2.747,36,1.53,40,0.022,48,1.095,50,2.358,51,3.23,52,3.23,53,2.55,54,2.061,56,2.358,67,1.245,167,0.013,168,0.016,169,0.013,173,2.2,195,2.999,197,3.738,198,3.738,208,2.999,319,2.999,362,2.999,423,3.315,475,2.999,487,2.999,489,3.315,490,3.315,492,3.738,519,3.738,522,3.315,530,3.315,548,3.315,691,3.315,762,3.738,871,3.738,1107,7.18,1108,4.379,1109,5.575,1110,4.379,1111,4.379,1112,4.379,1113,4.379,1114,4.379,1115,4.379,1116,4.379,1117,6.457,1118,4.379,1119,4.379,1120,4.379,1121,4.379,1122,4.379,1123,4.379,1124,4.379,1125,4.379,1126,4.379,1127,4.379,1128,4.379,1129,4.379,1130,4.379,1131,4.379,1132,4.379,1133,4.379,1134,4.379]],["title/miscellaneous/enumerations.html",[1135,1.499,1136,3.667]],["body/miscellaneous/enumerations.html",[0,1.209,1,1.629,3,0.337,11,0.967,12,2.172,16,2.372,21,0.378,23,2.106,24,1.44,26,2.172,40,0.022,41,0.574,47,0.266,64,2.993,70,1.44,72,1.313,74,1.357,86,1.357,87,2.765,88,1.53,90,0.189,91,0.01,97,2.372,98,2.955,104,1.53,112,2.446,115,1.209,132,1.888,137,1.53,142,1.44,167,0.01,168,0.014,169,0.01,188,1.261,225,1.44,227,1.74,229,1.409,239,1.566,242,1.666,243,1.575,244,2.569,245,1.864,246,1.44,247,1.629,248,1.53,249,1.74,250,1.53,251,1.575,252,1.864,253,1.44,254,1.53,255,1.44,256,2.006,265,1.357,266,1.53,270,2.245,271,1.357,272,1.49,273,1.53,274,1.357,275,1.143,276,1.357,277,1.53,278,1.357,279,1.74,280,1.74,281,1.74,282,1.357,318,2.765,545,3.612,633,2.372,635,4.072,636,5.021,646,2.955,647,4.072,649,2.621,660,2.172,669,4.072,674,4.072,937,4.132,1135,1.74,1136,2.955,1137,2.955,1138,2.955,1139,2.955,1140,3.463,1141,3.463,1142,3.463,1143,3.463,1144,2.955,1145,2.955,1146,3.463,1147,3.463,1148,3.463,1149,3.463,1150,3.463,1151,3.463,1152,3.463,1153,3.463,1154,3.463,1155,4.771,1156,4.771,1157,4.771,1158,4.771,1159,4.771,1160,3.463,1161,3.463,1162,3.463,1163,3.463,1164,3.463,1165,3.463,1166,3.463,1167,3.463,1168,3.463,1169,3.463,1170,3.463,1171,2.621,1172,3.463]],["title/miscellaneous/functions.html",[1135,1.499,1171,3.252]],["body/miscellaneous/functions.html",[21,0.517,39,1.321,40,0.021,41,1.101,43,1.171,45,2.762,68,1.97,76,2.551,167,0.014,168,0.017,169,0.014,230,1.856,334,3.394,499,4.012,505,3.587,532,4.045,533,4.045,551,3.246,553,2.381,559,4.814,833,2.973,834,3.246,857,3.587,858,4.355,1088,4.045,1089,4.435,1090,4.045,1091,5,1092,4.435,1093,4.045,1094,4.435,1135,2.381,1171,3.587,1173,4.739,1174,4.739,1175,4.045,1176,4.045,1177,4.739,1178,4.739,1179,4.739,1180,4.739,1181,4.739,1182,4.739,1183,4.739]],["title/index.html",[21,0.325,1184,2.984,1185,2.547]],["body/index.html",[0,1.896,2,2.262,4,0.179,15,3.251,16,2.878,23,2.049,29,1.815,36,1.468,40,0.021,41,0.479,52,2.435,72,1.287,113,3.949,115,1.011,116,2.47,132,1.382,138,1.815,142,1.203,154,1.815,167,0.009,168,0.012,169,0.009,170,1.695,172,1.07,173,2.111,188,0.765,205,2.47,214,1.982,215,1.558,223,2.191,229,1.241,230,0.809,245,1.558,247,2.328,249,1.454,250,1.279,252,1.558,254,1.857,255,2.501,272,1.878,275,1.634,276,1.134,277,1.279,300,2.878,318,1.677,319,1.982,325,2.47,326,2.47,327,2.191,329,2.878,330,2.47,362,1.982,419,2.191,429,2.47,430,2.191,456,4.365,457,2.191,464,1.982,473,2.47,548,3.181,549,2.008,576,2.191,595,3.587,651,2.47,656,2.47,660,1.815,690,3.719,691,2.191,693,2.47,760,2.47,763,2.47,814,2.47,824,3.587,827,3.745,835,3.181,863,2.47,875,2.47,906,2.47,936,2.47,937,2.191,947,2.47,951,3.587,965,2.47,1017,2.47,1018,2.47,1059,3.587,1067,2.191,1068,3.587,1144,2.47,1185,2.47,1186,5.767,1187,4.202,1188,4.948,1189,2.894,1190,2.894,1191,2.894,1192,2.894,1193,2.894,1194,4.948,1195,2.894,1196,2.894,1197,2.894,1198,2.894,1199,4.202,1200,2.894,1201,2.894,1202,2.894,1203,4.202,1204,2.894,1205,2.894,1206,2.894,1207,2.894,1208,4.202,1209,2.894,1210,4.202,1211,4.202,1212,2.894,1213,2.894,1214,4.202,1215,2.894,1216,2.894,1217,2.894,1218,2.894,1219,2.894,1220,2.894,1221,4.202,1222,2.894,1223,2.894,1224,2.894,1225,2.894,1226,2.894,1227,2.894,1228,2.894,1229,5.767,1230,4.202,1231,2.894,1232,5.43,1233,5.43,1234,2.894,1235,4.948,1236,2.894,1237,2.894,1238,4.202,1239,2.894,1240,2.894,1241,2.894,1242,2.894,1243,2.894,1244,2.894,1245,2.894,1246,4.202,1247,2.894,1248,2.894,1249,2.894,1250,2.894,1251,2.894,1252,2.894,1253,2.894,1254,2.894,1255,2.894,1256,4.202,1257,2.894,1258,4.202,1259,2.894,1260,2.894,1261,4.202,1262,2.894,1263,2.191,1264,4.202,1265,2.894,1266,2.894,1267,2.894,1268,5.43,1269,5.43,1270,2.894,1271,2.894,1272,2.894,1273,2.894,1274,2.894,1275,2.894,1276,4.202,1277,2.894]],["title/modules.html",[172,1.802]],["body/modules.html",[40,0.018,52,3.96,167,0.015,168,0.018,169,0.015,171,3.23,172,1.904,182,3.23,183,3.23,184,2.984,185,2.772,186,3.23,484,3.23,860,3.527,1037,3.23,1278,6.834,1279,6.834,1280,7.274,1281,6.986,1282,6.986]],["title/overview.html",[1283,4.16]],["body/overview.html",[1,3.186,2,2.141,35,3.153,40,0.022,62,2.756,120,2.304,150,4.47,152,2.141,153,1.871,160,2.756,162,2.943,164,2.756,167,0.012,168,0.015,169,0.012,170,1.241,171,4.531,172,1.47,173,1.998,174,2.495,175,2.495,176,1.757,177,1.653,178,3.394,179,3.394,180,3.394,181,3.394,182,3.674,183,4.562,184,3.982,185,3.482,186,4.361,187,3.286,188,1.051,189,2.495,215,2.141,226,1.313,436,2.304,446,3.153,479,3.394,480,3.394,481,3.394,482,3.394,483,3.674,484,3.674,502,3.394,503,3.394,504,3.394,550,2.304,827,3.01,1034,3.394,1035,3.394,1036,3.394,1037,3.674,1145,3.394,1283,3.394,1284,3.976,1285,3.976]],["title/routes.html",[215,2.624]],["body/routes.html",[40,0.019,167,0.017,168,0.019,169,0.017,215,3.109]],["title/miscellaneous/typealiases.html",[1135,1.499,1286,4.296]],["body/miscellaneous/typealiases.html",[21,0.553,40,0.022,42,0.597,70,2.107,74,1.986,87,2.936,90,0.333,167,0.015,168,0.018,169,0.015,188,1.339,225,2.107,227,2.546,246,2.107,248,2.239,253,2.107,264,3.526,265,1.986,266,2.239,271,1.986,274,1.986,278,1.986,282,1.986,289,3.082,531,3.285,633,3.47,649,4.62,675,4.325,676,4.325,1135,2.546,1137,4.325,1138,4.325,1139,4.325,1287,5.067]],["title/miscellaneous/variables.html",[1135,1.499,1263,3.252]],["body/miscellaneous/variables.html",[10,2.534,15,1.575,21,0.365,23,1.539,29,2.1,40,0.022,42,0.778,62,2.97,68,2.229,76,2.509,78,2.924,87,2.7,88,1.479,89,2.857,95,3.977,115,1.169,132,1.302,137,2.059,142,1.392,167,0.01,168,0.014,169,0.01,238,1.844,239,1.558,254,1.479,255,1.392,260,0.627,272,1.045,275,1.539,276,1.311,318,2.7,334,3.657,337,2.292,340,3.528,344,2.886,369,2.7,515,2.292,523,3.528,524,3.528,551,2.292,553,2.342,554,3.672,556,3.672,558,3.528,560,2.534,561,2.857,562,2.534,563,2.534,565,2.292,566,2.857,567,2.534,568,3.528,569,4.614,573,2.534,574,3.528,576,2.534,577,2.857,599,2.857,600,2.857,601,3.528,602,2.857,660,2.924,1087,2.857,1089,2.534,1092,2.534,1094,2.534,1095,2.857,1096,4.576,1097,2.857,1098,4.576,1102,2.857,1103,2.857,1135,1.682,1175,2.857,1176,2.857,1263,4.059,1288,4.66,1289,4.66,1290,3.347,1291,3.347,1292,3.347,1293,3.347,1294,3.347,1295,4.66,1296,3.347,1297,3.347,1298,3.347,1299,3.347,1300,4.66,1301,4.66,1302,4.66,1303,4.66,1304,4.66,1305,4.66,1306,4.66,1307,4.66,1308,4.66,1309,4.66,1310,4.66,1311,4.66,1312,3.347]]],"invertedIndex":[["",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"modules/MaterialModule.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"pipes/ParserPipe.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SocketioService.html":{},"modules/TestingModule.html":{},"classes/UnreadCount.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"components/MessageComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["0%{opacity",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["0.14.0",{"_index":1114,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":774,"title":{},"body":{"components/MessageComponent.html":{}}}],["0.6",{"_index":773,"title":{},"body":{"components/MessageComponent.html":{}}}],["0.8.26",{"_index":1134,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1073,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1071,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1099,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1100,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":821,"title":{},"body":{"components/MessageComponent.html":{}}}],["1",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"injectables/LocalStorageService.html":{},"modules/MaterialModule.html":{},"components/MessageComponent.html":{},"overview.html":{}}}],["1.2.0",{"_index":1116,"title":{},"body":{"dependencies.html":{}}}],["1.2em",{"_index":1001,"title":{},"body":{"components/SettingsComponent.html":{}}}],["1.5",{"_index":775,"title":{},"body":{"components/MessageComponent.html":{}}}],["1/1",{"_index":1082,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1086,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1085,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1081,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":809,"title":{},"body":{"components/MessageComponent.html":{}}}],["10.0.1",{"_index":1118,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1074,"title":{},"body":{"coverage.html":{}}}],["100%{opacity",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["100vh",{"_index":406,"title":{},"body":{"components/ChatComponent.html":{}}}],["106px",{"_index":407,"title":{},"body":{"components/ChatComponent.html":{}}}],["10px",{"_index":789,"title":{},"body":{"components/MessageComponent.html":{}}}],["11})(?:\\s",{"_index":877,"title":{},"body":{"pipes/ParserPipe.html":{}}}],["12",{"_index":989,"title":{},"body":{"components/SettingsComponent.html":{}}}],["12/12",{"_index":1101,"title":{},"body":{"coverage.html":{}}}],["12px",{"_index":414,"title":{},"body":{"components/ChatComponent.html":{}}}],["13/13",{"_index":1075,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1285,"title":{},"body":{"overview.html":{}}}],["15px",{"_index":790,"title":{},"body":{"components/MessageComponent.html":{}}}],["16",{"_index":1080,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":409,"title":{},"body":{"components/ChatComponent.html":{}}}],["19px",{"_index":823,"title":{},"body":{"components/MessageComponent.html":{}}}],["1;align",{"_index":828,"title":{},"body":{"components/MessageComponent.html":{}}}],["1px",{"_index":819,"title":{},"body":{"components/MessageComponent.html":{}}}],["1s",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":827,"title":{},"body":{"components/MessageComponent.html":{},"index.html":{},"overview.html":{}}}],["2.0.8",{"_index":1123,"title":{},"body":{"dependencies.html":{}}}],["2.1.1",{"_index":1131,"title":{},"body":{"dependencies.html":{}}}],["2.5.6",{"_index":1121,"title":{},"body":{"dependencies.html":{}}}],["20px",{"_index":786,"title":{},"body":{"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["24",{"_index":991,"title":{},"body":{"components/SettingsComponent.html":{}}}],["25",{"_index":1084,"title":{},"body":{"coverage.html":{}}}],["2d8cfa",{"_index":825,"title":{},"body":{"components/MessageComponent.html":{}}}],["2px",{"_index":822,"title":{},"body":{"components/MessageComponent.html":{}}}],["3",{"_index":698,"title":{},"body":{"modules/MaterialModule.html":{},"components/MessageComponent.html":{}}}],["3.0.3",{"_index":1129,"title":{},"body":{"dependencies.html":{}}}],["3.0.5",{"_index":1119,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1079,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":882,"title":{},"body":{"pipes/ParserPipe.html":{}}}],["30px",{"_index":794,"title":{},"body":{"components/MessageComponent.html":{}}}],["333",{"_index":831,"title":{},"body":{"components/MessageComponent.html":{}}}],["3;text",{"_index":829,"title":{},"body":{"components/MessageComponent.html":{}}}],["4",{"_index":1145,"title":{},"body":{"miscellaneous/enumerations.html":{},"overview.html":{}}}],["4.1.1",{"_index":1130,"title":{},"body":{"dependencies.html":{}}}],["4.17.10",{"_index":1125,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1078,"title":{},"body":{"coverage.html":{}}}],["40px",{"_index":426,"title":{},"body":{"components/ChatComponent.html":{}}}],["424242",{"_index":433,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{}}}],["48px",{"_index":425,"title":{},"body":{"components/ChatComponent.html":{}}}],["4px",{"_index":416,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{}}}],["5",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"overview.html":{}}}],["5/5",{"_index":1083,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":792,"title":{},"body":{"components/MessageComponent.html":{},"coverage.html":{}}}],["50%{opacity",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["50px",{"_index":804,"title":{},"body":{"components/MessageComponent.html":{}}}],["5px",{"_index":808,"title":{},"body":{"components/MessageComponent.html":{}}}],["6.3.1",{"_index":1132,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1076,"title":{},"body":{"coverage.html":{}}}],["666",{"_index":832,"title":{},"body":{"components/MessageComponent.html":{}}}],["678px",{"_index":800,"title":{},"body":{"components/MessageComponent.html":{}}}],["7.0.0",{"_index":1107,"title":{},"body":{"dependencies.html":{}}}],["7.0.1",{"_index":1109,"title":{},"body":{"dependencies.html":{}}}],["7.4.0",{"_index":1117,"title":{},"body":{"dependencies.html":{}}}],["768px",{"_index":996,"title":{},"body":{"components/SettingsComponent.html":{}}}],["8/10",{"_index":1077,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":802,"title":{},"body":{"components/MessageComponent.html":{},"coverage.html":{}}}],["9",{"_index":1284,"title":{},"body":{"overview.html":{}}}],["9px",{"_index":820,"title":{},"body":{"components/MessageComponent.html":{}}}],["_sanitizer",{"_index":873,"title":{},"body":{"pipes/ParserPipe.html":{}}}],["aaa",{"_index":805,"title":{},"body":{"components/MessageComponent.html":{}}}],["ability",{"_index":1214,"title":{},"body":{"index.html":{}}}],["absolute",{"_index":424,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{}}}],["access_time",{"_index":987,"title":{},"body":{"components/SettingsComponent.html":{}}}],["accessors",{"_index":946,"title":{},"body":{"components/SettingsComponent.html":{}}}],["account_circle",{"_index":982,"title":{},"body":{"components/SettingsComponent.html":{}}}],["action",{"_index":230,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"classes/UnreadCount.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["action.payload",{"_index":451,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["actionreducer",{"_index":1182,"title":{},"body":{"miscellaneous/functions.html":{}}}],["actionreducermap",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions",{"_index":243,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"injectables/ChatEffects.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"injectables/SettingsEffects.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{}}}],["actionsobserver",{"_index":842,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["actionssubject",{"_index":843,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["activatedroute",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["activatedroutesnapshot",{"_index":911,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["actual_component",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["add",{"_index":318,"title":{},"body":{"components/ChatComponent.html":{},"classes/RouteReusableStrategy.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["addemoji",{"_index":310,"title":{},"body":{"components/ChatComponent.html":{}}}],["addemoji(ev",{"_index":316,"title":{},"body":{"components/ChatComponent.html":{}}}],["additional",{"_index":651,"title":{},"body":{"classes/Logger.html":{},"index.html":{}}}],["addmessage",{"_index":442,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["aliases",{"_index":1287,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":812,"title":{},"body":{"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["allowing",{"_index":900,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["already",{"_index":546,"title":{},"body":{"modules/CoreModule.html":{}}}],["angular",{"_index":690,"title":{},"body":{"modules/MaterialModule.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":762,"title":{},"body":{"components/MessageComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":1108,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":487,"title":{},"body":{"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/SettingsModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":509,"title":{},"body":{"modules/CoreModule.html":{}}}],["angular/compiler",{"_index":1110,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"injectables/LocalStorageService.html":{},"modules/MaterialModule.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"pipes/ParserPipe.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SocketioService.html":{},"modules/TestingModule.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":489,"title":{},"body":{"modules/ChatModule.html":{},"modules/SettingsModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/SettingsModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1112,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"components/ChatComponent.html":{},"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/MockStore.html":{},"pipes/ParserPipe.html":{},"modules/TestingModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{},"modules/SettingsRoutingModule.html":{},"dependencies.html":{}}}],["angular/router/testing",{"_index":853,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["angular/service",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["animate",{"_index":761,"title":{},"body":{"components/MessageComponent.html":{}}}],["animate('0.5s",{"_index":770,"title":{},"body":{"components/MessageComponent.html":{}}}],["animation",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{}}}],["animations",{"_index":763,"title":{},"body":{"components/MessageComponent.html":{},"index.html":{}}}],["animationsgetting",{"_index":1227,"title":{},"body":{"index.html":{}}}],["another",{"_index":473,"title":{},"body":{"injectables/ChatEffects.html":{},"index.html":{}}}],["api's",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"injectables/LocalStorageService.html":{},"modules/MaterialModule.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["app.component.html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.module.ts",{"_index":1255,"title":{},"body":{"index.html":{}}}],["app.todo",{"_index":1216,"title":{},"body":{"index.html":{}}}],["app/core",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ChatEffects.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsRoutingModule.html":{}}}],["app/core/logger.service",{"_index":1162,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["app/core/models/message.interface",{"_index":241,"title":{},"body":{"classes/BlinkTab.html":{},"interfaces/IChatState.html":{},"components/MessageComponent.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{}}}],["app/core/models/user.interface",{"_index":368,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/ISettingsState.html":{}}}],["app/core/services/socketio/socketio.service",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChatEffects.html":{},"modules/ChatModule.html":{}}}],["app/core/store/actions/chat.actions",{"_index":365,"title":{},"body":{"components/ChatComponent.html":{},"injectables/ChatEffects.html":{}}}],["app/core/store/actions/settings.actions",{"_index":972,"title":{},"body":{"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{}}}],["app/core/store/effects/chat.effects",{"_index":528,"title":{},"body":{"modules/CoreModule.html":{}}}],["app/core/store/effects/settings.effects",{"_index":527,"title":{},"body":{"modules/CoreModule.html":{}}}],["app/core/store/reducers/app.reducers",{"_index":525,"title":{},"body":{"modules/CoreModule.html":{}}}],["app/core/store/selectors/chat.selector",{"_index":366,"title":{},"body":{"components/ChatComponent.html":{}}}],["app/core/store/selectors/settings.selector",{"_index":370,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{}}}],["app/core/store/state/app.state",{"_index":364,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{}}}],["app/core/store/state/chat.state",{"_index":555,"title":{},"body":{"interfaces/IAppState.html":{}}}],["app/core/store/state/settings.state",{"_index":557,"title":{},"body":{"interfaces/IAppState.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["app/material.module",{"_index":493,"title":{},"body":{"modules/ChatModule.html":{},"modules/SettingsModule.html":{}}}],["app_prefix",{"_index":601,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["appearance",{"_index":421,"title":{},"body":{"components/ChatComponent.html":{}}}],["application",{"_index":937,"title":{},"body":{"components/SettingsComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["appmodule",{"_index":171,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["appreducers",{"_index":523,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":182,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appstate",{"_index":305,"title":{},"body":{"components/ChatComponent.html":{}}}],["ar",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arabic",{"_index":1192,"title":{},"body":{"index.html":{}}}],["areg",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["args",{"_index":868,"title":{},"body":{"pipes/ParserPipe.html":{}}}],["array",{"_index":971,"title":{},"body":{"components/SettingsComponent.html":{}}}],["array.from(classlist).filter((item",{"_index":1027,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["assets",{"_index":1256,"title":{},"body":{"index.html":{}}}],["async",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["attach",{"_index":439,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/SettingsEffects.html":{}}}],["audio",{"_index":1222,"title":{},"body":{"index.html":{}}}],["authentication",{"_index":1217,"title":{},"body":{"index.html":{}}}],["auto",{"_index":429,"title":{},"body":{"components/ChatComponent.html":{},"index.html":{}}}],["autocompletesettings",{"_index":1213,"title":{},"body":{"index.html":{}}}],["autofocus",{"_index":1212,"title":{},"body":{"index.html":{}}}],["autolinker",{"_index":871,"title":{},"body":{"pipes/ParserPipe.html":{},"dependencies.html":{}}}],["autolinker.link(value",{"_index":880,"title":{},"body":{"pipes/ParserPipe.html":{}}}],["automaticlinks",{"_index":864,"title":{},"body":{"pipes/ParserPipe.html":{}}}],["automaticlinks(value",{"_index":865,"title":{},"body":{"pipes/ParserPipe.html":{}}}],["available",{"_index":1282,"title":{},"body":{"modules.html":{}}}],["await",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["back",{"_index":1210,"title":{},"body":{"index.html":{}}}],["background",{"_index":432,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{}}}],["based",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["baseurl",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["before",{"_index":330,"title":{},"body":{"components/ChatComponent.html":{},"index.html":{}}}],["behavior",{"_index":1159,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["behaviorsubject",{"_index":850,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["beta.19",{"_index":1111,"title":{},"body":{"dependencies.html":{}}}],["bezier(.8",{"_index":772,"title":{},"body":{"components/MessageComponent.html":{}}}],["blink",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"classes/BlinkTab.html":{},"components/ChatComponent.html":{},"interfaces/IChatState.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["blinktab",{"_index":225,"title":{"classes/BlinkTab.html":{}},"body":{"classes/BlinkTab.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["blinktab(false",{"_index":383,"title":{},"body":{"components/ChatComponent.html":{}}}],["blinktab(true",{"_index":470,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["boolean",{"_index":235,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"classes/UnreadCount.html":{}}}],["bootstrap",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/SettingsModule.html":{},"overview.html":{}}}],["border",{"_index":410,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{}}}],["both",{"_index":788,"title":{},"body":{"components/MessageComponent.html":{}}}],["bottom",{"_index":327,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{},"index.html":{}}}],["box",{"_index":816,"title":{},"body":{"components/MessageComponent.html":{}}}],["browse",{"_index":1280,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"pipes/ParserPipe.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/animations",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["browseranimationsmodule",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["build",{"_index":229,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"interfaces/IUser.html":{},"interfaces/Message.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["builds",{"_index":700,"title":{},"body":{"modules/MaterialModule.html":{}}}],["button",{"_index":419,"title":{},"body":{"components/ChatComponent.html":{},"components/SettingsComponent.html":{},"index.html":{}}}],["calc",{"_index":405,"title":{},"body":{"components/ChatComponent.html":{}}}],["carry",{"_index":751,"title":{},"body":{"components/MessageComponent.html":{}}}],["cd",{"_index":1236,"title":{},"body":{"index.html":{}}}],["change",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{}}}],["changeclock",{"_index":265,"title":{"classes/ChangeClock.html":{}},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["changeclock(clock",{"_index":977,"title":{},"body":{"components/SettingsComponent.html":{}}}],["changelanguage",{"_index":282,"title":{"classes/ChangeLanguage.html":{}},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["changelanguage(language",{"_index":980,"title":{},"body":{"components/SettingsComponent.html":{}}}],["changename",{"_index":271,"title":{"classes/ChangeName.html":{}},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["changename(name",{"_index":976,"title":{},"body":{"components/SettingsComponent.html":{}}}],["changes",{"_index":336,"title":{},"body":{"components/ChatComponent.html":{},"injectables/LocalStorageService.html":{}}}],["changesendonenter",{"_index":278,"title":{"classes/ChangeSendOnEnter.html":{}},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["changesendonenter(sendonenter",{"_index":979,"title":{},"body":{"components/SettingsComponent.html":{}}}],["changetheme",{"_index":274,"title":{"classes/ChangeTheme.html":{}},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["changetheme(theme",{"_index":978,"title":{},"body":{"components/SettingsComponent.html":{}}}],["chat",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"classes/BlinkTab.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"interfaces/IAppState.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"injectables/SocketioService.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["chat'},{'name",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["chat.component",{"_index":495,"title":{},"body":{"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{}}}],["chat.component.html",{"_index":304,"title":{},"body":{"components/ChatComponent.html":{}}}],["chat.component.scss",{"_index":303,"title":{},"body":{"components/ChatComponent.html":{}}}],["chat.currentmessage",{"_index":390,"title":{},"body":{"components/ChatComponent.html":{}}}],["chat/chat.module",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["chatactions",{"_index":264,"title":{},"body":{"classes/BlinkTab.html":{},"injectables/ChatEffects.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{},"miscellaneous/typealiases.html":{}}}],["chatapp",{"_index":602,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/variables.html":{}}}],["chatcomponent",{"_index":160,"title":{"components/ChatComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["chateffects",{"_index":435,"title":{"injectables/ChatEffects.html":{}},"body":{"injectables/ChatEffects.html":{},"modules/CoreModule.html":{},"coverage.html":{}}}],["chatmodule",{"_index":183,"title":{"modules/ChatModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules.html":{},"overview.html":{}}}],["chatreceived",{"_index":1046,"title":{},"body":{"injectables/SocketioService.html":{}}}],["chatreducers",{"_index":1089,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["chatreducers(state",{"_index":1179,"title":{},"body":{"miscellaneous/functions.html":{}}}],["chatroutingmodule",{"_index":484,"title":{"modules/ChatRoutingModule.html":{}},"body":{"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["chatsend",{"_index":1048,"title":{},"body":{"injectables/SocketioService.html":{}}}],["chatsend(msg",{"_index":1050,"title":{},"body":{"injectables/SocketioService.html":{}}}],["chatstate",{"_index":1096,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["check",{"_index":588,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["class",{"_index":91,"title":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Logger.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"classes/UnreadCount.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"modules/MaterialModule.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"pipes/ParserPipe.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SocketioService.html":{},"modules/TestingModule.html":{},"classes/UnreadCount.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["classes",{"_index":226,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Logger.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"classes/UnreadCount.html":{},"overview.html":{}}}],["classlist",{"_index":1024,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["classlist.add(theme",{"_index":1031,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["classlist.remove(...toremove",{"_index":1030,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["clear",{"_index":787,"title":{},"body":{"components/MessageComponent.html":{}}}],["click",{"_index":965,"title":{},"body":{"components/SettingsComponent.html":{},"index.html":{}}}],["clock",{"_index":276,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"interfaces/ISettingsState.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_chatmodule",{"_index":479,"title":{},"body":{"modules/ChatModule.html":{},"overview.html":{}}}],["cluster_chatmodule_declarations",{"_index":480,"title":{},"body":{"modules/ChatModule.html":{},"overview.html":{}}}],["cluster_chatmodule_imports",{"_index":481,"title":{},"body":{"modules/ChatModule.html":{},"overview.html":{}}}],["cluster_chatmodule_providers",{"_index":482,"title":{},"body":{"modules/ChatModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":502,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":503,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_providers",{"_index":504,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_settingsmodule",{"_index":1034,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_declarations",{"_index":1035,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_imports",{"_index":1036,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["code",{"_index":1251,"title":{},"body":{"index.html":{}}}],["coding",{"_index":1247,"title":{},"body":{"index.html":{}}}],["color",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{}}}],["column",{"_index":807,"title":{},"body":{"components/MessageComponent.html":{}}}],["command",{"_index":1235,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":486,"title":{},"body":{"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/SettingsModule.html":{}}}],["completely",{"_index":648,"title":{},"body":{"classes/Logger.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"modules/ChatRoutingModule.html":{},"modules/MaterialModule.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsRoutingModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["component_template",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"modules/MaterialModule.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"index.html":{},"overview.html":{}}}],["connection",{"_index":1044,"title":{},"body":{"injectables/SocketioService.html":{}}}],["console",{"_index":1170,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["console.log",{"_index":657,"title":{},"body":{"classes/Logger.html":{}}}],["const",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChatComponent.html":{},"modules/ChatRoutingModule.html":{},"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"injectables/LocalStorageService.html":{},"pipes/ParserPipe.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsRoutingModule.html":{},"miscellaneous/enumerations.html":{}}}],["constructor",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"classes/Logger.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SocketioService.html":{},"modules/TestingModule.html":{},"classes/UnreadCount.html":{}}}],["constructor(@optional",{"_index":541,"title":{},"body":{"modules/CoreModule.html":{}}}],["constructor(actions",{"_index":445,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/SettingsEffects.html":{}}}],["constructor(payload",{"_index":234,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"classes/UnreadCount.html":{}}}],["constructor(private",{"_index":678,"title":{},"body":{"classes/Logger.html":{},"components/MessageComponent.html":{},"pipes/ParserPipe.html":{},"components/SettingsComponent.html":{}}}],["constructor(public",{"_index":258,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"classes/UnreadCount.html":{}}}],["constructor(router",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(source",{"_index":639,"title":{},"body":{"classes/Logger.html":{}}}],["constructor(state",{"_index":840,"title":{},"body":{"injectables/MockStore.html":{}}}],["constructor(store",{"_index":313,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["container",{"_index":299,"title":{},"body":{"components/ChatComponent.html":{},"pipes/ParserPipe.html":{}}}],["content",{"_index":793,"title":{},"body":{"components/MessageComponent.html":{}}}],["context(.dark",{"_index":431,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{}}}],["context([dir=rtl",{"_index":428,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{}}}],["convenience",{"_index":692,"title":{},"body":{"modules/MaterialModule.html":{}}}],["core",{"_index":548,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"index.html":{}}}],["core/models/message.interface",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["core/store/actions/chat.actions",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["core/store/actions/settings.actions",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["core/store/selectors/chat.selector",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["core/store/state/app.state",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["core/store/state/chat.state",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["coremodule",{"_index":184,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["corresponding",{"_index":1149,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["counted",{"_index":256,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{}}}],["counter",{"_index":325,"title":{},"body":{"components/ChatComponent.html":{},"index.html":{}}}],["coverage",{"_index":1067,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["created",{"_index":1058,"title":{},"body":{"injectables/SocketioService.html":{}}}],["createselector",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["critical",{"_index":1155,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ctrl",{"_index":280,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"miscellaneous/enumerations.html":{}}}],["ctrl+enter",{"_index":1211,"title":{},"body":{"index.html":{}}}],["ctrl/ngx",{"_index":492,"title":{},"body":{"modules/ChatModule.html":{},"dependencies.html":{}}}],["cubic",{"_index":771,"title":{},"body":{"components/MessageComponent.html":{}}}],["curr",{"_index":920,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["curr.routeconfig",{"_index":927,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["current",{"_index":250,"title":{},"body":{"classes/BlinkTab.html":{},"components/ChatComponent.html":{},"classes/Logger.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"injectables/SettingsEffects.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["currentmessage",{"_index":561,"title":{},"body":{"interfaces/IChatState.html":{},"miscellaneous/variables.html":{}}}],["currentstateref",{"_index":615,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["currentstateref[key",{"_index":618,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["custom",{"_index":1144,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["customization",{"_index":1194,"title":{},"body":{"index.html":{}}}],["customize",{"_index":936,"title":{},"body":{"components/SettingsComponent.html":{},"index.html":{}}}],["dark",{"_index":986,"title":{},"body":{"components/SettingsComponent.html":{}}}],["data",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"modules/ChatRoutingModule.html":{},"interfaces/IUser.html":{},"injectables/LocalStorageService.html":{},"interfaces/Message.html":{},"classes/RouteReusableStrategy.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SocketioService.html":{}}}],["date",{"_index":396,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["datetime",{"_index":740,"title":{},"body":{"interfaces/Message.html":{}}}],["debug",{"_index":636,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["debug(...objects",{"_index":652,"title":{},"body":{"classes/Logger.html":{}}}],["declarations",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/SettingsModule.html":{},"overview.html":{}}}],["declate",{"_index":333,"title":{},"body":{"components/ChatComponent.html":{}}}],["decorators",{"_index":348,"title":{},"body":{"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{}}}],["dedede",{"_index":815,"title":{},"body":{"components/MessageComponent.html":{}}}],["default",{"_index":238,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"classes/Logger.html":{},"injectables/MockStore.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"injectables/SettingsEffects.html":{},"injectables/SocketioService.html":{},"classes/UnreadCount.html":{},"miscellaneous/variables.html":{}}}],["defaultlanguage",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaults",{"_index":1215,"title":{},"body":{"index.html":{}}}],["defaultusername",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"pipes/ParserPipe.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SocketioService.html":{},"classes/UnreadCount.html":{}}}],["definition",{"_index":906,"title":{},"body":{"classes/RouteReusableStrategy.html":{},"index.html":{}}}],["dependencies",{"_index":173,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/SettingsModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":228,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"interfaces/IUser.html":{},"injectables/LocalStorageService.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SocketioService.html":{},"classes/UnreadCount.html":{}}}],["design",{"_index":1126,"title":{},"body":{"dependencies.html":{}}}],["detachedroutehandle",{"_index":913,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["detachedtree",{"_index":924,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["details",{"_index":752,"title":{},"body":{"components/MessageComponent.html":{}}}],["devtools",{"_index":519,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["different",{"_index":1146,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["direction",{"_index":806,"title":{},"body":{"components/MessageComponent.html":{}}}],["directions",{"_index":1193,"title":{},"body":{"index.html":{}}}],["directive",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["directives",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["disable",{"_index":646,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["dispatch",{"_index":341,"title":{},"body":{"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{}}}],["display",{"_index":277,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/MessageComponent.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["displayed",{"_index":753,"title":{},"body":{"components/MessageComponent.html":{}}}],["dist",{"_index":1244,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":1013,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["docs",{"_index":1246,"title":{},"body":{"index.html":{}}}],["document.body.classlist",{"_index":1025,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["document.bosy",{"_index":1033,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["document.dir",{"_index":1016,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["documentation",{"_index":1068,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["domsanitizer",{"_index":872,"title":{},"body":{"pipes/ParserPipe.html":{}}}],["dynamic",{"_index":1113,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1249,"title":{},"body":{"index.html":{}}}],["each",{"_index":457,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/SettingsEffects.html":{},"index.html":{}}}],["echatactions",{"_index":244,"title":{},"body":{"classes/BlinkTab.html":{},"injectables/ChatEffects.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{}}}],["echatactions.blinktab",{"_index":240,"title":{},"body":{"classes/BlinkTab.html":{},"injectables/ChatEffects.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{}}}],["echatactions.reveivemsg",{"_index":257,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{}}}],["echatactions.savecurrentmsg",{"_index":259,"title":{},"body":{"classes/BlinkTab.html":{},"injectables/ChatEffects.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{}}}],["echatactions.sendmessage",{"_index":261,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{}}}],["echatactions.unreadcount",{"_index":262,"title":{},"body":{"classes/BlinkTab.html":{},"injectables/ChatEffects.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{}}}],["effect",{"_index":474,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/SettingsEffects.html":{}}}],["effect({dispatch",{"_index":454,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/SettingsEffects.html":{}}}],["effects",{"_index":441,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/SettingsEffects.html":{}}}],["effectsmodule",{"_index":520,"title":{},"body":{"modules/CoreModule.html":{}}}],["effectsmodule.forroot([settingseffects",{"_index":535,"title":{},"body":{"modules/CoreModule.html":{}}}],["eg",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["eg.json",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["element",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["elementref",{"_index":347,"title":{},"body":{"components/ChatComponent.html":{},"components/SettingsComponent.html":{}}}],["elements",{"_index":354,"title":{},"body":{"components/ChatComponent.html":{}}}],["embed",{"_index":894,"title":{},"body":{"pipes/ParserPipe.html":{}}}],["emit",{"_index":1052,"title":{},"body":{"injectables/SocketioService.html":{}}}],["emoji",{"_index":319,"title":{},"body":{"components/ChatComponent.html":{},"modules/ChatModule.html":{},"dependencies.html":{},"index.html":{}}}],["emojishow",{"_index":306,"title":{},"body":{"components/ChatComponent.html":{}}}],["en",{"_index":569,"title":{},"body":{"interfaces/ISettingsState.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/variables.html":{}}}],["enabled",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["enableproductionmode",{"_index":637,"title":{},"body":{"classes/Logger.html":{}}}],["enables",{"_index":659,"title":{},"body":{"classes/Logger.html":{}}}],["end",{"_index":824,"title":{},"body":{"components/MessageComponent.html":{},"index.html":{}}}],["english",{"_index":1191,"title":{},"body":{"index.html":{}}}],["enter",{"_index":281,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"miscellaneous/enumerations.html":{}}}],["enterance",{"_index":1205,"title":{},"body":{"index.html":{}}}],["entered",{"_index":1206,"title":{},"body":{"index.html":{}}}],["entry",{"_index":1268,"title":{},"body":{"index.html":{}}}],["enum",{"_index":242,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Logger.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":1136,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enus",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["env/environment",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"components/SettingsComponent.html":{},"injectables/SocketioService.html":{}}}],["env/environment.prod",{"_index":564,"title":{},"body":{"interfaces/ISettingsState.html":{}}}],["environment",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"interfaces/ISettingsState.html":{},"components/SettingsComponent.html":{},"injectables/SocketioService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["environment.defaultusername",{"_index":566,"title":{},"body":{"interfaces/ISettingsState.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"miscellaneous/enumerations.html":{}}}],["environment.serverurl",{"_index":1063,"title":{},"body":{"injectables/SocketioService.html":{}}}],["environment.supportedlanguages",{"_index":975,"title":{},"body":{"components/SettingsComponent.html":{}}}],["environments",{"_index":1258,"title":{},"body":{"index.html":{}}}],["error",{"_index":545,"title":{},"body":{"modules/CoreModule.html":{},"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["error(...objects",{"_index":664,"title":{},"body":{"classes/Logger.html":{}}}],["error(errormessage",{"_index":632,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["errormessage",{"_index":627,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["errors",{"_index":1156,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["esettingsactions",{"_index":270,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{}}}],["esettingsactions.changeclock",{"_index":269,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"injectables/SettingsEffects.html":{}}}],["esettingsactions.changelanguage",{"_index":287,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"injectables/SettingsEffects.html":{}}}],["esettingsactions.changename",{"_index":283,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"injectables/SettingsEffects.html":{}}}],["esettingsactions.changesendonenter",{"_index":286,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"injectables/SettingsEffects.html":{}}}],["esettingsactions.changetheme",{"_index":285,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"injectables/SettingsEffects.html":{}}}],["esettingsactions.reset",{"_index":288,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"injectables/SettingsEffects.html":{}}}],["esettingsactions.setuserid",{"_index":284,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"injectables/SettingsEffects.html":{}}}],["ev",{"_index":321,"title":{},"body":{"components/ChatComponent.html":{}}}],["ev.emoji.native",{"_index":400,"title":{},"body":{"components/ChatComponent.html":{}}}],["event",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChatEffects.html":{},"injectables/SocketioService.html":{}}}],["event[\"title",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["example",{"_index":1160,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["exists",{"_index":596,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["expected",{"_index":628,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["explicit",{"_index":901,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["export",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"modules/MaterialModule.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"pipes/ParserPipe.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SocketioService.html":{},"modules/TestingModule.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["exports",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"modules/MaterialModule.html":{},"injectables/MockStore.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TestingModule.html":{},"overview.html":{}}}],["extends",{"_index":837,"title":{},"body":{"injectables/MockStore.html":{},"classes/RouteReusableStrategy.html":{},"injectables/SocketioService.html":{},"modules/TestingModule.html":{}}}],["extract",{"_index":499,"title":{},"body":{"modules/ChatRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["extract('settings",{"_index":1041,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["extract(\\\"chat",{"_index":500,"title":{},"body":{"modules/ChatRoutingModule.html":{}}}],["extract(s",{"_index":532,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/functions.html":{}}}],["fallback",{"_index":217,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["false",{"_index":344,"title":{},"body":{"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"classes/RouteReusableStrategy.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/variables.html":{}}}],["favico.js",{"_index":1220,"title":{},"body":{"index.html":{}}}],["feature",{"_index":694,"title":{},"body":{"modules/MaterialModule.html":{}}}],["features",{"_index":1189,"title":{},"body":{"index.html":{}}}],["fff",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{}}}],["field",{"_index":997,"title":{},"body":{"components/SettingsComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"modules/MaterialModule.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"pipes/ParserPipe.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SocketioService.html":{},"modules/TestingModule.html":{},"classes/UnreadCount.html":{},"coverage.html":{}}}],["files",{"_index":1265,"title":{},"body":{"index.html":{}}}],["filter",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["filter(route",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["final",{"_index":777,"title":{},"body":{"components/MessageComponent.html":{}}}],["first",{"_index":367,"title":{},"body":{"components/ChatComponent.html":{},"injectables/ChatEffects.html":{}}}],["fix",{"_index":826,"title":{},"body":{"components/MessageComponent.html":{}}}],["fixed",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["flex",{"_index":413,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{}}}],["flexlayoutmodule",{"_index":488,"title":{},"body":{"modules/ChatModule.html":{},"modules/SettingsModule.html":{}}}],["floated",{"_index":1203,"title":{},"body":{"index.html":{}}}],["focus",{"_index":417,"title":{},"body":{"components/ChatComponent.html":{},"components/SettingsComponent.html":{}}}],["folder",{"_index":1230,"title":{},"body":{"index.html":{}}}],["font",{"_index":999,"title":{},"body":{"components/SettingsComponent.html":{}}}],["fonts",{"_index":1257,"title":{},"body":{"index.html":{}}}],["format",{"_index":747,"title":{},"body":{"components/MessageComponent.html":{}}}],["formsmodule",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/SettingsModule.html":{}}}],["full",{"_index":223,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ChatRoutingModule.html":{},"index.html":{}}}],["func",{"_index":671,"title":{},"body":{"classes/Logger.html":{}}}],["function",{"_index":531,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/IAppState.html":{},"classes/Logger.html":{},"injectables/MockStore.html":{},"modules/TestingModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":1171,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["future",{"_index":922,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["future.data.reuse",{"_index":928,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["future.routeconfig",{"_index":926,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["getinitialstate",{"_index":559,"title":{},"body":{"interfaces/IAppState.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getitem",{"_index":578,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getitem(key",{"_index":583,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getlanguages",{"_index":968,"title":{},"body":{"components/SettingsComponent.html":{}}}],["getting",{"_index":1184,"title":{"index.html":{}},"body":{}}],["given",{"_index":905,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["global",{"_index":1261,"title":{},"body":{"index.html":{}}}],["go",{"_index":1228,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1281,"title":{},"body":{"modules.html":{}}}],["grouping",{"_index":1225,"title":{},"body":{"index.html":{}}}],["guard",{"_index":543,"title":{},"body":{"modules/CoreModule.html":{}}}],["guest",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guides",{"_index":1248,"title":{},"body":{"index.html":{}}}],["hammerjs",{"_index":1122,"title":{},"body":{"dependencies.html":{}}}],["handler",{"_index":676,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/typealiases.html":{}}}],["happened",{"_index":1165,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["height",{"_index":404,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{}}}],["hh:mm",{"_index":783,"title":{},"body":{"components/MessageComponent.html":{}}}],["history",{"_index":1218,"title":{},"body":{"index.html":{}}}],["host",{"_index":427,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{}}}],["howlerjs",{"_index":1224,"title":{},"body":{"index.html":{}}}],["html",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"index.html":{}}}],["http://localhost:3000",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":507,"title":{},"body":{"modules/CoreModule.html":{}}}],["httpclientmodule",{"_index":508,"title":{},"body":{"modules/CoreModule.html":{}}}],["https://github.com/angular/angular/issues/18374",{"_index":904,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["https://material.angular.io/guide/getting",{"_index":696,"title":{},"body":{"modules/MaterialModule.html":{}}}],["https?:\\/\\/)?(?:m\\.|www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w",{"_index":876,"title":{},"body":{"pipes/ParserPipe.html":{}}}],["iappstate",{"_index":68,"title":{"interfaces/IAppState.html":{}},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"interfaces/IAppState.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ichatstate",{"_index":76,"title":{"interfaces/IChatState.html":{}},"body":{"components/AppComponent.html":{},"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["icon",{"_index":1002,"title":{},"body":{"components/SettingsComponent.html":{}}}],["iconfont",{"_index":1128,"title":{},"body":{"dependencies.html":{}}}],["icons",{"_index":1127,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"interfaces/IUser.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"miscellaneous/enumerations.html":{}}}],["identifier",{"_index":1069,"title":{},"body":{"coverage.html":{}}}],["if(chat.blink",{"_index":382,"title":{},"body":{"components/ChatComponent.html":{}}}],["if(chat.unread",{"_index":384,"title":{},"body":{"components/ChatComponent.html":{}}}],["if(ev",{"_index":393,"title":{},"body":{"components/ChatComponent.html":{}}}],["if(state.router.state.url",{"_index":469,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["if(this.messagefield.nativeelement.value",{"_index":398,"title":{},"body":{"components/ChatComponent.html":{}}}],["images",{"_index":1199,"title":{},"body":{"index.html":{}}}],["img",{"_index":878,"title":{},"body":{"pipes/ParserPipe.html":{}}}],["implementation",{"_index":1190,"title":{},"body":{"index.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"pipes/ParserPipe.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{}}}],["import",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"injectables/LocalStorageService.html":{},"modules/MaterialModule.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"pipes/ParserPipe.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SocketioService.html":{},"modules/TestingModule.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{}}}],["imports",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"modules/MaterialModule.html":{},"injectables/MockStore.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TestingModule.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SocketioService.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":1267,"title":{},"body":{"index.html":{}}}],["infinite",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"modules/MaterialModule.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"pipes/ParserPipe.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SocketioService.html":{},"modules/TestingModule.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{}}}],["info(...objects",{"_index":666,"title":{},"body":{"classes/Logger.html":{}}}],["information",{"_index":1150,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["informative",{"_index":1151,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["init",{"_index":951,"title":{},"body":{"components/SettingsComponent.html":{},"index.html":{}}}],["initial",{"_index":769,"title":{},"body":{"components/MessageComponent.html":{}}}],["initialappstate",{"_index":558,"title":{},"body":{"interfaces/IAppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialchatstate",{"_index":554,"title":{},"body":{"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialize",{"_index":1043,"title":{},"body":{"injectables/SocketioService.html":{}}}],["initialsettingsstate",{"_index":556,"title":{},"body":{"interfaces/IAppState.html":{},"interfaces/ISettingsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initstatefromlocalstorage",{"_index":1092,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["initstatefromlocalstorage(reducer",{"_index":1180,"title":{},"body":{"miscellaneous/functions.html":{}}}],["inject",{"_index":315,"title":{},"body":{"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{}}}],["injectable",{"_index":434,"title":{"injectables/ChatEffects.html":{},"injectables/LocalStorageService.html":{},"injectables/MockStore.html":{},"injectables/SettingsEffects.html":{},"injectables/SocketioService.html":{}},"body":{"injectables/ChatEffects.html":{},"injectables/LocalStorageService.html":{},"injectables/MockStore.html":{},"injectables/SettingsEffects.html":{},"injectables/SocketioService.html":{},"modules/TestingModule.html":{},"coverage.html":{}}}],["injectables",{"_index":436,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/LocalStorageService.html":{},"injectables/MockStore.html":{},"injectables/SettingsEffects.html":{},"injectables/SocketioService.html":{},"overview.html":{}}}],["input",{"_index":300,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"index.html":{}}}],["inputs",{"_index":748,"title":{},"body":{"components/MessageComponent.html":{}}}],["inset",{"_index":818,"title":{},"body":{"components/MessageComponent.html":{}}}],["install",{"_index":1232,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["interface",{"_index":549,"title":{"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"interfaces/Message.html":{}},"body":{"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"interfaces/Message.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":550,"title":{},"body":{"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"interfaces/Message.html":{},"overview.html":{}}}],["invert_colors",{"_index":983,"title":{},"body":{"components/SettingsComponent.html":{}}}],["io",{"_index":530,"title":{},"body":{"modules/CoreModule.html":{},"injectables/SocketioService.html":{},"dependencies.html":{}}}],["isettingsstate",{"_index":553,"title":{"interfaces/ISettingsState.html":{}},"body":{"interfaces/IAppState.html":{},"interfaces/ISettingsState.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["it's",{"_index":301,"title":{},"body":{"components/ChatComponent.html":{}}}],["item",{"_index":585,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["item.includes",{"_index":1028,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["items",{"_index":813,"title":{},"body":{"components/MessageComponent.html":{}}}],["iuser",{"_index":358,"title":{"interfaces/IUser.html":{}},"body":{"components/ChatComponent.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"interfaces/Message.html":{},"coverage.html":{}}}],["join",{"_index":614,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["jpeg|jpg|gif|png",{"_index":879,"title":{},"body":{"pipes/ParserPipe.html":{}}}],["js",{"_index":1120,"title":{},"body":{"dependencies.html":{}}}],["json.parse(localstorage.getitem(`${app_prefix}${key",{"_index":622,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json.parse(localstorage.getitem(storagekey",{"_index":619,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json.stringify(value",{"_index":621,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["key",{"_index":586,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["keyframes",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["keys",{"_index":600,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":998,"title":{},"body":{"components/SettingsComponent.html":{}}}],["language",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"interfaces/ISettingsState.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["languages",{"_index":947,"title":{},"body":{"components/SettingsComponent.html":{},"index.html":{}}}],["lanuch",{"_index":1239,"title":{},"body":{"index.html":{}}}],["launch",{"_index":1237,"title":{},"body":{"index.html":{}}}],["layout",{"_index":490,"title":{},"body":{"modules/ChatModule.html":{},"modules/SettingsModule.html":{},"dependencies.html":{}}}],["leave",{"_index":331,"title":{},"body":{"components/ChatComponent.html":{}}}],["leaving",{"_index":1207,"title":{},"body":{"index.html":{}}}],["left",{"_index":430,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{},"index.html":{}}}],["left;align",{"_index":830,"title":{},"body":{"components/MessageComponent.html":{}}}],["legend",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"overview.html":{}}}],["level",{"_index":634,"title":{},"body":{"classes/Logger.html":{}}}],["level].concat(objects",{"_index":687,"title":{},"body":{"classes/Logger.html":{}}}],["levels",{"_index":1147,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["light",{"_index":567,"title":{},"body":{"interfaces/ISettingsState.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["linear",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["list",{"_index":346,"title":{},"body":{"components/ChatComponent.html":{}}}],["listen,emit",{"_index":1045,"title":{},"body":{"injectables/SocketioService.html":{}}}],["listner",{"_index":1056,"title":{},"body":{"injectables/SocketioService.html":{}}}],["load",{"_index":589,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["loaded",{"_index":547,"title":{},"body":{"modules/CoreModule.html":{}}}],["loadinitialstate",{"_index":580,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["local",{"_index":576,"title":{},"body":{"injectables/LocalStorageService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["localhost:4200",{"_index":1241,"title":{},"body":{"index.html":{}}}],["localstorage",{"_index":464,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/LocalStorageService.html":{},"injectables/SettingsEffects.html":{},"index.html":{}}}],["localstorage.removeitem(`${app_prefix}${key",{"_index":623,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.setitem(`${app_prefix}${key",{"_index":620,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorageservice",{"_index":446,"title":{"injectables/LocalStorageService.html":{}},"body":{"injectables/ChatEffects.html":{},"modules/CoreModule.html":{},"injectables/LocalStorageService.html":{},"injectables/SettingsEffects.html":{},"coverage.html":{},"overview.html":{}}}],["lodash",{"_index":1124,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"classes/Logger.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["log(func",{"_index":668,"title":{},"body":{"classes/Logger.html":{}}}],["log.debug('something",{"_index":1164,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logger",{"_index":64,"title":{"classes/Logger.html":{}},"body":{"components/AppComponent.html":{},"classes/Logger.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["logger(\"app",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["logger('myfile",{"_index":1163,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logger.enableproductionmode",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/enumerations.html":{}}}],["logger.level",{"_index":677,"title":{},"body":{"classes/Logger.html":{}}}],["logger.outputs",{"_index":1172,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logging",{"_index":644,"title":{},"body":{"classes/Logger.html":{}}}],["loglevel",{"_index":669,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["loglevel.debug",{"_index":642,"title":{},"body":{"classes/Logger.html":{}}}],["loglevel.error",{"_index":684,"title":{},"body":{"classes/Logger.html":{}}}],["loglevel.info",{"_index":681,"title":{},"body":{"classes/Logger.html":{}}}],["loglevel.off",{"_index":645,"title":{},"body":{"classes/Logger.html":{}}}],["loglevel.warning",{"_index":663,"title":{},"body":{"classes/Logger.html":{}}}],["logoutput",{"_index":649,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["logs",{"_index":647,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["ltr",{"_index":1017,"title":{},"body":{"injectables/SettingsEffects.html":{},"index.html":{}}}],["main",{"_index":1234,"title":{},"body":{"index.html":{}}}],["main.scss",{"_index":1270,"title":{},"body":{"index.html":{}}}],["main.ts",{"_index":1271,"title":{},"body":{"index.html":{}}}],["map",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"injectables/LocalStorageService.html":{},"injectables/SettingsEffects.html":{}}}],["map((action",{"_index":450,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["map(key",{"_index":610,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["map(settings",{"_index":376,"title":{},"body":{"components/ChatComponent.html":{},"injectables/SettingsEffects.html":{}}}],["margin",{"_index":408,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["mart",{"_index":423,"title":{},"body":{"components/ChatComponent.html":{},"modules/ChatModule.html":{},"dependencies.html":{}}}],["mat",{"_index":418,"title":{},"body":{"components/ChatComponent.html":{},"components/SettingsComponent.html":{}}}],["matautocompletemodule",{"_index":701,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbadgemodule",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttonmodule",{"_index":702,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttontogglemodule",{"_index":703,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":704,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":884,"title":{},"body":{"pipes/ParserPipe.html":{}}}],["match.buildtag",{"_index":890,"title":{},"body":{"pipes/ParserPipe.html":{}}}],["match.getanchorhref",{"_index":886,"title":{},"body":{"pipes/ParserPipe.html":{}}}],["match.gettype",{"_index":887,"title":{},"body":{"pipes/ParserPipe.html":{}}}],["matcheckboxmodule",{"_index":705,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matched",{"_index":219,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["matching",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"modules/MaterialModule.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"pipes/ParserPipe.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SocketioService.html":{},"modules/TestingModule.html":{},"classes/UnreadCount.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":706,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcommonmodule",{"_index":707,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdatepickermodule",{"_index":708,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialogmodule",{"_index":709,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdividermodule",{"_index":710,"title":{},"body":{"modules/MaterialModule.html":{}}}],["material",{"_index":691,"title":{},"body":{"modules/MaterialModule.html":{},"dependencies.html":{},"index.html":{}}}],["material.module",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["materialmodule",{"_index":185,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/MaterialModule.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":711,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matformfieldmodule",{"_index":712,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matgridlistmodule",{"_index":713,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonmodule",{"_index":714,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":715,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlinemodule",{"_index":716,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistitem",{"_index":363,"title":{},"body":{"components/ChatComponent.html":{}}}],["matlistmodule",{"_index":717,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodule",{"_index":718,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matnativedatemodule",{"_index":719,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matoptionmodule",{"_index":720,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matpaginatormodule",{"_index":721,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressbarmodule",{"_index":722,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":723,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matpseudocheckboxmodule",{"_index":724,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matradiomodule",{"_index":725,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matripplemodule",{"_index":726,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectmodule",{"_index":727,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenavmodule",{"_index":728,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidermodule",{"_index":729,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodule",{"_index":730,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbarmodule",{"_index":731,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsortmodule",{"_index":732,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsteppermodule",{"_index":733,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattablemodule",{"_index":734,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabsmodule",{"_index":735,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":736,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":737,"title":{},"body":{"modules/MaterialModule.html":{}}}],["max",{"_index":801,"title":{},"body":{"components/MessageComponent.html":{}}}],["media",{"_index":797,"title":{},"body":{"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["merge",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["merge(this.translateservice.onlangchange",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["mergemap",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["mergemap(route",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":72,"title":{"interfaces/Message.html":{}},"body":{"components/AppComponent.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"interfaces/IChatState.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"injectables/SocketioService.html":{},"classes/UnreadCount.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["message'},{'name",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["message.component.html",{"_index":746,"title":{},"body":{"components/MessageComponent.html":{}}}],["message.component.scss",{"_index":745,"title":{},"body":{"components/MessageComponent.html":{}}}],["message.time",{"_index":785,"title":{},"body":{"components/MessageComponent.html":{}}}],["message.user?.username",{"_index":784,"title":{},"body":{"components/MessageComponent.html":{}}}],["message/message.component",{"_index":496,"title":{},"body":{"modules/ChatModule.html":{}}}],["message/parser.pipe",{"_index":497,"title":{},"body":{"modules/ChatModule.html":{}}}],["messagecomponent",{"_index":162,"title":{"components/MessageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"modules/ChatModule.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["messagefield",{"_index":307,"title":{},"body":{"components/ChatComponent.html":{}}}],["messages",{"_index":255,"title":{},"body":{"classes/BlinkTab.html":{},"components/ChatComponent.html":{},"interfaces/IChatState.html":{},"classes/Logger.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["messagesitems",{"_index":308,"title":{},"body":{"components/ChatComponent.html":{}}}],["meta",{"_index":803,"title":{},"body":{"components/MessageComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"pipes/ParserPipe.html":{},"components/SettingsComponent.html":{}}}],["metareducer",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metareducers",{"_index":524,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["method",{"_index":1021,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["methods",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"pipes/ParserPipe.html":{},"classes/RouteReusableStrategy.html":{},"components/SettingsComponent.html":{},"injectables/SocketioService.html":{},"miscellaneous/enumerations.html":{}}}],["middle",{"_index":1004,"title":{},"body":{"components/SettingsComponent.html":{}}}],["min",{"_index":799,"title":{},"body":{"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["miscellaneous",{"_index":1135,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mockstore",{"_index":833,"title":{"injectables/MockStore.html":{}},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mode",{"_index":661,"title":{},"body":{"classes/Logger.html":{}}}],["model",{"_index":571,"title":{},"body":{"interfaces/IUser.html":{},"interfaces/Message.html":{}}}],["models/message.interface",{"_index":1060,"title":{},"body":{"injectables/SocketioService.html":{}}}],["module",{"_index":170,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"modules/MaterialModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TestingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/MaterialModule.html":{},"modules/SettingsModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":172,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"modules/MaterialModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TestingModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["msg",{"_index":394,"title":{},"body":{"components/ChatComponent.html":{},"injectables/SocketioService.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"pipes/ParserPipe.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SocketioService.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nav",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["navigate",{"_index":1231,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationend",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["needed",{"_index":693,"title":{},"body":{"modules/MaterialModule.html":{},"index.html":{}}}],["new",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"modules/CoreModule.html":{},"injectables/LocalStorageService.html":{},"injectables/MockStore.html":{},"modules/TestingModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["nextstate",{"_index":849,"title":{},"body":{"injectables/MockStore.html":{}}}],["ng",{"_index":403,"title":{},"body":{"components/ChatComponent.html":{}}}],["ngafterviewinit",{"_index":311,"title":{},"body":{"components/ChatComponent.html":{},"components/SettingsComponent.html":{}}}],["ngmodule",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"modules/MaterialModule.html":{},"injectables/MockStore.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TestingModule.html":{}}}],["ngondestroy",{"_index":312,"title":{},"body":{"components/ChatComponent.html":{}}}],["ngoninit",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["ngrx",{"_index":1187,"title":{},"body":{"index.html":{}}}],["ngrx/core",{"_index":1115,"title":{},"body":{"dependencies.html":{}}}],["ngrx/effects",{"_index":475,"title":{},"body":{"injectables/ChatEffects.html":{},"modules/CoreModule.html":{},"injectables/SettingsEffects.html":{},"dependencies.html":{}}}],["ngrx/router",{"_index":522,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/IAppState.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"modules/CoreModule.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/TestingModule.html":{},"classes/UnreadCount.html":{},"dependencies.html":{}}}],["ngscrollbar",{"_index":355,"title":{},"body":{"components/ChatComponent.html":{}}}],["ngscrollbarmodule",{"_index":494,"title":{},"body":{"modules/ChatModule.html":{}}}],["ngx",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"injectables/MockStore.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"injectables/SocketioService.html":{},"modules/TestingModule.html":{},"dependencies.html":{}}}],["nice",{"_index":1201,"title":{},"body":{"index.html":{}}}],["non",{"_index":1154,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["none",{"_index":411,"title":{},"body":{"components/ChatComponent.html":{}}}],["noopanimationsmodule",{"_index":851,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["normal",{"_index":1158,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notifications",{"_index":1219,"title":{},"body":{"index.html":{}}}],["npm",{"_index":1233,"title":{},"body":{"index.html":{}}}],["null",{"_index":914,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["number",{"_index":263,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"interfaces/IChatState.html":{},"interfaces/IUser.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"classes/UnreadCount.html":{}}}],["object",{"_index":340,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{},"miscellaneous/variables.html":{}}}],["object.keys(localstorage).reduce((state",{"_index":603,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["objects",{"_index":654,"title":{},"body":{"classes/Logger.html":{}}}],["observable",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["oftype",{"_index":458,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/SettingsEffects.html":{}}}],["oftype(echatactions.reveivemsg",{"_index":465,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["oftype(echatactions.sendmessage",{"_index":449,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["once",{"_index":1209,"title":{},"body":{"index.html":{}}}],["one",{"_index":1059,"title":{},"body":{"injectables/SocketioService.html":{},"index.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["onlanguageselect",{"_index":941,"title":{},"body":{"components/SettingsComponent.html":{}}}],["onlanguageselect(language",{"_index":953,"title":{},"body":{"components/SettingsComponent.html":{}}}],["onnavigationend",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["onsendonentertoggle",{"_index":942,"title":{},"body":{"components/SettingsComponent.html":{}}}],["onsendonentertoggle(sendonenter",{"_index":955,"title":{},"body":{"components/SettingsComponent.html":{}}}],["onthemechange",{"_index":943,"title":{},"body":{"components/SettingsComponent.html":{}}}],["onthemechange(theme",{"_index":958,"title":{},"body":{"components/SettingsComponent.html":{}}}],["ontimedisplaychange",{"_index":944,"title":{},"body":{"components/SettingsComponent.html":{}}}],["ontimedisplaychange(clock",{"_index":960,"title":{},"body":{"components/SettingsComponent.html":{}}}],["onusernamechange",{"_index":945,"title":{},"body":{"components/SettingsComponent.html":{}}}],["onusernamechange(name",{"_index":962,"title":{},"body":{"components/SettingsComponent.html":{}}}],["opacity",{"_index":768,"title":{},"body":{"components/MessageComponent.html":{}}}],["open",{"_index":1240,"title":{},"body":{"index.html":{}}}],["optimize",{"_index":699,"title":{},"body":{"modules/MaterialModule.html":{}}}],["optional",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"modules/CoreModule.html":{},"interfaces/IAppState.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"pipes/ParserPipe.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SocketioService.html":{},"classes/UnreadCount.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":302,"title":{},"body":{"components/ChatComponent.html":{},"injectables/SocketioService.html":{}}}],["order",{"_index":811,"title":{},"body":{"components/MessageComponent.html":{}}}],["origin",{"_index":810,"title":{},"body":{"components/MessageComponent.html":{}}}],["out",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/SettingsModule.html":{},"overview.html":{}}}],["outline",{"_index":412,"title":{},"body":{"components/ChatComponent.html":{}}}],["output",{"_index":675,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/typealiases.html":{}}}],["output.apply(output",{"_index":685,"title":{},"body":{"classes/Logger.html":{}}}],["outputs",{"_index":635,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["overview",{"_index":1283,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1106,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":402,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{}}}],["page",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"index.html":{}}}],["parameters",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"pipes/ParserPipe.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SocketioService.html":{},"classes/UnreadCount.html":{},"miscellaneous/functions.html":{}}}],["parentmodule",{"_index":542,"title":{},"body":{"modules/CoreModule.html":{}}}],["parse",{"_index":1197,"title":{},"body":{"index.html":{}}}],["parser",{"_index":863,"title":{},"body":{"pipes/ParserPipe.html":{},"index.html":{}}}],["parserpipe",{"_index":483,"title":{"pipes/ParserPipe.html":{}},"body":{"modules/ChatModule.html":{},"pipes/ParserPipe.html":{},"coverage.html":{},"overview.html":{}}}],["path",{"_index":220,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ChatRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["pathmatch",{"_index":222,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ChatRoutingModule.html":{}}}],["payload",{"_index":232,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"classes/UnreadCount.html":{}}}],["people",{"_index":1204,"title":{},"body":{"index.html":{}}}],["persistsettings",{"_index":443,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/SettingsEffects.html":{}}}],["pickermodule",{"_index":491,"title":{},"body":{"modules/ChatModule.html":{}}}],["pipe",{"_index":120,"title":{"pipes/ParserPipe.html":{}},"body":{"components/AppComponent.html":{},"components/MessageComponent.html":{},"pipes/ParserPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":861,"title":{},"body":{"pipes/ParserPipe.html":{}}}],["pipetransform",{"_index":870,"title":{},"body":{"pipes/ParserPipe.html":{}}}],["point",{"_index":1269,"title":{},"body":{"index.html":{}}}],["polyfills",{"_index":1273,"title":{},"body":{"index.html":{}}}],["polyfills.ts",{"_index":1272,"title":{},"body":{"index.html":{}}}],["position",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{}}}],["possibility",{"_index":1142,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["prefix",{"_index":599,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/variables.html":{}}}],["prevent",{"_index":1157,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["primary",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["prior",{"_index":218,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["private",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"classes/Logger.html":{},"injectables/MockStore.html":{},"injectables/SettingsEffects.html":{},"modules/TestingModule.html":{}}}],["process",{"_index":1168,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["production",{"_index":660,"title":{},"body":{"classes/Logger.html":{},"modules/MaterialModule.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1229,"title":{},"body":{"index.html":{}}}],["properties",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"classes/Logger.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SocketioService.html":{},"classes/UnreadCount.html":{}}}],["provide",{"_index":539,"title":{},"body":{"modules/CoreModule.html":{},"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["provided",{"_index":1148,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["providedin",{"_index":1061,"title":{},"body":{"injectables/SocketioService.html":{}}}],["providemockstore",{"_index":858,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["provider",{"_index":857,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{},"miscellaneous/functions.html":{}}}],["providers",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"injectables/MockStore.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TestingModule.html":{},"overview.html":{}}}],["public",{"_index":231,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"classes/UnreadCount.html":{}}}],["purposes",{"_index":836,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["querylist",{"_index":351,"title":{},"body":{"components/ChatComponent.html":{}}}],["radius",{"_index":415,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{}}}],["re",{"_index":689,"title":{},"body":{"modules/MaterialModule.html":{}}}],["read",{"_index":598,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["readonly",{"_index":233,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"classes/UnreadCount.html":{}}}],["receive",{"_index":245,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["received",{"_index":1054,"title":{},"body":{"injectables/SocketioService.html":{}}}],["receivemessage",{"_index":444,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["redirectto",{"_index":221,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ChatRoutingModule.html":{}}}],["reducer",{"_index":1181,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reducermanager",{"_index":844,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["reference",{"_index":343,"title":{},"body":{"components/ChatComponent.html":{},"components/SettingsComponent.html":{}}}],["registering",{"_index":1143,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["related",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["relative",{"_index":791,"title":{},"body":{"components/MessageComponent.html":{}}}],["remove",{"_index":324,"title":{},"body":{"components/ChatComponent.html":{},"injectables/LocalStorageService.html":{}}}],["removeitem",{"_index":581,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["removeitem(key",{"_index":590,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["replace(app_prefix",{"_index":607,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["replacefn",{"_index":883,"title":{},"body":{"pipes/ParserPipe.html":{}}}],["reports",{"_index":1276,"title":{},"body":{"index.html":{}}}],["reset",{"_index":188,"title":{"classes/Reset.html":{}},"body":{"modules/AppModule.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["restore",{"_index":1208,"title":{},"body":{"index.html":{}}}],["result",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"modules/MaterialModule.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"pipes/ParserPipe.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SocketioService.html":{},"modules/TestingModule.html":{},"classes/UnreadCount.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"modules/MaterialModule.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"pipes/ParserPipe.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SocketioService.html":{},"modules/TestingModule.html":{},"classes/UnreadCount.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":757,"title":{},"body":{"components/MessageComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SettingsComponent.html":{}}}],["retrieve(route",{"_index":910,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["retrievedvalue",{"_index":626,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["return",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"interfaces/IAppState.html":{},"injectables/LocalStorageService.html":{},"injectables/MockStore.html":{},"pipes/ParserPipe.html":{},"classes/RouteReusableStrategy.html":{},"components/SettingsComponent.html":{},"modules/TestingModule.html":{}}}],["returns",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"pipes/ParserPipe.html":{},"classes/RouteReusableStrategy.html":{},"components/SettingsComponent.html":{},"injectables/SocketioService.html":{},"miscellaneous/functions.html":{}}}],["reusable",{"_index":512,"title":{},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["reuse",{"_index":902,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["reveivemsg",{"_index":70,"title":{"classes/ReveiveMsg.html":{}},"body":{"components/AppComponent.html":{},"classes/BlinkTab.html":{},"injectables/ChatEffects.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["reveivemsg(m",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["right",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"index.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"injectables/SocketioService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["root'},{'name",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["route",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{}}}],["route.data",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["route.firstchild",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["route.outlet",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["router",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"interfaces/IAppState.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["routereusablestrategy",{"_index":511,"title":{"classes/RouteReusableStrategy.html":{}},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["routereusestrategy",{"_index":510,"title":{},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{}}}],["routermodule",{"_index":216,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":501,"title":{},"body":{"modules/ChatRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":224,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerreducer",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerreducerstate",{"_index":552,"title":{},"body":{"interfaces/IAppState.html":{}}}],["routertestingmodule",{"_index":852,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["routes",{"_index":215,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ChatRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"index.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/SettingsModule.html":{}}}],["routing.module.ts",{"_index":214,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ChatRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"index.html":{}}}],["rtl",{"_index":1018,"title":{},"body":{"injectables/SettingsEffects.html":{},"index.html":{}}}],["run",{"_index":1238,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"components/SettingsComponent.html":{},"modules/TestingModule.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"injectables/SettingsEffects.html":{}}}],["s",{"_index":533,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/functions.html":{}}}],["same",{"_index":656,"title":{},"body":{"classes/Logger.html":{},"index.html":{}}}],["save",{"_index":249,"title":{},"body":{"classes/BlinkTab.html":{},"components/ChatComponent.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["savecurrentmsg",{"_index":248,"title":{"classes/SaveCurrentMsg.html":{}},"body":{"classes/BlinkTab.html":{},"components/ChatComponent.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["savecurrentmsg(this.messagefield.nativeelement.value",{"_index":399,"title":{},"body":{"components/ChatComponent.html":{}}}],["saved",{"_index":1195,"title":{},"body":{"index.html":{}}}],["scale(0.5",{"_index":767,"title":{},"body":{"components/MessageComponent.html":{}}}],["scale(1",{"_index":776,"title":{},"body":{"components/MessageComponent.html":{}}}],["screen",{"_index":798,"title":{},"body":{"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["scroll",{"_index":326,"title":{},"body":{"components/ChatComponent.html":{},"index.html":{}}}],["scrollbar",{"_index":362,"title":{},"body":{"components/ChatComponent.html":{},"modules/ChatModule.html":{},"dependencies.html":{},"index.html":{}}}],["scrollbarref",{"_index":309,"title":{},"body":{"components/ChatComponent.html":{}}}],["scss",{"_index":1262,"title":{},"body":{"index.html":{}}}],["see",{"_index":695,"title":{},"body":{"modules/MaterialModule.html":{}}}],["select",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{}}}],["select(selectchat",{"_index":380,"title":{},"body":{"components/ChatComponent.html":{}}}],["select(selectsettings",{"_index":375,"title":{},"body":{"components/ChatComponent.html":{},"injectables/SettingsEffects.html":{}}}],["selectchat",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selection",{"_index":320,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["selectors/chat.selector",{"_index":478,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["selectsettings",{"_index":369,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["send",{"_index":247,"title":{},"body":{"classes/BlinkTab.html":{},"components/ChatComponent.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"components/SettingsComponent.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["sender",{"_index":741,"title":{},"body":{"interfaces/Message.html":{}}}],["sending",{"_index":279,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"miscellaneous/enumerations.html":{}}}],["sendmessage",{"_index":246,"title":{"classes/SendMessage.html":{}},"body":{"classes/BlinkTab.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["sendmessage(ev",{"_index":338,"title":{},"body":{"components/ChatComponent.html":{}}}],["sendmessage(msg",{"_index":397,"title":{},"body":{"components/ChatComponent.html":{}}}],["sendonenter",{"_index":563,"title":{},"body":{"interfaces/ISettingsState.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["sent",{"_index":739,"title":{},"body":{"interfaces/Message.html":{}}}],["sentiment_satisfied_alt",{"_index":401,"title":{},"body":{"components/ChatComponent.html":{}}}],["sequence",{"_index":1226,"title":{},"body":{"index.html":{}}}],["server",{"_index":456,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/SocketioService.html":{},"index.html":{}}}],["serverurl",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":575,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["services",{"_index":1253,"title":{},"body":{"index.html":{}}}],["services/local",{"_index":514,"title":{},"body":{"modules/CoreModule.html":{}}}],["serviceworkermodule",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register('./ngsw",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":273,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"miscellaneous/enumerations.html":{}}}],["setitem",{"_index":463,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/LocalStorageService.html":{},"injectables/SettingsEffects.html":{}}}],["setitem(key",{"_index":592,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["sets",{"_index":662,"title":{},"body":{"classes/Logger.html":{}}}],["setstate",{"_index":839,"title":{},"body":{"injectables/MockStore.html":{}}}],["setstate(nextstate",{"_index":846,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["settimeout",{"_index":386,"title":{},"body":{"components/ChatComponent.html":{},"components/SettingsComponent.html":{}}}],["settings",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"interfaces/IAppState.html":{},"components/MessageComponent.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["settings.clock",{"_index":782,"title":{},"body":{"components/MessageComponent.html":{}}}],["settings.component",{"_index":1039,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["settings.component.html",{"_index":939,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.scss",{"_index":938,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.language",{"_index":1012,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["settings.theme",{"_index":1022,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["settings.user",{"_index":377,"title":{},"body":{"components/ChatComponent.html":{}}}],["settings/settings.module",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["settings_backup_restore",{"_index":994,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settingsactions",{"_index":289,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/typealiases.html":{}}}],["settingscomponent",{"_index":164,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["settingseffects",{"_index":526,"title":{"injectables/SettingsEffects.html":{}},"body":{"modules/CoreModule.html":{},"injectables/SettingsEffects.html":{},"coverage.html":{}}}],["settingsmodule",{"_index":186,"title":{"modules/SettingsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["settingsreducers",{"_index":1094,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["settingsreducers(state",{"_index":1183,"title":{},"body":{"miscellaneous/functions.html":{}}}],["settingsroutingmodule",{"_index":1037,"title":{"modules/SettingsRoutingModule.html":{}},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["settingsstate",{"_index":1098,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["settingsview.clockdisplay",{"_index":988,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settingsview.hours",{"_index":990,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settingsview.interfacecolor",{"_index":984,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settingsview.language",{"_index":993,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settingsview.reset",{"_index":995,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settingsview.sendonenter",{"_index":992,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settingsview.username",{"_index":981,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settranslateservicelanguage",{"_index":1006,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["setup",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["setuserid",{"_index":74,"title":{"classes/SetUserID.html":{}},"body":{"components/AppComponent.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["setuserid(id",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["sh",{"_index":1243,"title":{},"body":{"index.html":{}}}],["shadow",{"_index":817,"title":{},"body":{"components/MessageComponent.html":{}}}],["shell",{"_index":1254,"title":{},"body":{"index.html":{}}}],["shouldattach",{"_index":907,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldattach(route",{"_index":915,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shoulddetach",{"_index":908,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shoulddetach(route",{"_index":917,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldreuseroute",{"_index":909,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldreuseroute(future",{"_index":919,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["show/hide",{"_index":345,"title":{},"body":{"components/ChatComponent.html":{}}}],["side",{"_index":440,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/SettingsEffects.html":{}}}],["simple",{"_index":1140,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["singleton",{"_index":1252,"title":{},"body":{"index.html":{}}}],["size",{"_index":1000,"title":{},"body":{"components/SettingsComponent.html":{}}}],["skipself",{"_index":506,"title":{},"body":{"modules/CoreModule.html":{}}}],["slider",{"_index":957,"title":{},"body":{"components/SettingsComponent.html":{}}}],["snippet",{"_index":1166,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["socket",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChatEffects.html":{},"modules/CoreModule.html":{},"injectables/SocketioService.html":{},"dependencies.html":{}}}],["socket.io",{"_index":1188,"title":{},"body":{"index.html":{}}}],["socketiomodule",{"_index":529,"title":{},"body":{"modules/CoreModule.html":{}}}],["socketioservice",{"_index":35,"title":{"injectables/SocketioService.html":{}},"body":{"components/AppComponent.html":{},"injectables/ChatEffects.html":{},"modules/ChatModule.html":{},"injectables/SocketioService.html":{},"coverage.html":{},"overview.html":{}}}],["sounds",{"_index":1221,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"modules/MaterialModule.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"pipes/ParserPipe.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SocketioService.html":{},"modules/TestingModule.html":{},"classes/UnreadCount.html":{},"index.html":{}}}],["split",{"_index":609,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["sprite",{"_index":1223,"title":{},"body":{"index.html":{}}}],["src",{"_index":1250,"title":{},"body":{"index.html":{}}}],["src/.../app.component.ts",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.reducers.ts",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.state.ts",{"_index":1175,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../chat.actions.ts",{"_index":1137,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../chat.reducer.ts",{"_index":1173,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../chat.selector.ts",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../chat.state.ts",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../core.module.ts",{"_index":1174,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":1176,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../logger.service.ts",{"_index":1139,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../settings.actions.ts",{"_index":1138,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../settings.reducer.ts",{"_index":1178,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../settings.selector.ts",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../settings.state.ts",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":1177,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":213,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts:30",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:43",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/chat/chat",{"_index":498,"title":{},"body":{"modules/ChatRoutingModule.html":{}}}],["src/app/chat/chat.component.ts",{"_index":298,"title":{},"body":{"components/ChatComponent.html":{},"coverage.html":{}}}],["src/app/chat/chat.component.ts:106",{"_index":328,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/chat/chat.component.ts:114",{"_index":317,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/chat/chat.component.ts:25",{"_index":350,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/chat/chat.component.ts:29",{"_index":357,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/chat/chat.component.ts:33",{"_index":353,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/chat/chat.component.ts:37",{"_index":342,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/chat/chat.component.ts:41",{"_index":359,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/chat/chat.component.ts:45",{"_index":314,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/chat/chat.component.ts:55",{"_index":332,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/chat/chat.component.ts:78",{"_index":323,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/chat/chat.component.ts:93",{"_index":339,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/chat/chat.module.ts",{"_index":485,"title":{},"body":{"modules/ChatModule.html":{}}}],["src/app/chat/message/message.component.ts",{"_index":743,"title":{},"body":{"components/MessageComponent.html":{},"coverage.html":{}}}],["src/app/chat/message/message.component.ts:30",{"_index":750,"title":{},"body":{"components/MessageComponent.html":{}}}],["src/app/chat/message/message.component.ts:34",{"_index":756,"title":{},"body":{"components/MessageComponent.html":{}}}],["src/app/chat/message/message.component.ts:38",{"_index":749,"title":{},"body":{"components/MessageComponent.html":{}}}],["src/app/chat/message/message.component.ts:46",{"_index":754,"title":{},"body":{"components/MessageComponent.html":{}}}],["src/app/chat/message/parser.pipe.ts",{"_index":862,"title":{},"body":{"pipes/ParserPipe.html":{},"coverage.html":{}}}],["src/app/chat/message/parser.pipe.ts:10",{"_index":869,"title":{},"body":{"pipes/ParserPipe.html":{}}}],["src/app/chat/message/parser.pipe.ts:13",{"_index":866,"title":{},"body":{"pipes/ParserPipe.html":{}}}],["src/app/core/core.module.ts",{"_index":505,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/logger.service.ts",{"_index":633,"title":{},"body":{"classes/Logger.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/logger.service.ts:101",{"_index":665,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/core/logger.service.ts:107",{"_index":670,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/core/logger.service.ts:56",{"_index":643,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/core/logger.service.ts:61",{"_index":650,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/core/logger.service.ts:67",{"_index":658,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/core/logger.service.ts:69",{"_index":640,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/core/logger.service.ts:77",{"_index":653,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/core/logger.service.ts:85",{"_index":667,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/core/logger.service.ts:93",{"_index":673,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/core/models/message.interface.ts",{"_index":738,"title":{},"body":{"interfaces/Message.html":{},"coverage.html":{}}}],["src/app/core/models/user.interface.ts",{"_index":570,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/app/core/route",{"_index":898,"title":{},"body":{"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["src/app/core/services/local",{"_index":573,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/socketio/socketio.service.ts",{"_index":1042,"title":{},"body":{"injectables/SocketioService.html":{},"coverage.html":{}}}],["src/app/core/services/socketio/socketio.service.ts:16",{"_index":1055,"title":{},"body":{"injectables/SocketioService.html":{}}}],["src/app/core/services/socketio/socketio.service.ts:20",{"_index":1049,"title":{},"body":{"injectables/SocketioService.html":{}}}],["src/app/core/services/socketio/socketio.service.ts:33",{"_index":1051,"title":{},"body":{"injectables/SocketioService.html":{}}}],["src/app/core/store/actions/chat.actions.ts",{"_index":227,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/store/actions/chat.actions.ts:17",{"_index":896,"title":{},"body":{"classes/ReveiveMsg.html":{}}}],["src/app/core/store/actions/chat.actions.ts:18",{"_index":897,"title":{},"body":{"classes/ReveiveMsg.html":{}}}],["src/app/core/store/actions/chat.actions.ts:24",{"_index":929,"title":{},"body":{"classes/SaveCurrentMsg.html":{}}}],["src/app/core/store/actions/chat.actions.ts:25",{"_index":930,"title":{},"body":{"classes/SaveCurrentMsg.html":{}}}],["src/app/core/store/actions/chat.actions.ts:31",{"_index":931,"title":{},"body":{"classes/SendMessage.html":{}}}],["src/app/core/store/actions/chat.actions.ts:32",{"_index":932,"title":{},"body":{"classes/SendMessage.html":{}}}],["src/app/core/store/actions/chat.actions.ts:38",{"_index":236,"title":{},"body":{"classes/BlinkTab.html":{}}}],["src/app/core/store/actions/chat.actions.ts:39",{"_index":237,"title":{},"body":{"classes/BlinkTab.html":{}}}],["src/app/core/store/actions/chat.actions.ts:45",{"_index":1065,"title":{},"body":{"classes/UnreadCount.html":{}}}],["src/app/core/store/actions/chat.actions.ts:46",{"_index":1066,"title":{},"body":{"classes/UnreadCount.html":{}}}],["src/app/core/store/actions/settings.actions.ts",{"_index":266,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/store/actions/settings.actions.ts:18",{"_index":292,"title":{},"body":{"classes/ChangeName.html":{}}}],["src/app/core/store/actions/settings.actions.ts:19",{"_index":293,"title":{},"body":{"classes/ChangeName.html":{}}}],["src/app/core/store/actions/settings.actions.ts:25",{"_index":933,"title":{},"body":{"classes/SetUserID.html":{}}}],["src/app/core/store/actions/settings.actions.ts:26",{"_index":934,"title":{},"body":{"classes/SetUserID.html":{}}}],["src/app/core/store/actions/settings.actions.ts:32",{"_index":296,"title":{},"body":{"classes/ChangeTheme.html":{}}}],["src/app/core/store/actions/settings.actions.ts:33",{"_index":297,"title":{},"body":{"classes/ChangeTheme.html":{}}}],["src/app/core/store/actions/settings.actions.ts:39",{"_index":267,"title":{},"body":{"classes/ChangeClock.html":{}}}],["src/app/core/store/actions/settings.actions.ts:40",{"_index":268,"title":{},"body":{"classes/ChangeClock.html":{}}}],["src/app/core/store/actions/settings.actions.ts:46",{"_index":294,"title":{},"body":{"classes/ChangeSendOnEnter.html":{}}}],["src/app/core/store/actions/settings.actions.ts:47",{"_index":295,"title":{},"body":{"classes/ChangeSendOnEnter.html":{}}}],["src/app/core/store/actions/settings.actions.ts:53",{"_index":290,"title":{},"body":{"classes/ChangeLanguage.html":{}}}],["src/app/core/store/actions/settings.actions.ts:54",{"_index":291,"title":{},"body":{"classes/ChangeLanguage.html":{}}}],["src/app/core/store/actions/settings.actions.ts:60",{"_index":895,"title":{},"body":{"classes/Reset.html":{}}}],["src/app/core/store/effects/chat.effects.ts",{"_index":437,"title":{},"body":{"injectables/ChatEffects.html":{},"coverage.html":{}}}],["src/app/core/store/effects/chat.effects.ts:22",{"_index":447,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["src/app/core/store/effects/chat.effects.ts:36",{"_index":462,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["src/app/core/store/effects/chat.effects.ts:51",{"_index":455,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["src/app/core/store/effects/chat.effects.ts:61",{"_index":472,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["src/app/core/store/effects/settings.effects.ts",{"_index":1005,"title":{},"body":{"injectables/SettingsEffects.html":{},"coverage.html":{}}}],["src/app/core/store/effects/settings.effects.ts:15",{"_index":1008,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/core/store/effects/settings.effects.ts:29",{"_index":1011,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/core/store/effects/settings.effects.ts:48",{"_index":1019,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/core/store/effects/settings.effects.ts:63",{"_index":1032,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/core/store/reducers/app.reducers.ts",{"_index":1087,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/store/reducers/chat.reducer.ts",{"_index":1088,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/store/reducers/local",{"_index":1090,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/store/reducers/settings.reducer.ts",{"_index":1093,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/store/selectors/chat.selector.ts",{"_index":1095,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/store/selectors/settings.selector.ts",{"_index":1097,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/store/state/app.state.ts",{"_index":551,"title":{},"body":{"interfaces/IAppState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/store/state/chat.state.ts",{"_index":560,"title":{},"body":{"interfaces/IChatState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/store/state/settings.state.ts",{"_index":562,"title":{},"body":{"interfaces/ISettingsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/material.module.ts",{"_index":688,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/settings/settings",{"_index":1040,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["src/app/settings/settings.component.ts",{"_index":935,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{}}}],["src/app/settings/settings.component.ts:22",{"_index":966,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:26",{"_index":948,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:34",{"_index":952,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:40",{"_index":949,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:46",{"_index":969,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:52",{"_index":963,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:58",{"_index":961,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:64",{"_index":959,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:70",{"_index":956,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:76",{"_index":954,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:82",{"_index":964,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.module.ts",{"_index":1038,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":1102,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1103,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/testing/utils.ts",{"_index":834,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/testing/utils.ts:18",{"_index":845,"title":{},"body":{"injectables/MockStore.html":{}}}],["src/testing/utils.ts:29",{"_index":848,"title":{},"body":{"injectables/MockStore.html":{}}}],["standalone.mat",{"_index":420,"title":{},"body":{"components/ChatComponent.html":{}}}],["standard",{"_index":422,"title":{},"body":{"components/ChatComponent.html":{}}}],["start",{"_index":814,"title":{},"body":{"components/MessageComponent.html":{},"index.html":{}}}],["started",{"_index":1185,"title":{"index.html":{}},"body":{"index.html":{}}}],["started#step",{"_index":697,"title":{},"body":{"modules/MaterialModule.html":{}}}],["state",{"_index":334,"title":{},"body":{"components/ChatComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/MockStore.html":{},"modules/TestingModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["state.chat",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.settings",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state/app.state",{"_index":476,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["statekey",{"_index":537,"title":{},"body":{"modules/CoreModule.html":{}}}],["statekeys",{"_index":606,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["statekeys.foreach((key",{"_index":616,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["statekeys.length",{"_index":617,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["statements",{"_index":1070,"title":{},"body":{"coverage.html":{}}}],["stateobservable",{"_index":841,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["statesubject",{"_index":838,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["static",{"_index":579,"title":{},"body":{"injectables/LocalStorageService.html":{},"classes/Logger.html":{}}}],["status",{"_index":1152,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["storage",{"_index":577,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/variables.html":{}}}],["storage.reducer.ts",{"_index":1091,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["storage.service",{"_index":516,"title":{},"body":{"modules/CoreModule.html":{}}}],["storage.service.ts",{"_index":574,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage.service.ts:15",{"_index":587,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:49",{"_index":593,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:55",{"_index":584,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:61",{"_index":591,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:66",{"_index":594,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage/local",{"_index":515,"title":{},"body":{"modules/CoreModule.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storagechat",{"_index":1196,"title":{},"body":{"index.html":{}}}],["storagekey",{"_index":604,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storagekey.includes(app_prefix",{"_index":605,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["store",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"modules/CoreModule.html":{},"interfaces/IAppState.html":{},"injectables/LocalStorageService.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"classes/RouteReusableStrategy.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/TestingModule.html":{},"dependencies.html":{},"index.html":{}}}],["store(route",{"_index":923,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["storedevtoolsmodule",{"_index":518,"title":{},"body":{"modules/CoreModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":538,"title":{},"body":{"modules/CoreModule.html":{}}}],["storemodule",{"_index":517,"title":{},"body":{"modules/CoreModule.html":{},"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["storemodule.forroot",{"_index":859,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["storemodule.forroot(appreducers",{"_index":534,"title":{},"body":{"modules/CoreModule.html":{}}}],["storerouterconnectingmodule",{"_index":521,"title":{},"body":{"modules/CoreModule.html":{}}}],["storerouterconnectingmodule.forroot",{"_index":536,"title":{},"body":{"modules/CoreModule.html":{}}}],["strategy",{"_index":513,"title":{},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{}}}],["strategy.ts",{"_index":899,"title":{},"body":{"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["strategy.ts:10",{"_index":918,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:14",{"_index":925,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:16",{"_index":916,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:20",{"_index":912,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:24",{"_index":921,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["string",{"_index":260,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"modules/CoreModule.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"pipes/ParserPipe.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"classes/UnreadCount.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":1242,"title":{},"body":{"index.html":{}}}],["style",{"_index":760,"title":{},"body":{"components/MessageComponent.html":{},"index.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["subscribe",{"_index":335,"title":{},"body":{"components/ChatComponent.html":{}}}],["subscribe((state",{"_index":468,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["subscribe(chat",{"_index":381,"title":{},"body":{"components/ChatComponent.html":{}}}],["subscribe(event",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(user",{"_index":378,"title":{},"body":{"components/ChatComponent.html":{}}}],["success",{"_index":1153,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["super",{"_index":1062,"title":{},"body":{"injectables/SocketioService.html":{}}}],["super(state",{"_index":854,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["support",{"_index":1278,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":970,"title":{},"body":{"components/SettingsComponent.html":{}}}],["supportedlanguages",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["svg",{"_index":1279,"title":{},"body":{"modules.html":{}}}],["system",{"_index":1141,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["t",{"_index":847,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["tab",{"_index":252,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["table",{"_index":1105,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1104,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":889,"title":{},"body":{"pipes/ParserPipe.html":{}}}],["tag.addclass('image",{"_index":891,"title":{},"body":{"pipes/ParserPipe.html":{}}}],["tag.setinnerhtml",{"_index":892,"title":{},"body":{"pipes/ParserPipe.html":{}}}],["takes",{"_index":744,"title":{},"body":{"components/MessageComponent.html":{}}}],["tap",{"_index":466,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/SettingsEffects.html":{}}}],["tap(([action",{"_index":460,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/SettingsEffects.html":{}}}],["tap((theme",{"_index":1023,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["tap(language",{"_index":1014,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["tap(msg",{"_index":452,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["test",{"_index":1277,"title":{},"body":{"index.html":{}}}],["test.ts",{"_index":1274,"title":{},"body":{"index.html":{}}}],["testing",{"_index":835,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{},"index.html":{}}}],["testingmodule",{"_index":860,"title":{"modules/TestingModule.html":{}},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{},"modules.html":{}}}],["testkey",{"_index":625,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["testlocalstorage",{"_index":582,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["tests",{"_index":595,"title":{},"body":{"injectables/LocalStorageService.html":{},"index.html":{}}}],["testvalue",{"_index":624,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["text",{"_index":329,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"index.html":{}}}],["theme",{"_index":275,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"interfaces/ISettingsState.html":{},"components/MessageComponent.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["themes",{"_index":1202,"title":{},"body":{"index.html":{}}}],["this._sanitizer.bypasssecuritytrusthtml(this.automaticlinks(value",{"_index":874,"title":{},"body":{"pipes/ParserPipe.html":{}}}],["this.actions$.pipe",{"_index":448,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/SettingsEffects.html":{}}}],["this.activatedroute",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["this.appstate",{"_index":372,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.appstate$.pipe",{"_index":374,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.chat",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["this.emit(\"chat",{"_index":1064,"title":{},"body":{"injectables/SocketioService.html":{}}}],["this.format",{"_index":781,"title":{},"body":{"components/MessageComponent.html":{}}}],["this.fromevent(\"chat",{"_index":1053,"title":{},"body":{"injectables/SocketioService.html":{}}}],["this.fromonetimeevent(\"user",{"_index":1057,"title":{},"body":{"injectables/SocketioService.html":{}}}],["this.getitem(testkey",{"_index":630,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorageservice.setitem('messages",{"_index":461,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["this.localstorageservice.setitem('settings",{"_index":1010,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["this.log(console.error",{"_index":683,"title":{},"body":{"classes/Logger.html":{}}}],["this.log(console.info",{"_index":680,"title":{},"body":{"classes/Logger.html":{}}}],["this.log(console.log",{"_index":679,"title":{},"body":{"classes/Logger.html":{}}}],["this.log(console.warn",{"_index":682,"title":{},"body":{"classes/Logger.html":{}}}],["this.messagefield.nativeelement.focus",{"_index":387,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.messagefield.nativeelement.value",{"_index":389,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.messagesitems.changes.subscribe",{"_index":391,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.removeitem(testkey",{"_index":631,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.router.events.pipe(filter(event",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["this.scrollbarref.scrolltobottom(200",{"_index":392,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.setitem(testkey",{"_index":629,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.settings",{"_index":778,"title":{},"body":{"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["this.settings$.subscribe((settings",{"_index":780,"title":{},"body":{"components/MessageComponent.html":{}}}],["this.socket.chatreceived$.subscribe((m",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["this.socket.chatsend(msg",{"_index":453,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["this.socket.usercreated",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["this.source",{"_index":686,"title":{},"body":{"classes/Logger.html":{},"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["this.statesubject.asobservable",{"_index":855,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["this.statesubject.next(nextstate",{"_index":856,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["this.store",{"_index":373,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.store.dispatch(new",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"components/SettingsComponent.html":{}}}],["this.store.pipe",{"_index":467,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/SettingsEffects.html":{}}}],["this.store.pipe(select(selectchat",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectsettings",{"_index":779,"title":{},"body":{"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["this.store.select(selectchat).subscribe((chat",{"_index":388,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.titleservice.settitle(this.translateservice.instant(title",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translateservice.use(language",{"_index":1015,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["this.user",{"_index":379,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.usernamefiels.nativeelement.focus",{"_index":974,"title":{},"body":{"components/SettingsComponent.html":{}}}],["through",{"_index":1169,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["throw",{"_index":544,"title":{},"body":{"modules/CoreModule.html":{},"injectables/LocalStorageService.html":{}}}],["time",{"_index":395,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/Message.html":{},"injectables/SocketioService.html":{}}}],["title",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/ChatRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["titleservice",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["toggle",{"_index":251,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{}}}],["token",{"_index":611,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["token.charat(0).touppercase",{"_index":612,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["token.slice(1",{"_index":613,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["tolowercase",{"_index":608,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["top",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["toremove",{"_index":1026,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["toremove.length",{"_index":1029,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["transform",{"_index":766,"title":{},"body":{"components/MessageComponent.html":{},"pipes/ParserPipe.html":{}}}],["transform(value",{"_index":867,"title":{},"body":{"pipes/ParserPipe.html":{}}}],["transition",{"_index":759,"title":{},"body":{"components/MessageComponent.html":{}}}],["transition(':enter",{"_index":765,"title":{},"body":{"components/MessageComponent.html":{}}}],["translate",{"_index":985,"title":{},"body":{"components/SettingsComponent.html":{}}}],["translate/core",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"injectables/MockStore.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/TestingModule.html":{},"dependencies.html":{}}}],["translatemodule",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"injectables/MockStore.html":{},"modules/SettingsModule.html":{},"modules/TestingModule.html":{}}}],["translatemodule.forroot",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["translateservice",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/SettingsEffects.html":{}}}],["translateservice.settranslation('ar",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["translateservice.settranslation('en",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["translations",{"_index":1264,"title":{},"body":{"index.html":{}}}],["translations/ar",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["translations/en",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["trigger",{"_index":758,"title":{},"body":{"components/MessageComponent.html":{}}}],["trigger('items",{"_index":764,"title":{},"body":{"components/MessageComponent.html":{}}}],["true",{"_index":568,"title":{},"body":{"interfaces/ISettingsState.html":{},"classes/RouteReusableStrategy.html":{},"miscellaneous/variables.html":{}}}],["truncate",{"_index":881,"title":{},"body":{"pipes/ParserPipe.html":{}}}],["type",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"pipes/ParserPipe.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SocketioService.html":{},"classes/UnreadCount.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1286,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["unique",{"_index":572,"title":{},"body":{"interfaces/IUser.html":{}}}],["unit",{"_index":1275,"title":{},"body":{"index.html":{}}}],["unread",{"_index":254,"title":{},"body":{"classes/BlinkTab.html":{},"components/ChatComponent.html":{},"interfaces/IChatState.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["unreadcount",{"_index":253,"title":{"classes/UnreadCount.html":{}},"body":{"classes/BlinkTab.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["unreadcount(0",{"_index":385,"title":{},"body":{"components/ChatComponent.html":{}}}],["unreadcount(state.chat.unread",{"_index":471,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["update",{"_index":755,"title":{},"body":{"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["updatetheme",{"_index":1007,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["url",{"_index":885,"title":{},"body":{"pipes/ParserPipe.html":{},"injectables/SocketioService.html":{}}}],["url.match(img",{"_index":888,"title":{},"body":{"pipes/ParserPipe.html":{}}}],["url.match(youtube",{"_index":893,"title":{},"body":{"pipes/ParserPipe.html":{}}}],["urls",{"_index":1200,"title":{},"body":{"index.html":{}}}],["us.json",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["usage",{"_index":1161,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["use",{"_index":1020,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["useclass",{"_index":540,"title":{},"body":{"modules/CoreModule.html":{},"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["used",{"_index":438,"title":{},"body":{"injectables/ChatEffects.html":{},"modules/MaterialModule.html":{},"components/MessageComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SocketioService.html":{}}}],["user",{"_index":272,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"interfaces/Message.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"injectables/SocketioService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user.interface",{"_index":742,"title":{},"body":{"interfaces/Message.html":{}}}],["usercreated",{"_index":1047,"title":{},"body":{"injectables/SocketioService.html":{}}}],["userid",{"_index":337,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":565,"title":{},"body":{"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["usernamefiels",{"_index":940,"title":{},"body":{"components/SettingsComponent.html":{}}}],["using",{"_index":1186,"title":{},"body":{"index.html":{}}}],["utils",{"_index":1266,"title":{},"body":{"index.html":{}}}],["value",{"_index":239,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"injectables/MockStore.html":{},"pipes/ParserPipe.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"injectables/SettingsEffects.html":{},"injectables/SocketioService.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1259,"title":{},"body":{"index.html":{}}}],["var",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["variable",{"_index":1072,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1263,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["various",{"_index":1260,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":1003,"title":{},"body":{"components/SettingsComponent.html":{}}}],["videos",{"_index":1198,"title":{},"body":{"index.html":{}}}],["view",{"_index":950,"title":{},"body":{"components/SettingsComponent.html":{}}}],["viewchild",{"_index":360,"title":{},"body":{"components/ChatComponent.html":{},"components/SettingsComponent.html":{}}}],["viewchild(\"messagetext",{"_index":371,"title":{},"body":{"components/ChatComponent.html":{}}}],["viewchild(\"username",{"_index":973,"title":{},"body":{"components/SettingsComponent.html":{}}}],["viewchild('messagetext",{"_index":349,"title":{},"body":{"components/ChatComponent.html":{}}}],["viewchild('username",{"_index":967,"title":{},"body":{"components/SettingsComponent.html":{}}}],["viewchild(ngscrollbar",{"_index":356,"title":{},"body":{"components/ChatComponent.html":{}}}],["viewchildren",{"_index":361,"title":{},"body":{"components/ChatComponent.html":{}}}],["viewchildren('allmessagesitems",{"_index":352,"title":{},"body":{"components/ChatComponent.html":{}}}],["void",{"_index":322,"title":{},"body":{"components/ChatComponent.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"classes/RouteReusableStrategy.html":{},"components/SettingsComponent.html":{},"injectables/SocketioService.html":{}}}],["want",{"_index":1167,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["warn",{"_index":638,"title":{},"body":{"classes/Logger.html":{}}}],["warn(...objects",{"_index":672,"title":{},"body":{"classes/Logger.html":{}}}],["warning",{"_index":674,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["web",{"_index":1245,"title":{},"body":{"index.html":{}}}],["width",{"_index":795,"title":{},"body":{"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["withlatestfrom",{"_index":477,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/SettingsEffects.html":{}}}],["withlatestfrom(this.store.pipe(select(selectchat",{"_index":459,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["withlatestfrom(this.store.pipe(select(selectsettings",{"_index":1009,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["workaround",{"_index":903,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["worker",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["worker.js",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["works",{"_index":655,"title":{},"body":{"classes/Logger.html":{}}}],["written",{"_index":597,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["yes",{"_index":641,"title":{},"body":{"classes/Logger.html":{},"pipes/ParserPipe.html":{}}}],["youtube",{"_index":875,"title":{},"body":{"pipes/ParserPipe.html":{},"index.html":{}}}],["z",{"_index":796,"title":{},"body":{"components/MessageComponent.html":{}}}],["zone.js",{"_index":1133,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/SettingsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chat$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, activatedRoute: ActivatedRoute, titleService: Title, translateService: TranslateService, socket: SocketioService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        socket\n                                                  \n                                                        \n                                                                        SocketioService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chat$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { Router, NavigationEnd, ActivatedRoute } from \"@angular/router\";\nimport { Title } from \"@angular/platform-browser\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { merge, Observable } from \"rxjs\";\nimport { filter, map, mergeMap } from \"rxjs/operators\";\nimport { SocketioService } from '@app/core/services/socketio/socketio.service';\n\nimport { environment } from \"@env/environment\";\nimport { Logger } from \"@app/core\";\nimport { Store, select } from \"@ngrx/store\";\nimport { IAppState } from \"./core/store/state/app.state\";\nimport { ReveiveMsg } from \"./core/store/actions/chat.actions\";\nimport { Message } from \"./core/models/message.interface\";\nimport { SetUserID } from \"./core/store/actions/settings.actions\";\nimport { IChatState } from \"./core/store/state/chat.state\";\nimport { selectChat } from \"./core/store/selectors/chat.selector\";\n\nimport enUS from '../translations/en-US.json';\nimport arEG from '../translations/ar-EG.json';\n\nconst log = new Logger(\"App\");\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"]\n})\nexport class AppComponent implements OnInit {\n  chat$: Observable;\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private titleService: Title,\n    private translateService: TranslateService,\n    private socket: SocketioService,\n    private store: Store\n  ) {\n    translateService.setTranslation('en-US', enUS);\n    translateService.setTranslation('ar-EG', arEG);\n  }\n\n  async ngOnInit() {\n    // Setup logger\n    if (environment.production) {\n      Logger.enableProductionMode();\n    }\n    this.chat$ = this.store.pipe(select(selectChat));\n    this.socket.chatReceived$.subscribe((m: Message)=>{\n      this.store.dispatch(new ReveiveMsg(m));\n    });\n    const id = await this.socket.userCreated$;\n    this.store.dispatch(new SetUserID(id));\n    \n    const onNavigationEnd = this.router.events.pipe(filter(event => event instanceof NavigationEnd));\n\n    // Change page title on navigation or language change, based on route data\n    merge(this.translateService.onLangChange, onNavigationEnd)\n      .pipe(\n        map(() => {\n          let route = this.activatedRoute;\n          while (route.firstChild) {\n            route = route.firstChild;\n          }\n          return route;\n        }),\n        filter(route => route.outlet === \"primary\"),\n        mergeMap(route => route.data)\n      )\n      .subscribe(event => {\n        const title = event[\"title\"];\n        if (title) {\n          this.titleService.setTitle(this.translateService.instant(title));\n        }\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Chat\n    \n    \n      Settings\n    \n\n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .language-btn {\n  position: fixed;\n  top: 0;\n  right: 0;\n}\n\nnav {\n  color: #fff\n}\n.blink{\n  animation: blink 1s linear infinite;\n}\n\n@keyframes blink{\n  0%{opacity: 0;}\n  50%{opacity: .5;}\n  100%{opacity: 1;}\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Chat              Settings    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nChatModule\n\nChatModule\n\nAppModule -->\n\nChatModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ChatModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            SettingsModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material.module';\n\nimport { environment } from '@env/environment';\nimport { CoreModule } from '@app/core';\nimport { ChatModule } from './chat/chat.module';\nimport { SettingsModule } from './settings/settings.module';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { MatBadgeModule } from '@angular/material';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    ServiceWorkerModule.register('./ngsw-worker.js', { enabled: environment.production }),\n    FormsModule,\n    TranslateModule.forRoot(),\n    BrowserAnimationsModule,\n    MaterialModule,\n    MatBadgeModule,\n    CoreModule,\n    ChatModule,\n    SettingsModule,\n    AppRoutingModule\n  ],\n  declarations: [AppComponent],\n  providers: [\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  // Fallback when no prior route is matched\n  { path: '**', redirectTo: '', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: []\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BlinkTab.html":{"url":"classes/BlinkTab.html","title":"class - BlinkTab","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BlinkTab\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/actions/chat.actions.ts\n        \n\n            \n                Description\n            \n            \n                build action BlinkTab\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/actions/chat.actions.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/chat.actions.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EChatActions.BlinkTab\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/chat.actions.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from \"@ngrx/store\";\nimport { Message } from \"@app/core/models/message.interface\";\n/**\n* build enum for chat actions\n*/\nexport enum EChatActions {\n  ReveiveMsg = \"[Chat] Receive Message\",\n  SendMessage = \"[Chat] Send Message\",\n  SaveCurrentMsg = \"[Chat] Save current message\",\n  BlinkTab = \"[Chat] Toggle Tab Blink\",\n  UnreadCount = \"[Chat] Unread Messages Counted\"\n}\n/**\n* build action ReveiveMsg\n*/\nexport class ReveiveMsg implements Action {\n  public readonly type = EChatActions.ReveiveMsg;\n  constructor(public payload: Message) {}\n}\n/**\n* build action SaveCurrentMsg\n*/\nexport class SaveCurrentMsg implements Action {\n  public readonly type = EChatActions.SaveCurrentMsg;\n  constructor(public payload: string) {}\n}\n/**\n* build action SendMessage\n*/\nexport class SendMessage implements Action {\n  public readonly type = EChatActions.SendMessage;\n  constructor(public payload: Message) {}\n}\n/**\n* build action BlinkTab\n*/\nexport class BlinkTab implements Action {\n  public readonly type = EChatActions.BlinkTab;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action UnreadCount\n*/\nexport class UnreadCount implements Action {\n  public readonly type = EChatActions.UnreadCount;\n  constructor(public payload: number) {}\n}\n/**\n* export ChatActions\n*/\nexport type ChatActions = ReveiveMsg | SendMessage | SaveCurrentMsg | BlinkTab | UnreadCount;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeClock.html":{"url":"classes/ChangeClock.html","title":"class - ChangeClock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeClock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/actions/settings.actions.ts\n        \n\n            \n                Description\n            \n            \n                build action ChangeClock\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/actions/settings.actions.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/settings.actions.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ESettingsActions.ChangeClock\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/settings.actions.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from \"@ngrx/store\";\n/**\n* build enum for settings actions\n*/\nexport enum ESettingsActions {\n  ChangeName = \"[Settings] Change user name\",\n  SetUserID = \"[Settings] Set User ID\",\n  ChangeTheme = \"[Settings] Change theme\",\n  ChangeClock = \"[Settings] Change clock display\",\n  ChangeSendOnEnter = \"[Settings] Toggle sending message on ctrl + enter\",\n  ChangeLanguage = \"[Settings] Change language\",\n  Reset = \"[Settings] Reset Settings\"\n}\n/**\n* build action ChangeName\n*/\nexport class ChangeName implements Action {\n  public readonly type = ESettingsActions.ChangeName;\n  constructor(public payload: string) {}\n}\n/**\n* build action SetUserID\n*/\nexport class SetUserID implements Action {\n  public readonly type = ESettingsActions.SetUserID;\n  constructor(public payload: number) {}\n}\n/**\n* build action ChangeTheme\n*/\nexport class ChangeTheme implements Action {\n  public readonly type = ESettingsActions.ChangeTheme;\n  constructor(public payload: string) {}\n}\n/**\n* build action ChangeClock\n*/\nexport class ChangeClock implements Action {\n  public readonly type = ESettingsActions.ChangeClock;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action ChangeSendOnEnter\n*/\nexport class ChangeSendOnEnter implements Action {\n  public readonly type = ESettingsActions.ChangeSendOnEnter;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action ChangeLanguage\n*/\nexport class ChangeLanguage implements Action {\n  public readonly type = ESettingsActions.ChangeLanguage;\n  constructor(public payload: string) {}\n}\n/**\n* build action Reset\n*/\nexport class Reset implements Action {\n  public readonly type = ESettingsActions.Reset;\n}\n/**\n* export SettingsActions\n*/\nexport type SettingsActions = ChangeName | SetUserID | ChangeTheme | ChangeClock | ChangeSendOnEnter | ChangeLanguage | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeLanguage.html":{"url":"classes/ChangeLanguage.html","title":"class - ChangeLanguage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeLanguage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/actions/settings.actions.ts\n        \n\n            \n                Description\n            \n            \n                build action ChangeLanguage\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/actions/settings.actions.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/settings.actions.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ESettingsActions.ChangeLanguage\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/settings.actions.ts:53\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from \"@ngrx/store\";\n/**\n* build enum for settings actions\n*/\nexport enum ESettingsActions {\n  ChangeName = \"[Settings] Change user name\",\n  SetUserID = \"[Settings] Set User ID\",\n  ChangeTheme = \"[Settings] Change theme\",\n  ChangeClock = \"[Settings] Change clock display\",\n  ChangeSendOnEnter = \"[Settings] Toggle sending message on ctrl + enter\",\n  ChangeLanguage = \"[Settings] Change language\",\n  Reset = \"[Settings] Reset Settings\"\n}\n/**\n* build action ChangeName\n*/\nexport class ChangeName implements Action {\n  public readonly type = ESettingsActions.ChangeName;\n  constructor(public payload: string) {}\n}\n/**\n* build action SetUserID\n*/\nexport class SetUserID implements Action {\n  public readonly type = ESettingsActions.SetUserID;\n  constructor(public payload: number) {}\n}\n/**\n* build action ChangeTheme\n*/\nexport class ChangeTheme implements Action {\n  public readonly type = ESettingsActions.ChangeTheme;\n  constructor(public payload: string) {}\n}\n/**\n* build action ChangeClock\n*/\nexport class ChangeClock implements Action {\n  public readonly type = ESettingsActions.ChangeClock;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action ChangeSendOnEnter\n*/\nexport class ChangeSendOnEnter implements Action {\n  public readonly type = ESettingsActions.ChangeSendOnEnter;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action ChangeLanguage\n*/\nexport class ChangeLanguage implements Action {\n  public readonly type = ESettingsActions.ChangeLanguage;\n  constructor(public payload: string) {}\n}\n/**\n* build action Reset\n*/\nexport class Reset implements Action {\n  public readonly type = ESettingsActions.Reset;\n}\n/**\n* export SettingsActions\n*/\nexport type SettingsActions = ChangeName | SetUserID | ChangeTheme | ChangeClock | ChangeSendOnEnter | ChangeLanguage | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeName.html":{"url":"classes/ChangeName.html","title":"class - ChangeName","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeName\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/actions/settings.actions.ts\n        \n\n            \n                Description\n            \n            \n                build action ChangeName\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/actions/settings.actions.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/settings.actions.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ESettingsActions.ChangeName\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/settings.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from \"@ngrx/store\";\n/**\n* build enum for settings actions\n*/\nexport enum ESettingsActions {\n  ChangeName = \"[Settings] Change user name\",\n  SetUserID = \"[Settings] Set User ID\",\n  ChangeTheme = \"[Settings] Change theme\",\n  ChangeClock = \"[Settings] Change clock display\",\n  ChangeSendOnEnter = \"[Settings] Toggle sending message on ctrl + enter\",\n  ChangeLanguage = \"[Settings] Change language\",\n  Reset = \"[Settings] Reset Settings\"\n}\n/**\n* build action ChangeName\n*/\nexport class ChangeName implements Action {\n  public readonly type = ESettingsActions.ChangeName;\n  constructor(public payload: string) {}\n}\n/**\n* build action SetUserID\n*/\nexport class SetUserID implements Action {\n  public readonly type = ESettingsActions.SetUserID;\n  constructor(public payload: number) {}\n}\n/**\n* build action ChangeTheme\n*/\nexport class ChangeTheme implements Action {\n  public readonly type = ESettingsActions.ChangeTheme;\n  constructor(public payload: string) {}\n}\n/**\n* build action ChangeClock\n*/\nexport class ChangeClock implements Action {\n  public readonly type = ESettingsActions.ChangeClock;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action ChangeSendOnEnter\n*/\nexport class ChangeSendOnEnter implements Action {\n  public readonly type = ESettingsActions.ChangeSendOnEnter;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action ChangeLanguage\n*/\nexport class ChangeLanguage implements Action {\n  public readonly type = ESettingsActions.ChangeLanguage;\n  constructor(public payload: string) {}\n}\n/**\n* build action Reset\n*/\nexport class Reset implements Action {\n  public readonly type = ESettingsActions.Reset;\n}\n/**\n* export SettingsActions\n*/\nexport type SettingsActions = ChangeName | SetUserID | ChangeTheme | ChangeClock | ChangeSendOnEnter | ChangeLanguage | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeSendOnEnter.html":{"url":"classes/ChangeSendOnEnter.html","title":"class - ChangeSendOnEnter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeSendOnEnter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/actions/settings.actions.ts\n        \n\n            \n                Description\n            \n            \n                build action ChangeSendOnEnter\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/actions/settings.actions.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/settings.actions.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ESettingsActions.ChangeSendOnEnter\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/settings.actions.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from \"@ngrx/store\";\n/**\n* build enum for settings actions\n*/\nexport enum ESettingsActions {\n  ChangeName = \"[Settings] Change user name\",\n  SetUserID = \"[Settings] Set User ID\",\n  ChangeTheme = \"[Settings] Change theme\",\n  ChangeClock = \"[Settings] Change clock display\",\n  ChangeSendOnEnter = \"[Settings] Toggle sending message on ctrl + enter\",\n  ChangeLanguage = \"[Settings] Change language\",\n  Reset = \"[Settings] Reset Settings\"\n}\n/**\n* build action ChangeName\n*/\nexport class ChangeName implements Action {\n  public readonly type = ESettingsActions.ChangeName;\n  constructor(public payload: string) {}\n}\n/**\n* build action SetUserID\n*/\nexport class SetUserID implements Action {\n  public readonly type = ESettingsActions.SetUserID;\n  constructor(public payload: number) {}\n}\n/**\n* build action ChangeTheme\n*/\nexport class ChangeTheme implements Action {\n  public readonly type = ESettingsActions.ChangeTheme;\n  constructor(public payload: string) {}\n}\n/**\n* build action ChangeClock\n*/\nexport class ChangeClock implements Action {\n  public readonly type = ESettingsActions.ChangeClock;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action ChangeSendOnEnter\n*/\nexport class ChangeSendOnEnter implements Action {\n  public readonly type = ESettingsActions.ChangeSendOnEnter;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action ChangeLanguage\n*/\nexport class ChangeLanguage implements Action {\n  public readonly type = ESettingsActions.ChangeLanguage;\n  constructor(public payload: string) {}\n}\n/**\n* build action Reset\n*/\nexport class Reset implements Action {\n  public readonly type = ESettingsActions.Reset;\n}\n/**\n* export SettingsActions\n*/\nexport type SettingsActions = ChangeName | SetUserID | ChangeTheme | ChangeClock | ChangeSendOnEnter | ChangeLanguage | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeTheme.html":{"url":"classes/ChangeTheme.html","title":"class - ChangeTheme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeTheme\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/actions/settings.actions.ts\n        \n\n            \n                Description\n            \n            \n                build action ChangeTheme\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/actions/settings.actions.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/settings.actions.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ESettingsActions.ChangeTheme\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/settings.actions.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from \"@ngrx/store\";\n/**\n* build enum for settings actions\n*/\nexport enum ESettingsActions {\n  ChangeName = \"[Settings] Change user name\",\n  SetUserID = \"[Settings] Set User ID\",\n  ChangeTheme = \"[Settings] Change theme\",\n  ChangeClock = \"[Settings] Change clock display\",\n  ChangeSendOnEnter = \"[Settings] Toggle sending message on ctrl + enter\",\n  ChangeLanguage = \"[Settings] Change language\",\n  Reset = \"[Settings] Reset Settings\"\n}\n/**\n* build action ChangeName\n*/\nexport class ChangeName implements Action {\n  public readonly type = ESettingsActions.ChangeName;\n  constructor(public payload: string) {}\n}\n/**\n* build action SetUserID\n*/\nexport class SetUserID implements Action {\n  public readonly type = ESettingsActions.SetUserID;\n  constructor(public payload: number) {}\n}\n/**\n* build action ChangeTheme\n*/\nexport class ChangeTheme implements Action {\n  public readonly type = ESettingsActions.ChangeTheme;\n  constructor(public payload: string) {}\n}\n/**\n* build action ChangeClock\n*/\nexport class ChangeClock implements Action {\n  public readonly type = ESettingsActions.ChangeClock;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action ChangeSendOnEnter\n*/\nexport class ChangeSendOnEnter implements Action {\n  public readonly type = ESettingsActions.ChangeSendOnEnter;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action ChangeLanguage\n*/\nexport class ChangeLanguage implements Action {\n  public readonly type = ESettingsActions.ChangeLanguage;\n  constructor(public payload: string) {}\n}\n/**\n* build action Reset\n*/\nexport class Reset implements Action {\n  public readonly type = ESettingsActions.Reset;\n}\n/**\n* export SettingsActions\n*/\nexport type SettingsActions = ChangeName | SetUserID | ChangeTheme | ChangeClock | ChangeSendOnEnter | ChangeLanguage | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatComponent.html":{"url":"components/ChatComponent.html","title":"component - ChatComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChatComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/chat/chat.component.ts\n\n\n    \n        Description\n    \n    \n        ChatComponent is a container for messages and chat input with it's options\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chat\n            \n\n            \n                styleUrls\n                ./chat.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./chat.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appstate$\n                            \n                            \n                                emojiShow\n                            \n                            \n                                messageField\n                            \n                            \n                                messagesItems\n                            \n                            \n                                scrollbarRef\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEmoji\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/chat/chat.component.ts:45\n                            \n                        \n\n                \n                    \n                            inject Store\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addEmoji\n                        \n                        \n                    \n                \n            \n            \n                \naddEmoji(ev: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat/chat.component.ts:114\n                \n            \n\n\n            \n                \n                    Add emoji to the input after selection\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ev\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat/chat.component.ts:78\n                \n            \n\n\n            \n                \n                    remove blink animation, reset the unread message counter and scroll messages to bottom\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat/chat.component.ts:106\n                \n            \n\n\n            \n                \n                    save current text in the input before leave the chat page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat/chat.component.ts:55\n                \n            \n\n\n            \n                \n                    declate state, subscribe to changes in userid, reset blink animation, reset unread message counter\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsendMessage(ev: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat/chat.component.ts:93\n                \n            \n\n\n            \n                \n                    build message object the dispatch the store with SendMessage action\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ev\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appstate$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chat/chat.component.ts:37\n                            \n                        \n\n                \n                    \n                        reference to State\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emojiShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chat/chat.component.ts:45\n                            \n                        \n\n                \n                    \n                        Boolean to show/hide emoji list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messageField\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('messageText')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/chat/chat.component.ts:25\n                            \n                        \n\n                \n                    \n                        reference to chat input element\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messagesItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('allMessagesItems')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/chat/chat.component.ts:33\n                            \n                        \n\n                \n                    \n                        reference to messages elements\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scrollbarRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgScrollbar\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(NgScrollbar)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/chat/chat.component.ts:29\n                            \n                        \n\n                \n                    \n                        reference to messages container element\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chat/chat.component.ts:41\n                            \n                        \n\n                \n                    \n                        reference to User object\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ElementRef, ViewChild, QueryList, ViewChildren } from '@angular/core';\nimport { NgScrollbar } from 'ngx-scrollbar';\nimport { MatListItem } from '@angular/material';\nimport { Store, select } from '@ngrx/store';\nimport { IAppState } from '@app/core/store/state/app.state';\nimport { Observable } from 'rxjs';\nimport { SendMessage, SaveCurrentMsg, BlinkTab, UnreadCount } from \"@app/core/store/actions/chat.actions\";\nimport { selectChat } from '@app/core/store/selectors/chat.selector';\nimport { map, first } from 'rxjs/operators';\nimport { IUser } from '@app/core/models/user.interface';\nimport { selectSettings } from '@app/core/store/selectors/settings.selector';\n\n/**\n* ChatComponent is a container for messages and chat input with it's options\n*/\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.scss']\n})\nexport class ChatComponent implements OnInit {\n  /**\n  * reference to chat input element\n  */\n  @ViewChild(\"messageText\") messageField: ElementRef;\n  /**\n  * reference to messages container element\n  */\n  @ViewChild(NgScrollbar) scrollbarRef: NgScrollbar;\n  /**\n  * reference to messages elements\n  */\n  @ViewChildren('allMessagesItems') messagesItems: QueryList;\n  /**\n  * reference to State\n  */\n  appstate$: Observable;\n  /**\n  * reference to User object\n  */\n  user: IUser;\n  /**\n  * Boolean to show/hide emoji list\n  */\n  emojiShow = false;\n  /**\n  * inject Store\n  */\n  constructor(\n    private store: Store\n    ) { }\n  /**\n  * declate state, subscribe to changes in userid, reset blink animation, reset unread message counter\n  */\n  ngOnInit() {\n    this.appstate$ = this.store;\n    this.appstate$.pipe(\n      select(selectSettings),\n      map(settings => settings.user)\n    ).subscribe(user =>{\n        this.user = user;\n    });\n    this.appstate$.pipe(\n      select(selectChat),\n      first()\n      ).subscribe(chat => {\n      if(chat.blink){\n        this.store.dispatch(new BlinkTab(false));\n      }\n      if(chat.unread) {\n        this.store.dispatch(new UnreadCount(0));\n      }\n    });\n  }\n  /**\n  * remove blink animation, reset the unread message counter and scroll messages to bottom\n  */\n  ngAfterViewInit(){\n    setTimeout(() => {\n      this.messageField.nativeElement.focus();\n      this.store.select(selectChat).subscribe((chat)=>{\n        this.messageField.nativeElement.value = chat.currentMessage;\n      });\n      this.messagesItems.changes.subscribe(() => {\n        this.scrollbarRef.scrollToBottom(200);\n      });\n      this.scrollbarRef.scrollToBottom(200);\n    });\n  }\n  /**\n  * build message object the dispatch the store with SendMessage action\n  */\n  sendMessage(ev: string){\n    if(ev){\n      const msg = {\n        user: this.user,\n        time: new Date(),\n        message: ev\n      }\n      this.store.dispatch(new SendMessage(msg));\n    }\n  }\n  /**\n  * save current text in the input before leave the chat page\n  */\n  ngOnDestroy(){\n    if(this.messageField.nativeElement.value) {\n      this.store.dispatch(new SaveCurrentMsg(this.messageField.nativeElement.value));\n    }\n  }\n  /**\n  * Add emoji to the input after selection\n  */\n  addEmoji(ev: any) {\n    this.messageField.nativeElement.value += ' ' + ev.emoji.native + ' ';\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        \n        \n          \n            sentiment_satisfied_alt\n            \n              send\n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./chat.component.scss\n                \n                .no-padding {\n  padding: 0;\n}\nng-scrollbar {\n  height: calc( 100vh - 106px );\n}\n.chat-input {\n    margin: 0 0 -16px;\n    input {\n        border: none;\n        outline: none;\n        flex: 1;\n        padding: 0 12px;\n        border-radius: 0 0 4px 4px;\n        &:focus {\n            outline: none;\n        }\n    }\n}\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard {\n  border-radius: 0;\n}\nemoji-mart {\n  position: absolute;\n  bottom: 48px;\n  right: 40px;\n}\n:host-context([dir=rtl])  {\n  emoji-mart {\n    right: auto;\n    left: 40px;\n  }\n}\n:host-context(.dark-theme) .chat-input input {\n  background: #424242;\n  color: #fff;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                      sentiment_satisfied_alt                          send                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChatComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChatEffects.html":{"url":"injectables/ChatEffects.html","title":"injectable - ChatEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ChatEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/effects/chat.effects.ts\n        \n\n            \n                Description\n            \n            \n                ChatEffects class used to attach side effects for store chat actions\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addMessage$\n                            \n                            \n                                persistSettings\n                            \n                            \n                                receiveMessage$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, store: Store, localStorageService: LocalStorageService, socket: SocketioService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/effects/chat.effects.ts:22\n                            \n                        \n\n                \n                    \n                            inject  Actions, Store, LocalStorageService, SocketioService\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        socket\n                                                  \n                                                        \n                                                                        SocketioService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addMessage$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.actions$.pipe(\n    ofType(EChatActions.SendMessage),\n    map((action: SendMessage) => action.payload),\n    tap(msg => this.socket.chatSend(msg))\n  )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/effects/chat.effects.ts:51\n                            \n                        \n\n                \n                    \n                        attach SendMessage to server event with each store dispatch SendMessage\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            persistSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.actions$.pipe(\n    ofType(\n      EChatActions.SaveCurrentMsg,\n      EChatActions.BlinkTab,\n      EChatActions.UnreadCount\n    ),\n    withLatestFrom(this.store.pipe(select(selectChat))),\n    tap(([action, chat]) =>\n      this.localStorageService.setItem('MESSAGES', chat)\n    )\n  )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/effects/chat.effects.ts:36\n                            \n                        \n\n                \n                    \n                        attach setitem to localstorage with each action in EChatActions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveMessage$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.actions$.pipe(\n    ofType(EChatActions.ReveiveMsg),\n    map((action: ReveiveMsg) => action.payload),\n    tap(() => {\n      this.store.pipe(\n        first()\n      ).subscribe((state)=>{\n        if(state.router.state.url !== '/chat'){\n          this.store.dispatch(new BlinkTab(true));\n          this.store.dispatch(new UnreadCount(state.chat.unread + 1));\n        }\n      })\n    })\n  )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/effects/chat.effects.ts:61\n                            \n                        \n\n                \n                    \n                        dispatch new BlinkTab(true) and new UnreadCount(state.chat.unread + 1) when ReveiveMsg while the user in another page \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { LocalStorageService } from \"@app/core\";\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\nimport {\n  ChatActions,\n  SendMessage,\n  EChatActions,\n  ReveiveMsg,\n  BlinkTab,\n  UnreadCount\n} from \"@app/core/store/actions/chat.actions\";\n\nimport { SocketioService } from \"@app/core/services/socketio/socketio.service\";\nimport { IAppState } from \"../state/app.state\";\nimport { Store, select } from \"@ngrx/store\";\nimport { map, tap, first, withLatestFrom } from \"rxjs/operators\";\nimport { selectChat } from \"../selectors/chat.selector\";\n/**\n* ChatEffects class used to attach side effects for store chat actions\n*/\n@Injectable()\nexport class ChatEffects {\n  /**\n  * inject  Actions, Store, LocalStorageService, SocketioService\n  */\n  constructor(\n    private actions$: Actions,\n    private store: Store,\n    private localStorageService: LocalStorageService,\n    private socket: SocketioService\n  ) {}\n  /**\n  * attach setitem to localstorage with each action in EChatActions\n  */\n  @Effect({ dispatch: false })\n  persistSettings = this.actions$.pipe(\n    ofType(\n      EChatActions.SaveCurrentMsg,\n      EChatActions.BlinkTab,\n      EChatActions.UnreadCount\n    ),\n    withLatestFrom(this.store.pipe(select(selectChat))),\n    tap(([action, chat]) =>\n      this.localStorageService.setItem('MESSAGES', chat)\n    )\n  );\n  /**\n  * attach SendMessage to server event with each store dispatch SendMessage\n  */\n  @Effect({ dispatch: false })\n  addMessage$ = this.actions$.pipe(\n    ofType(EChatActions.SendMessage),\n    map((action: SendMessage) => action.payload),\n    tap(msg => this.socket.chatSend(msg))\n  );\n\n  /**\n  * dispatch new BlinkTab(true) and new UnreadCount(state.chat.unread + 1) when ReveiveMsg while the user in another page \n  */\n  @Effect({ dispatch: false })\n  receiveMessage$ = this.actions$.pipe(\n    ofType(EChatActions.ReveiveMsg),\n    map((action: ReveiveMsg) => action.payload),\n    tap(() => {\n      this.store.pipe(\n        first()\n      ).subscribe((state)=>{\n        if(state.router.state.url !== '/chat'){\n          this.store.dispatch(new BlinkTab(true));\n          this.store.dispatch(new UnreadCount(state.chat.unread + 1));\n        }\n      })\n    })\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChatModule.html":{"url":"modules/ChatModule.html","title":"module - ChatModule","body":"\n                   \n\n\n\n\n    Modules\n    ChatModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ChatModule\n\n\n\ncluster_ChatModule_declarations\n\n\n\ncluster_ChatModule_imports\n\n\n\ncluster_ChatModule_providers\n\n\n\n\nChatComponent\n\nChatComponent\n\n\n\nChatModule\n\nChatModule\n\nChatModule -->\n\nChatComponent->ChatModule\n\n\n\n\n\nMessageComponent\n\nMessageComponent\n\nChatModule -->\n\nMessageComponent->ChatModule\n\n\n\n\n\nParserPipe\n\nParserPipe\n\nChatModule -->\n\nParserPipe->ChatModule\n\n\n\n\n\nChatRoutingModule\n\nChatRoutingModule\n\nChatModule -->\n\nChatRoutingModule->ChatModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nChatModule -->\n\nCoreModule->ChatModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nChatModule -->\n\nMaterialModule->ChatModule\n\n\n\n\n\nSocketioService\n\nSocketioService\n\nChatModule -->\n\nSocketioService->ChatModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/chat/chat.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ChatComponent\n                        \n                        \n                            MessageComponent\n                        \n                        \n                            ParserPipe\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            SocketioService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ChatRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { TranslateModule } from \"@ngx-translate/core\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { FormsModule } from \"@angular/forms\";\nimport { PickerModule } from '@ctrl/ngx-emoji-mart'\n\nimport { CoreModule } from \"@app/core\";\nimport { MaterialModule } from \"@app/material.module\";\nimport { NgScrollbarModule } from \"ngx-scrollbar\";\nimport { ChatRoutingModule } from \"./chat-routing.module\";\nimport { ChatComponent } from \"./chat.component\";\nimport { SocketioService } from \"@app/core/services/socketio/socketio.service\";\nimport { MessageComponent } from \"./message/message.component\";\nimport { ParserPipe } from './message/parser.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslateModule,\n    FormsModule,\n    CoreModule,\n    FlexLayoutModule,\n    MaterialModule,\n    NgScrollbarModule,\n    PickerModule,\n    ChatRoutingModule\n  ],\n  declarations: [ChatComponent, MessageComponent, ParserPipe],\n  providers: [SocketioService]\n})\nexport class ChatModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChatRoutingModule.html":{"url":"modules/ChatRoutingModule.html","title":"module - ChatRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ChatRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/chat/chat-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { extract } from \"@app/core\";\nimport { ChatComponent } from \"./chat.component\";\n\nconst routes: Routes = [\n  { path: \"\", redirectTo: \"/chat\", pathMatch: \"full\" },\n  { path: \"chat\", component: ChatComponent, data: { title: \"extract(\\\"Chat\\\")\" } }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: []\n})\nexport class ChatRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_providers\n\n\n\n\n!environment\n\n!environment\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\n!environment->CoreModule\n\n\n\n\n\nLocalStorageService\n\nLocalStorageService\n\nCoreModule -->\n\nLocalStorageService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LocalStorageService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            !environment\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, Optional, SkipSelf } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { HttpClient, HttpClientModule } from \"@angular/common/http\";\nimport { RouteReuseStrategy, RouterModule } from \"@angular/router\";\nimport { TranslateModule } from \"@ngx-translate/core\";\nimport { RouteReusableStrategy } from \"./route-reusable-strategy\";\nimport { LocalStorageService } from \"./services/local-storage/local-storage.service\";\nimport { environment } from \"@env/environment\";\n\nimport { StoreModule } from \"@ngrx/store\";\nimport { StoreDevtoolsModule } from \"@ngrx/store-devtools\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { StoreRouterConnectingModule } from \"@ngrx/router-store\";\nimport {\n  appReducers,\n  metaReducers\n} from \"@app/core/store/reducers/app.reducers\";\nimport { SettingsEffects } from \"@app/core/store/effects/settings.effects\";\nimport { ChatEffects } from \"@app/core/store/effects/chat.effects\";\nimport { SocketIoModule } from \"ngx-socket-io\";\n\nexport function extract(s: string) {\n  return s;\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    TranslateModule,\n    StoreModule.forRoot(appReducers, { metaReducers }),\n    EffectsModule.forRoot([SettingsEffects, ChatEffects]),\n    StoreRouterConnectingModule.forRoot({ stateKey: \"router\" }),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n    SocketIoModule,\n    RouterModule\n  ],\n  providers: [\n    {\n      provide: RouteReuseStrategy,\n      useClass: RouteReusableStrategy\n    },\n    LocalStorageService\n  ]\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    // Import guard\n    if (parentModule) {\n      throw new Error(\n        `${parentModule} has already been loaded. Import Core module in the AppModule only.`\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAppState.html":{"url":"interfaces/IAppState.html","title":"interface - IAppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/state/app.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        chat\n                                \n                                \n                                            Optional\n                                        router\n                                \n                                \n                                        settings\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chat\n                                    \n                                \n                                \n                                    \n                                        chat:         IChatState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IChatState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        router\n                                    \n                                \n                                \n                                    \n                                        router:     RouterReducerState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RouterReducerState\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        settings\n                                    \n                                \n                                \n                                    \n                                        settings:         ISettingsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISettingsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RouterReducerState } from \"@ngrx/router-store\";\n\nimport { IChatState, initialChatState } from \"@app/core/store/state/chat.state\";\nimport { initialSettingsState, ISettingsState } from \"@app/core/store/state/settings.state\";\n\nexport interface IAppState {\n  router?: RouterReducerState;\n  chat: IChatState;\n  settings: ISettingsState;\n}\n\nexport const initialAppState: IAppState = {\n  chat: initialChatState,\n  settings: initialSettingsState\n};\n\nexport function getInitialState(): IAppState {\n  return initialAppState;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IChatState.html":{"url":"interfaces/IChatState.html","title":"interface - IChatState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IChatState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/state/chat.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blink\n                                \n                                \n                                        currentMessage\n                                \n                                \n                                        messages\n                                \n                                \n                                        unread\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blink\n                                    \n                                \n                                \n                                    \n                                        blink:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currentMessage\n                                    \n                                \n                                \n                                    \n                                        currentMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        messages\n                                    \n                                \n                                \n                                    \n                                        messages:         Message[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Message[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unread\n                                    \n                                \n                                \n                                    \n                                        unread:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Message } from \"@app/core/models/message.interface\";\n\nexport interface IChatState {\n    unread: number;\n    messages: Message[];\n    currentMessage: string;\n    blink: boolean;\n}\nexport const initialChatState: IChatState = {\n  unread: 0,\n  messages: [],\n  currentMessage: \"\",\n  blink: false\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISettingsState.html":{"url":"interfaces/ISettingsState.html","title":"interface - ISettingsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISettingsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/state/settings.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        clock\n                                \n                                \n                                        language\n                                \n                                \n                                        sendonenter\n                                \n                                \n                                        theme\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clock\n                                    \n                                \n                                \n                                    \n                                        clock:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sendonenter\n                                    \n                                \n                                \n                                    \n                                        sendonenter:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                    \n                                \n                                \n                                    \n                                        theme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         IUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IUser } from \"@app/core/models/user.interface\";\nimport { environment } from \"@env/environment.prod\";\n\nexport interface ISettingsState {\n    user: IUser;\n    theme: string;\n    clock: boolean;\n    sendonenter: boolean;\n    language: string;\n}\n\nexport const initialSettingsState: ISettingsState = {\n  user: {\n    userid: 0,\n    username: environment.defaultUserName\n  },\n  theme: \"light-theme\",\n  clock: true,\n  sendonenter: false,\n  language: \"en-US\"\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.interface.ts\n        \n\n            \n                Description\n            \n            \n                Build User Data Model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        userid\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userid\n                                    \n                                \n                                \n                                    \n                                        userid:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    user unique id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    username\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IUser {\n  /**\n   * user unique id\n   */\n  userid: number;\n  /**\n   * username\n   */\n  username: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/local-storage/local-storage.service.ts\n        \n\n            \n                Description\n            \n            \n                LocalStorageService service to get and set store changes to local storage\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getItem\n                            \n                            \n                                    Static\n                                loadInitialState\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                            \n                                testLocalStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getItem\n                        \n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/local-storage/local-storage.service.ts:55\n                \n            \n\n\n            \n                \n                    get item from localstorage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            loadInitialState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadInitialState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/local-storage/local-storage.service.ts:15\n                \n            \n\n\n            \n                \n                    check if the localstorage have store data and load it \n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeItem\n                        \n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/local-storage/local-storage.service.ts:61\n                \n            \n\n\n            \n                \n                    remove item from localstorage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setItem\n                        \n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/local-storage/local-storage.service.ts:49\n                \n            \n\n\n            \n                \n                    Set item to localstorage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            testLocalStorage\n                        \n                        \n                    \n                \n            \n            \n                \ntestLocalStorage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/local-storage/local-storage.service.ts:66\n                \n            \n\n\n            \n                \n                    Tests that localStorage exists, can be written to, and read from. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n  /**\n  * Prefix for our app keys in local storage\n  */\nconst APP_PREFIX = 'CHATAPP-';\n/**\n* LocalStorageService service to get and set store changes to local storage\n*/\n@Injectable()\nexport class LocalStorageService {\n  /**\n  * check if the localstorage have store data and load it \n  */\n  static loadInitialState() {\n    return Object.keys(localStorage).reduce((state: any, storageKey) => {\n      if (storageKey.includes(APP_PREFIX)) {\n        const stateKeys = storageKey\n          .replace(APP_PREFIX, '')\n          .toLowerCase()\n          .split('.')\n          .map(key =>\n            key\n              .split('-')\n              .map(\n                (token, index) =>\n                  index === 0\n                    ? token\n                    : token.charAt(0).toUpperCase() + token.slice(1)\n              )\n              .join('')\n          );\n        let currentStateRef = state;\n        stateKeys.forEach((key, index) => {\n          if (index === stateKeys.length - 1) {\n            currentStateRef[key] = JSON.parse(localStorage.getItem(storageKey));\n            return;\n          }\n          currentStateRef[key] = currentStateRef[key] || {};\n          currentStateRef = currentStateRef[key];\n        });\n      }\n      return state;\n    }, {});\n  }\n  /**\n  * Set item to localstorage\n  */\n  setItem(key: string, value: any) {\n    localStorage.setItem(`${APP_PREFIX}${key}`, JSON.stringify(value));\n  }\n  /**\n  * get item from localstorage\n  */\n  getItem(key: string) {\n    return JSON.parse(localStorage.getItem(`${APP_PREFIX}${key}`));\n  }\n  /**\n  * remove item from localstorage\n  */\n  removeItem(key: string) {\n    localStorage.removeItem(`${APP_PREFIX}${key}`);\n  }\n\n  /** Tests that localStorage exists, can be written to, and read from. */\n  testLocalStorage() {\n    const testValue = 'testValue';\n    const testKey = 'testKey';\n    let retrievedValue: string;\n    const errorMessage = 'localStorage did not return expected value';\n\n    this.setItem(testKey, testValue);\n    retrievedValue = this.getItem(testKey);\n    this.removeItem(testKey);\n\n    if (retrievedValue !== testValue) {\n      throw new Error(errorMessage);\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Logger.html":{"url":"classes/Logger.html","title":"class - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/logger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                level\n                            \n                            \n                                    Static\n                                outputs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                    Static\n                                enableProductionMode\n                            \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                    Private\n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(source?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/logger.service.ts:69\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            level\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LogLevel.Debug\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/logger.service.ts:56\n                            \n                        \n\n                \n                    \n                        Current logging level.\nSet it to LogLevel.Off to disable logs completely.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            outputs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogOutput[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/logger.service.ts:61\n                            \n                        \n\n                \n                    \n                        Additional log outputs.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(...objects: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/logger.service.ts:77\n                \n            \n\n\n            \n                \n                    Logs messages or objects  with the debug level.\nWorks the same as console.log().\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    objects\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            enableProductionMode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enableProductionMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/logger.service.ts:67\n                \n            \n\n\n            \n                \n                    Enables production mode.\nSets logging level to LogLevel.Warning.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(...objects: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/logger.service.ts:101\n                \n            \n\n\n            \n                \n                    Logs messages or objects  with the error level.\nWorks the same as console.log().\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    objects\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            info\n                        \n                        \n                    \n                \n            \n            \n                \ninfo(...objects: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/logger.service.ts:85\n                \n            \n\n\n            \n                \n                    Logs messages or objects  with the info level.\nWorks the same as console.log().\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    objects\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(func: Function, level: LogLevel, objects: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/logger.service.ts:107\n                \n            \n\n\n            \n                \n                    Logs messages or objects with log level.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    func\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    objects\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(...objects: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/logger.service.ts:93\n                \n            \n\n\n            \n                \n                    Logs messages or objects  with the warning level.\nWorks the same as console.log().\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    objects\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export enum LogLevel {\n  Off = 0,\n  Error,\n  Warning,\n  Info,\n  Debug\n}\n\n/**\n * Log output handler function.\n */\nexport type LogOutput = (source: string, level: LogLevel, ...objects: any[]) => void;\n\nexport class Logger {\n\n  /**\n   * Current logging level.\n   * Set it to LogLevel.Off to disable logs completely.\n   */\n  static level = LogLevel.Debug;\n\n  /**\n   * Additional log outputs.\n   */\n  static outputs: LogOutput[] = [];\n\n  /**\n   * Enables production mode.\n   * Sets logging level to LogLevel.Warning.\n   */\n  static enableProductionMode() {\n    Logger.level = LogLevel.Warning;\n  }\n\n  constructor(private source?: string) { }\n\n  /**\n   * Logs messages or objects  with the debug level.\n   * Works the same as console.log().\n   */\n  debug(...objects: any[]) {\n    this.log(console.log, LogLevel.Debug, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the info level.\n   * Works the same as console.log().\n   */\n  info(...objects: any[]) {\n    this.log(console.info, LogLevel.Info, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the warning level.\n   * Works the same as console.log().\n   */\n  warn(...objects: any[]) {\n    this.log(console.warn, LogLevel.Warning, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the error level.\n   * Works the same as console.log().\n   */\n  error(...objects: any[]) {\n    this.log(console.error, LogLevel.Error, objects);\n  }\n  /**\n  * Logs messages or objects with log level.\n  */\n  private log(func: Function, level: LogLevel, objects: any[]) {\n    if (level  output.apply(output, [this.source, level].concat(objects)));\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /*\n * This module imports and re-exports all Angular Material modules for convenience,\n * so only 1 module import is needed in your feature modules.\n * See https://material.angular.io/guide/getting-started#step-3-import-the-component-modules.\n *\n * To optimize your production builds, you should only import the components used in your app.\n */\n\nimport { NgModule } from '@angular/core';\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatCommonModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatLineModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatOptionModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatPseudoCheckboxModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n} from '@angular/material';\n\n@NgModule({\n  exports: [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatCommonModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatLineModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatOptionModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatPseudoCheckboxModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSlideToggleModule,\n    MatSliderModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule\n  ]\n})\nexport class MaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/message.interface.ts\n        \n\n            \n                Description\n            \n            \n                Build Message Data Model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                                \n                                        time\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Message text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Message sent datetime\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         IUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IUser\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Message sender info\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IUser } from \"./user.interface\";\n/**\n * Build Message Data Model\n */\nexport interface Message {\n  /**\n   * Message sender info\n   */\n  user: IUser;\n  /**\n   * Message sent datetime\n  */\n  time: Date;\n  /**\n   * Message text\n  */\n  message: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessageComponent.html":{"url":"components/MessageComponent.html","title":"component - MessageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MessageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/chat/message/message.component.ts\n\n\n    \n        Description\n    \n    \n        MessageComponent is an Angular component that takes Message object and display this message\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-message\n            \n\n            \n                styleUrls\n                ./message.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./message.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                format\n                            \n                            \n                                settings$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/chat/message/message.component.ts:38\n                            \n                        \n\n                \n                    \n                            inject Store\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Type :         Message\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/chat/message/message.component.ts:30\n                            \n                        \n                \n                    \n                        Message is the message object the carry the details of the message to be displayed\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat/message/message.component.ts:46\n                \n            \n\n\n            \n                \n                    Implements ngOnInit to update settings date from the store\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            format\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chat/message/message.component.ts:38\n                            \n                        \n\n                \n                    \n                        format string for the date pipe\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            settings$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chat/message/message.component.ts:34\n                            \n                        \n\n                \n                    \n                        settings used to retrieve settings store selection\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { Message } from '@app/core/models/message.interface';\nimport { Observable } from 'rxjs';\nimport { ISettingsState } from '@app/core/store/state/settings.state';\nimport { Store, select } from '@ngrx/store';\nimport { IAppState } from '@app/core/store/state/app.state';\nimport { selectSettings } from '@app/core/store/selectors/settings.selector';\n/**\n* MessageComponent is an Angular component that takes Message object and display this message\n*/\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.scss'],\n  animations: [\n    trigger('items', [\n      transition(':enter', [\n        style({ transform: 'scale(0.5)', opacity: 0 }),  // initial\n        animate('0.5s cubic-bezier(.8, -0.6, 0.2, 1.5)', \n          style({ transform: 'scale(1)', opacity: 1 }))  // final\n      ])\n    ])\n  ]\n})\nexport class MessageComponent implements OnInit {\n  /**\n\t* Message is the message object the carry the details of the message to be displayed\n\t*/\n  @Input() message: Message;\n  /**\n\t* settings used to retrieve settings store selection\n\t*/\n  settings$: Observable;\n  /**\n\t* format string for the date pipe\n\t*/\n  format: string;\n  /**\n  * inject Store\n  */\n  constructor(private store: Store) { }\n\t/**\n\t* Implements ngOnInit to update settings date from the store\n\t*/\n  ngOnInit() {\n    this.settings$ = this.store.pipe(select(selectSettings));\n    this.settings$.subscribe((settings)=>{\n      this.format = settings.clock ? 'hh:mm' : 'HH:mm';\n    })\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n      {{message.user?.username}} , \n      {{message.time | date: format}}\n    \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./message.component.scss\n                \n                .message {\n    border-radius: 20px;\n    clear: both;\n    padding: 10px 15px;\n    position: relative;\n  \n    &:after {\n      border-radius: 50%;\n      bottom: 0;\n      content: \" \";\n      height: 30px;\n      position: absolute;\n      width: 30px;\n      z-index: -1;\n    }\n}\n@media only screen and (min-width: 678px) {\n  .message {\n    max-width: 80%;\n  }\n}\n\n.message-meta {\n  margin: 0 50px;\n  color: #aaa;\n}\n.from-them, .from-me {\n  display: flex;\n  flex-direction: column;\n  margin: 5px 0;\n  flex: 10;\n}\n.from-them {\n  transform-origin: bottom left;\n  order: 1;\n  align-items: flex-start;\n  .message {\n    background: #dedede;\n    margin-left: 30px;\n    &:after{\n      box-shadow: inset 1px 9px 0 4px #fff, inset -9px 0px 0 2px #dedede, 0 0 0 1px #fff;\n      left: -19px;\n    }\n  }\n}\n.from-me {\n  transform-origin: bottom right;\n  order: 3;\n  text-align: right;\n  align-items: flex-end;\n  .message {\n    background: #2d8cfa;\n    color: #fff;\n    margin-right: 30px;\n    &:after {\n      box-shadow: inset -1px 9px 0 4px #fff, inset 9px 1px 0 2px #2d8cfa, 0 0 0 1px #fff;\n      right: -19px;\n    }\n  }\n}\n.flex-fix {\n  flex: 1;\n  order: 2;\n}\n:host-context([dir=rtl])  {\n  .from-me {order: 1;align-items: flex-start;}\n  .from-them {order: 3;text-align: left;align-items: flex-end;}\n}\n:host-context(.dark-theme) {\n  .from-them{\n    .message{\n      background: #333;\n      &:after {\n        box-shadow: inset 1px 9px 0 4px #424242, inset -9px 0px 0 2px #333, 0 0 0 1px #424242;\n      }\n    }\n  }\n  .from-me {\n    .message{\n      background: #666;\n      &:after {\n        box-shadow: inset -1px 9px 0 4px #424242, inset 9px 1px 0 2px #666, 0 0 0 1px #424242;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{message.user?.username}} ,       {{message.time | date: format}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MessageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockStore.html":{"url":"injectables/MockStore.html","title":"injectable - MockStore","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/testing/utils.ts\n        \n\n            \n                Description\n            \n            \n                MockStore for testing purposes\n\n            \n\n            \n                Extends\n            \n            \n                    Store\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(state$: StateObservable, actionsObserver: ActionsSubject, reducerManager: ReducerManager)\n                    \n                \n                        \n                            \n                                Defined in src/testing/utils.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state$\n                                                  \n                                                        \n                                                                    StateObservable\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionsObserver\n                                                  \n                                                        \n                                                                    ActionsSubject\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reducerManager\n                                                  \n                                                        \n                                                                    ReducerManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setState\n                        \n                        \n                    \n                \n            \n            \n                \nsetState(nextState: T)\n                \n            \n\n\n            \n                \n                    Defined in src/testing/utils.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nextState\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stateSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject({} as T)\n                        \n                    \n                        \n                            \n                                    Defined in src/testing/utils.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { NgModule, Injectable } from '@angular/core';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  Store,\n  StateObservable,\n  ActionsSubject,\n  ReducerManager,\n  StoreModule\n} from '@ngrx/store';\nimport { BehaviorSubject } from 'rxjs';\nimport { RouterTestingModule } from '@angular/router/testing';\n/**\n* MockStore for testing purposes\n*/\n@Injectable()\nexport class MockStore extends Store {\n  private stateSubject = new BehaviorSubject({} as T);\n\n  constructor(\n    state$: StateObservable,\n    actionsObserver: ActionsSubject,\n    reducerManager: ReducerManager\n  ) {\n    super(state$, actionsObserver, reducerManager);\n    this.source = this.stateSubject.asObservable();\n  }\n\n  setState(nextState: T) {\n    this.stateSubject.next(nextState);\n  }\n}\n/**\n* MockStore provider\n*/\nexport function provideMockStore() {\n  return {\n    provide: Store,\n    useClass: MockStore\n  };\n}\n\n@NgModule({\n  imports: [\n    NoopAnimationsModule,\n    RouterTestingModule,\n    TranslateModule.forRoot(),\n    StoreModule.forRoot({})\n  ],\n  exports: [\n    NoopAnimationsModule,\n    RouterTestingModule,\n    TranslateModule\n  ],\n  providers: [provideMockStore()]\n})\n/**\n* TestingModule for testing purposes\n*/\nexport class TestingModule {\n  constructor() {}\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ParserPipe.html":{"url":"pipes/ParserPipe.html","title":"pipe - ParserPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ParserPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/chat/message/parser.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        parser\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            automaticLinks\n                        \n                        \n                    \n                \n            \n            \n                \nautomaticLinks(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat/message/parser.pipe.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string, args?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat/message/parser.pipe.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport Autolinker from 'autolinker';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'parser'\n})\nexport class ParserPipe implements PipeTransform {\n  constructor(private _sanitizer: DomSanitizer) { }\n  transform(value: string, args?: any): any {\n      return this._sanitizer.bypassSecurityTrustHtml(this.automaticLinks(value));\n  }\n  automaticLinks(value: string){\n    const youtube = /(?:https?:\\/\\/)?(?:m\\.|www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?/;\n    const img = /\\.(jpeg|jpg|gif|png)$/;\n    return Autolinker.link(value, {\n      truncate: 30,\n      replaceFn: (match) => {\n        const url = match.getAnchorHref();\n        if (match.getType() === 'url') {\n          if (url.match(img)) {\n            const tag = match.buildTag();\n            tag.addClass('image-container');\n            tag.setInnerHtml(``);\n            return tag;\n          } else if (url.match(youtube)) {\n            const embed = ``;\n            return embed;\n          }\n        }\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset.html":{"url":"classes/Reset.html","title":"class - Reset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/actions/settings.actions.ts\n        \n\n            \n                Description\n            \n            \n                build action Reset\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ESettingsActions.Reset\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/settings.actions.ts:60\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from \"@ngrx/store\";\n/**\n* build enum for settings actions\n*/\nexport enum ESettingsActions {\n  ChangeName = \"[Settings] Change user name\",\n  SetUserID = \"[Settings] Set User ID\",\n  ChangeTheme = \"[Settings] Change theme\",\n  ChangeClock = \"[Settings] Change clock display\",\n  ChangeSendOnEnter = \"[Settings] Toggle sending message on ctrl + enter\",\n  ChangeLanguage = \"[Settings] Change language\",\n  Reset = \"[Settings] Reset Settings\"\n}\n/**\n* build action ChangeName\n*/\nexport class ChangeName implements Action {\n  public readonly type = ESettingsActions.ChangeName;\n  constructor(public payload: string) {}\n}\n/**\n* build action SetUserID\n*/\nexport class SetUserID implements Action {\n  public readonly type = ESettingsActions.SetUserID;\n  constructor(public payload: number) {}\n}\n/**\n* build action ChangeTheme\n*/\nexport class ChangeTheme implements Action {\n  public readonly type = ESettingsActions.ChangeTheme;\n  constructor(public payload: string) {}\n}\n/**\n* build action ChangeClock\n*/\nexport class ChangeClock implements Action {\n  public readonly type = ESettingsActions.ChangeClock;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action ChangeSendOnEnter\n*/\nexport class ChangeSendOnEnter implements Action {\n  public readonly type = ESettingsActions.ChangeSendOnEnter;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action ChangeLanguage\n*/\nexport class ChangeLanguage implements Action {\n  public readonly type = ESettingsActions.ChangeLanguage;\n  constructor(public payload: string) {}\n}\n/**\n* build action Reset\n*/\nexport class Reset implements Action {\n  public readonly type = ESettingsActions.Reset;\n}\n/**\n* export SettingsActions\n*/\nexport type SettingsActions = ChangeName | SetUserID | ChangeTheme | ChangeClock | ChangeSendOnEnter | ChangeLanguage | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReveiveMsg.html":{"url":"classes/ReveiveMsg.html","title":"class - ReveiveMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReveiveMsg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/actions/chat.actions.ts\n        \n\n            \n                Description\n            \n            \n                build action ReveiveMsg\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: Message)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/actions/chat.actions.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        Message\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Message\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/chat.actions.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EChatActions.ReveiveMsg\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/chat.actions.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from \"@ngrx/store\";\nimport { Message } from \"@app/core/models/message.interface\";\n/**\n* build enum for chat actions\n*/\nexport enum EChatActions {\n  ReveiveMsg = \"[Chat] Receive Message\",\n  SendMessage = \"[Chat] Send Message\",\n  SaveCurrentMsg = \"[Chat] Save current message\",\n  BlinkTab = \"[Chat] Toggle Tab Blink\",\n  UnreadCount = \"[Chat] Unread Messages Counted\"\n}\n/**\n* build action ReveiveMsg\n*/\nexport class ReveiveMsg implements Action {\n  public readonly type = EChatActions.ReveiveMsg;\n  constructor(public payload: Message) {}\n}\n/**\n* build action SaveCurrentMsg\n*/\nexport class SaveCurrentMsg implements Action {\n  public readonly type = EChatActions.SaveCurrentMsg;\n  constructor(public payload: string) {}\n}\n/**\n* build action SendMessage\n*/\nexport class SendMessage implements Action {\n  public readonly type = EChatActions.SendMessage;\n  constructor(public payload: Message) {}\n}\n/**\n* build action BlinkTab\n*/\nexport class BlinkTab implements Action {\n  public readonly type = EChatActions.BlinkTab;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action UnreadCount\n*/\nexport class UnreadCount implements Action {\n  public readonly type = EChatActions.UnreadCount;\n  constructor(public payload: number) {}\n}\n/**\n* export ChatActions\n*/\nexport type ChatActions = ReveiveMsg | SendMessage | SaveCurrentMsg | BlinkTab | UnreadCount;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouteReusableStrategy.html":{"url":"classes/RouteReusableStrategy.html","title":"class - RouteReusableStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouteReusableStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/route-reusable-strategy.ts\n        \n\n            \n                Description\n            \n            \n                A route strategy allowing for explicit route reuse.\nUsed as a workaround for https://github.com/angular/angular/issues/18374\nTo reuse a given route, add data: { reuse: true } to the route definition.\n\n            \n\n            \n                Extends\n            \n            \n                        RouteReuseStrategy\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                retrieve\n                            \n                            \n                                    Public\n                                shouldAttach\n                            \n                            \n                                    Public\n                                shouldDetach\n                            \n                            \n                                    Public\n                                shouldReuseRoute\n                            \n                            \n                                    Public\n                                store\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            retrieve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    retrieve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DetachedRouteHandle | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shouldAttach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldAttach(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shouldDetach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldDetach(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shouldReuseRoute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    future\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    curr\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            store\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    detachedTree\n                                    \n                                            DetachedRouteHandle | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ActivatedRouteSnapshot, DetachedRouteHandle, RouteReuseStrategy } from '@angular/router';\n\n/**\n * A route strategy allowing for explicit route reuse.\n * Used as a workaround for https://github.com/angular/angular/issues/18374\n * To reuse a given route, add `data: { reuse: true }` to the route definition.\n */\nexport class RouteReusableStrategy extends RouteReuseStrategy {\n\n  public shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle | null): void { }\n\n  public shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    return null;\n  }\n\n  public shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    return (future.routeConfig === curr.routeConfig) || future.data.reuse;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveCurrentMsg.html":{"url":"classes/SaveCurrentMsg.html","title":"class - SaveCurrentMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveCurrentMsg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/actions/chat.actions.ts\n        \n\n            \n                Description\n            \n            \n                build action SaveCurrentMsg\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/actions/chat.actions.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/chat.actions.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EChatActions.SaveCurrentMsg\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/chat.actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from \"@ngrx/store\";\nimport { Message } from \"@app/core/models/message.interface\";\n/**\n* build enum for chat actions\n*/\nexport enum EChatActions {\n  ReveiveMsg = \"[Chat] Receive Message\",\n  SendMessage = \"[Chat] Send Message\",\n  SaveCurrentMsg = \"[Chat] Save current message\",\n  BlinkTab = \"[Chat] Toggle Tab Blink\",\n  UnreadCount = \"[Chat] Unread Messages Counted\"\n}\n/**\n* build action ReveiveMsg\n*/\nexport class ReveiveMsg implements Action {\n  public readonly type = EChatActions.ReveiveMsg;\n  constructor(public payload: Message) {}\n}\n/**\n* build action SaveCurrentMsg\n*/\nexport class SaveCurrentMsg implements Action {\n  public readonly type = EChatActions.SaveCurrentMsg;\n  constructor(public payload: string) {}\n}\n/**\n* build action SendMessage\n*/\nexport class SendMessage implements Action {\n  public readonly type = EChatActions.SendMessage;\n  constructor(public payload: Message) {}\n}\n/**\n* build action BlinkTab\n*/\nexport class BlinkTab implements Action {\n  public readonly type = EChatActions.BlinkTab;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action UnreadCount\n*/\nexport class UnreadCount implements Action {\n  public readonly type = EChatActions.UnreadCount;\n  constructor(public payload: number) {}\n}\n/**\n* export ChatActions\n*/\nexport type ChatActions = ReveiveMsg | SendMessage | SaveCurrentMsg | BlinkTab | UnreadCount;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMessage.html":{"url":"classes/SendMessage.html","title":"class - SendMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/actions/chat.actions.ts\n        \n\n            \n                Description\n            \n            \n                build action SendMessage\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: Message)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/actions/chat.actions.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        Message\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Message\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/chat.actions.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EChatActions.SendMessage\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/chat.actions.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from \"@ngrx/store\";\nimport { Message } from \"@app/core/models/message.interface\";\n/**\n* build enum for chat actions\n*/\nexport enum EChatActions {\n  ReveiveMsg = \"[Chat] Receive Message\",\n  SendMessage = \"[Chat] Send Message\",\n  SaveCurrentMsg = \"[Chat] Save current message\",\n  BlinkTab = \"[Chat] Toggle Tab Blink\",\n  UnreadCount = \"[Chat] Unread Messages Counted\"\n}\n/**\n* build action ReveiveMsg\n*/\nexport class ReveiveMsg implements Action {\n  public readonly type = EChatActions.ReveiveMsg;\n  constructor(public payload: Message) {}\n}\n/**\n* build action SaveCurrentMsg\n*/\nexport class SaveCurrentMsg implements Action {\n  public readonly type = EChatActions.SaveCurrentMsg;\n  constructor(public payload: string) {}\n}\n/**\n* build action SendMessage\n*/\nexport class SendMessage implements Action {\n  public readonly type = EChatActions.SendMessage;\n  constructor(public payload: Message) {}\n}\n/**\n* build action BlinkTab\n*/\nexport class BlinkTab implements Action {\n  public readonly type = EChatActions.BlinkTab;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action UnreadCount\n*/\nexport class UnreadCount implements Action {\n  public readonly type = EChatActions.UnreadCount;\n  constructor(public payload: number) {}\n}\n/**\n* export ChatActions\n*/\nexport type ChatActions = ReveiveMsg | SendMessage | SaveCurrentMsg | BlinkTab | UnreadCount;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetUserID.html":{"url":"classes/SetUserID.html","title":"class - SetUserID","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetUserID\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/actions/settings.actions.ts\n        \n\n            \n                Description\n            \n            \n                build action SetUserID\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/actions/settings.actions.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/settings.actions.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ESettingsActions.SetUserID\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/settings.actions.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from \"@ngrx/store\";\n/**\n* build enum for settings actions\n*/\nexport enum ESettingsActions {\n  ChangeName = \"[Settings] Change user name\",\n  SetUserID = \"[Settings] Set User ID\",\n  ChangeTheme = \"[Settings] Change theme\",\n  ChangeClock = \"[Settings] Change clock display\",\n  ChangeSendOnEnter = \"[Settings] Toggle sending message on ctrl + enter\",\n  ChangeLanguage = \"[Settings] Change language\",\n  Reset = \"[Settings] Reset Settings\"\n}\n/**\n* build action ChangeName\n*/\nexport class ChangeName implements Action {\n  public readonly type = ESettingsActions.ChangeName;\n  constructor(public payload: string) {}\n}\n/**\n* build action SetUserID\n*/\nexport class SetUserID implements Action {\n  public readonly type = ESettingsActions.SetUserID;\n  constructor(public payload: number) {}\n}\n/**\n* build action ChangeTheme\n*/\nexport class ChangeTheme implements Action {\n  public readonly type = ESettingsActions.ChangeTheme;\n  constructor(public payload: string) {}\n}\n/**\n* build action ChangeClock\n*/\nexport class ChangeClock implements Action {\n  public readonly type = ESettingsActions.ChangeClock;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action ChangeSendOnEnter\n*/\nexport class ChangeSendOnEnter implements Action {\n  public readonly type = ESettingsActions.ChangeSendOnEnter;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action ChangeLanguage\n*/\nexport class ChangeLanguage implements Action {\n  public readonly type = ESettingsActions.ChangeLanguage;\n  constructor(public payload: string) {}\n}\n/**\n* build action Reset\n*/\nexport class Reset implements Action {\n  public readonly type = ESettingsActions.Reset;\n}\n/**\n* export SettingsActions\n*/\nexport type SettingsActions = ChangeName | SetUserID | ChangeTheme | ChangeClock | ChangeSendOnEnter | ChangeLanguage | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/settings.component.ts\n\n\n    \n        Description\n    \n    \n        SettingsComponent is an angular component used to customize application interface\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                ./settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                settings$\n                            \n                            \n                                usernameFiels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLanguageSelect\n                            \n                            \n                                onSendOnEnterToggle\n                            \n                            \n                                onThemeChange\n                            \n                            \n                                onTimeDisplayChange\n                            \n                            \n                                onUserNameChange\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    languages\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/settings.component.ts:26\n                            \n                        \n\n                \n                    \n                            inject Store\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/settings.component.ts:40\n                \n            \n\n\n            \n                \n                    Focus on username input after view init\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/settings.component.ts:34\n                \n            \n\n\n            \n                \n                    Implements ngOnInit to update settings date from the store\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLanguageSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonLanguageSelect(language: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/settings.component.ts:76\n                \n            \n\n\n            \n                \n                    dispatch store with ChangeLanguage action on select change\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    language\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSendOnEnterToggle\n                        \n                        \n                    \n                \n            \n            \n                \nonSendOnEnterToggle(sendonenter: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/settings.component.ts:70\n                \n            \n\n\n            \n                \n                    dispatch store with ChangeSendOnEnter action on slider change\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sendonenter\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onThemeChange\n                        \n                        \n                    \n                \n            \n            \n                \nonThemeChange(theme: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/settings.component.ts:64\n                \n            \n\n\n            \n                \n                    dispatch store with ChangeTheme action on theme selection change\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    theme\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onTimeDisplayChange\n                        \n                        \n                    \n                \n            \n            \n                \nonTimeDisplayChange(clock: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/settings.component.ts:58\n                \n            \n\n\n            \n                \n                    dispatch store with ChangeClock action on clock button toggle change\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clock\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUserNameChange\n                        \n                        \n                    \n                \n            \n            \n                \nonUserNameChange(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/settings.component.ts:52\n                \n            \n\n\n            \n                \n                    dispatch store with ChangeName action on username change\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/settings.component.ts:82\n                \n            \n\n\n            \n                \n                    dispatch store with Reset action on click reset button\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            settings$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/settings.component.ts:22\n                            \n                        \n\n                \n                    \n                        settings used to retrieve settings store selection\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            usernameFiels\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('userName')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/settings.component.ts:26\n                            \n                        \n\n                \n                    \n                        reference to username input element\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        languages\n                    \n                \n\n                \n                    \n                        getlanguages()\n                    \n                \n                            \n                                \n                                    Defined in src/app/settings/settings.component.ts:46\n                                \n                            \n                    \n                        \n                                return supported languages array to be used for language select\n\n\n                                \n                                    Returns :     string[]\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ISettingsState } from '@app/core/store/state/settings.state';\nimport { Observable } from 'rxjs';\nimport { Store, select } from '@ngrx/store';\nimport { ChangeSendOnEnter, ChangeLanguage, ChangeClock, ChangeTheme, ChangeName, Reset } from \"@app/core/store/actions/settings.actions\";\nimport { IAppState } from '@app/core/store/state/app.state';\nimport { selectSettings } from '@app/core/store/selectors/settings.selector';\nimport { environment } from '@env/environment';\n\n/**\n* SettingsComponent is an angular component used to customize application interface\n*/\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n  /**\n\t* settings used to retrieve settings store selection\n\t*/\n  settings$: Observable;\n  /**\n\t* reference to username input element\n\t*/\n  @ViewChild(\"userName\") usernameFiels: ElementRef;\n  /**\n  * inject Store\n  */\n  constructor(private store: Store) { }\n\t/**\n\t* Implements ngOnInit to update settings date from the store\n\t*/\n  ngOnInit() {\n    this.settings$ = this.store.pipe(select(selectSettings));\n  }\n  /**\n  * Focus on username input after view init\n  */\n  ngAfterViewInit(){\n    setTimeout(() => {this.usernameFiels.nativeElement.focus()});\n  }\n  /**\n  * return supported languages array to be used for language select\n  */\n  get languages(): string[] {\n    return environment.supportedLanguages;\n  }\n  /**\n  * dispatch store with ChangeName action on username change\n  */\n  onUserNameChange(name: string) {\n    this.store.dispatch(new ChangeName(name));\n  }\n  /**\n  * dispatch store with ChangeClock action on clock button toggle change\n  */\n  onTimeDisplayChange(clock: boolean) {\n    this.store.dispatch(new ChangeClock(clock));\n  }\n  /**\n  * dispatch store with ChangeTheme action on theme selection change\n  */\n  onThemeChange(theme: string) {\n    this.store.dispatch(new ChangeTheme(theme));\n  }\n  /**\n  * dispatch store with ChangeSendOnEnter action on slider change\n  */\n  onSendOnEnterToggle(sendonenter: boolean) {\n    this.store.dispatch(new ChangeSendOnEnter(sendonenter));\n  }\n  /**\n  * dispatch store with ChangeLanguage action on select change\n  */\n  onLanguageSelect(language: string) {\n    this.store.dispatch(new ChangeLanguage(language));\n  }\n  /**\n  * dispatch store with Reset action on click reset button\n  */\n  reset(){\n    this.store.dispatch(new Reset());\n  }\n  \n}\n\n    \n\n    \n        \n  \n    \n\n      \n        SettingsView.Username\n        account_circle\n        \n      \n\n      \n        \n          invert_colors {{\"SettingsView.InterfaceColor\" | translate}}:\n        \n        \n          \n            Light\n          \n            Dark\n        \n      \n\n      \n        \n          access_time {{\"SettingsView.ClockDisplay\" | translate}}:\n        \n        \n          12\n            {{\"SettingsView.Hours\" | translate}}\n          24\n            {{\"SettingsView.Hours\" | translate}}\n        \n      \n\n      \n        send\n        \n          SettingsView.SendOnEnter\n        \n      \n      \n        SettingsView.Language\n        language\n        \n          {{language | translate}}\n        \n      \n      \n          \n      \n      \n        \n          settings_backup_restore {{\"SettingsView.Reset\" | translate}}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./settings.component.scss\n                \n                @media screen and (min-width: 768px) {\n  .field-label {\n    margin-right: 20px;\n    font-size: 1.2em;\n  }\n}\n\n.mat-icon {\n  vertical-align: middle;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    SettingsView.Username        account_circle                                      invert_colors {{\"SettingsView.InterfaceColor\" | translate}}:                                      Light                      Dark                                      access_time {{\"SettingsView.ClockDisplay\" | translate}}:                          12            {{\"SettingsView.Hours\" | translate}}          24            {{\"SettingsView.Hours\" | translate}}                            send                  SettingsView.SendOnEnter                            SettingsView.Language        language                  {{language | translate}}                                                            settings_backup_restore {{\"SettingsView.Reset\" | translate}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsEffects.html":{"url":"injectables/SettingsEffects.html","title":"injectable - SettingsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/effects/settings.effects.ts\n        \n\n            \n                Description\n            \n            \n                SettingsEffects class used to attach side effects for store settings actions\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                persistSettings\n                            \n                            \n                                setTranslateServiceLanguage\n                            \n                            \n                                updateTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, store: Store, localStorageService: LocalStorageService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/effects/settings.effects.ts:15\n                            \n                        \n\n                \n                    \n                            inject  Actions, Store, LocalStorageService, TranslateService\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            persistSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.actions$.pipe(\n    ofType(\n      ESettingsActions.ChangeClock,\n      ESettingsActions.SetUserID,\n      ESettingsActions.ChangeLanguage,\n      ESettingsActions.ChangeName,\n      ESettingsActions.ChangeSendOnEnter,\n      ESettingsActions.ChangeTheme,\n      ESettingsActions.Reset\n    ),\n    withLatestFrom(this.store.pipe(select(selectSettings))),\n    tap(([action, settings]) =>\n      this.localStorageService.setItem('SETTINGS', settings)\n    )\n  )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/effects/settings.effects.ts:29\n                            \n                        \n\n                \n                    \n                        attach setitem to localstorage with each action in ESettingsActions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setTranslateServiceLanguage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.store.pipe(\n    select(selectSettings),\n    map(settings => settings.language),\n    distinctUntilChanged(),\n    tap(language => {\n      this.translateService.use(language);\n      language == \"en-US\" ? (document.dir = \"ltr\") : (document.dir = \"rtl\");\n    })\n  )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/effects/settings.effects.ts:48\n                            \n                        \n\n                \n                    \n                        attach translateservice use method with each change in store settings.language\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.store.pipe(\n    select(selectSettings),\n    map(settings => settings.theme),\n    distinctUntilChanged(),\n    tap((theme) => {\n      const classList = document.body.classList;\n      const toRemove = Array.from(classList).filter((item: string) =>\n        item.includes('-theme')\n      );\n      if (toRemove.length) {\n        classList.remove(...toRemove);\n      }\n      classList.add(theme);\n    })\n  )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/effects/settings.effects.ts:63\n                            \n                        \n\n                \n                    \n                        add current theme class to document.bosy on each settings.theme change\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { select, Store } from \"@ngrx/store\";\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { SettingsActions, ESettingsActions } from \"@app/core/store/actions/settings.actions\";\nimport { LocalStorageService } from \"@app/core\";\n\nimport { tap, withLatestFrom, map, distinctUntilChanged } from \"rxjs/operators\";\nimport { IAppState } from \"@app/core/store/state/app.state\";\nimport { selectSettings } from \"@app/core/store/selectors/settings.selector\";\n/**\n* SettingsEffects class used to attach side effects for store settings actions\n*/\n@Injectable()\nexport class SettingsEffects {\n  /**\n  * inject  Actions, Store, LocalStorageService, TranslateService\n  */\n  constructor(\n    private actions$: Actions,\n    private store: Store,\n    private localStorageService: LocalStorageService,\n    private translateService: TranslateService\n  ) {}\n  /**\n  * attach setitem to localstorage with each action in ESettingsActions\n  */\n  @Effect({ dispatch: false })\n  persistSettings = this.actions$.pipe(\n    ofType(\n      ESettingsActions.ChangeClock,\n      ESettingsActions.SetUserID,\n      ESettingsActions.ChangeLanguage,\n      ESettingsActions.ChangeName,\n      ESettingsActions.ChangeSendOnEnter,\n      ESettingsActions.ChangeTheme,\n      ESettingsActions.Reset\n    ),\n    withLatestFrom(this.store.pipe(select(selectSettings))),\n    tap(([action, settings]) =>\n      this.localStorageService.setItem('SETTINGS', settings)\n    )\n  );\n  /**\n  * attach translateservice use method with each change in store settings.language\n  */\n  @Effect({ dispatch: false })\n  setTranslateServiceLanguage = this.store.pipe(\n    select(selectSettings),\n    map(settings => settings.language),\n    distinctUntilChanged(),\n    tap(language => {\n      this.translateService.use(language);\n      language == \"en-US\" ? (document.dir = \"ltr\") : (document.dir = \"rtl\");\n    })\n  );\n\n\n  /**\n  * add current theme class to document.bosy on each settings.theme change\n  */\n  @Effect({ dispatch: false })\n  updateTheme = this.store.pipe(\n    select(selectSettings),\n    map(settings => settings.theme),\n    distinctUntilChanged(),\n    tap((theme) => {\n      const classList = document.body.classList;\n      const toRemove = Array.from(classList).filter((item: string) =>\n        item.includes('-theme')\n      );\n      if (toRemove.length) {\n        classList.remove(...toRemove);\n      }\n      classList.add(theme);\n    })\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSettingsModule -->\n\nMaterialModule->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/settings/settings.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SettingsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                        \n                            SettingsRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule } from '@angular/forms';\n\nimport { MaterialModule } from '@app/material.module';\nimport { SettingsRoutingModule } from './settings-routing.module';\nimport { SettingsComponent } from './settings.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslateModule,\n    FlexLayoutModule,\n    FormsModule,\n    MaterialModule,\n    SettingsRoutingModule\n  ],\n  declarations: [\n    SettingsComponent\n  ]\n})\nexport class SettingsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsRoutingModule.html":{"url":"modules/SettingsRoutingModule.html","title":"module - SettingsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/settings/settings-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { extract } from '@app/core';\nimport { SettingsComponent } from './settings.component';\n\nconst routes: Routes = [\n  { path: 'settings', component: SettingsComponent, data: { title: \"extract('Settings')\" } }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: []\n})\nexport class SettingsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SocketioService.html":{"url":"injectables/SocketioService.html","title":"injectable - SocketioService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SocketioService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/socketio/socketio.service.ts\n        \n\n            \n                Description\n            \n            \n                SocketioService extends Socket class and used to initialize server connection then listen,emit to it\n\n            \n\n            \n                Extends\n            \n            \n                    Socket\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chatReceived$\n                            \n                            \n                                userCreated$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                chatSend\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/socketio/socketio.service.ts:20\n                            \n                        \n\n                \n                    \n                            initialize the connection with the \"url\"\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            chatSend\n                        \n                        \n                    \n                \n            \n            \n                \nchatSend(msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/socketio/socketio.service.ts:33\n                \n            \n\n\n            \n                \n                    emit \"chat\" event to server with msg data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chatReceived$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.fromEvent(\"chat-received\")\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/socketio/socketio.service.ts:16\n                            \n                        \n\n                \n                    \n                        chatReceived is a listner to \"chat-received\" server event\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userCreated$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.fromOneTimeEvent(\"user-created\")\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/socketio/socketio.service.ts:20\n                            \n                        \n\n                \n                    \n                        userCreated is a one time listner to \"user-created\" server event\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Socket } from \"ngx-socket-io\";\nimport { environment } from \"@env/environment\";\nimport { Message } from \"../../models/message.interface\";\n\n/**\n* SocketioService extends Socket class and used to initialize server connection then listen,emit to it\n*/\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SocketioService extends Socket {\n  /**\n  * chatReceived is a listner to \"chat-received\" server event\n  */\n  chatReceived$ = this.fromEvent(\"chat-received\");\n  /**\n  * userCreated is a one time listner to \"user-created\" server event\n  */\n  userCreated$ = this.fromOneTimeEvent(\"user-created\");\n  /**\n  * initialize the connection with the \"url\"\n  */\n  constructor() {\n    super({\n      url: environment.serverUrl,\n      options: {}\n    });\n  }\n  /**\n  * emit \"chat\" event to server with msg data\n  */\n  chatSend(msg: Message) {\n    this.emit(\"chat\", msg);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TestingModule.html":{"url":"modules/TestingModule.html","title":"module - TestingModule","body":"\n                   \n\n\n\n\n    Modules\n    TestingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/testing/utils.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, Injectable } from '@angular/core';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  Store,\n  StateObservable,\n  ActionsSubject,\n  ReducerManager,\n  StoreModule\n} from '@ngrx/store';\nimport { BehaviorSubject } from 'rxjs';\nimport { RouterTestingModule } from '@angular/router/testing';\n/**\n* MockStore for testing purposes\n*/\n@Injectable()\nexport class MockStore extends Store {\n  private stateSubject = new BehaviorSubject({} as T);\n\n  constructor(\n    state$: StateObservable,\n    actionsObserver: ActionsSubject,\n    reducerManager: ReducerManager\n  ) {\n    super(state$, actionsObserver, reducerManager);\n    this.source = this.stateSubject.asObservable();\n  }\n\n  setState(nextState: T) {\n    this.stateSubject.next(nextState);\n  }\n}\n/**\n* MockStore provider\n*/\nexport function provideMockStore() {\n  return {\n    provide: Store,\n    useClass: MockStore\n  };\n}\n\n@NgModule({\n  imports: [\n    NoopAnimationsModule,\n    RouterTestingModule,\n    TranslateModule.forRoot(),\n    StoreModule.forRoot({})\n  ],\n  exports: [\n    NoopAnimationsModule,\n    RouterTestingModule,\n    TranslateModule\n  ],\n  providers: [provideMockStore()]\n})\n/**\n* TestingModule for testing purposes\n*/\nexport class TestingModule {\n  constructor() {}\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnreadCount.html":{"url":"classes/UnreadCount.html","title":"class - UnreadCount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnreadCount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/actions/chat.actions.ts\n        \n\n            \n                Description\n            \n            \n                build action UnreadCount\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/actions/chat.actions.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/chat.actions.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EChatActions.UnreadCount\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/chat.actions.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from \"@ngrx/store\";\nimport { Message } from \"@app/core/models/message.interface\";\n/**\n* build enum for chat actions\n*/\nexport enum EChatActions {\n  ReveiveMsg = \"[Chat] Receive Message\",\n  SendMessage = \"[Chat] Send Message\",\n  SaveCurrentMsg = \"[Chat] Save current message\",\n  BlinkTab = \"[Chat] Toggle Tab Blink\",\n  UnreadCount = \"[Chat] Unread Messages Counted\"\n}\n/**\n* build action ReveiveMsg\n*/\nexport class ReveiveMsg implements Action {\n  public readonly type = EChatActions.ReveiveMsg;\n  constructor(public payload: Message) {}\n}\n/**\n* build action SaveCurrentMsg\n*/\nexport class SaveCurrentMsg implements Action {\n  public readonly type = EChatActions.SaveCurrentMsg;\n  constructor(public payload: string) {}\n}\n/**\n* build action SendMessage\n*/\nexport class SendMessage implements Action {\n  public readonly type = EChatActions.SendMessage;\n  constructor(public payload: Message) {}\n}\n/**\n* build action BlinkTab\n*/\nexport class BlinkTab implements Action {\n  public readonly type = EChatActions.BlinkTab;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action UnreadCount\n*/\nexport class UnreadCount implements Action {\n  public readonly type = EChatActions.UnreadCount;\n  constructor(public payload: number) {}\n}\n/**\n* export ChatActions\n*/\nexport type ChatActions = ReveiveMsg | SendMessage | SaveCurrentMsg | BlinkTab | UnreadCount;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            variable\n            log\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/chat/chat.component.ts\n            \n            component\n            ChatComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/chat/message/message.component.ts\n            \n            component\n            MessageComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/chat/message/parser.pipe.ts\n            \n            pipe\n            ParserPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/core.module.ts\n            \n            function\n            extract\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/logger.service.ts\n            \n            class\n            Logger\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/core/models/message.interface.ts\n            \n            interface\n            Message\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/models/user.interface.ts\n            \n            interface\n            IUser\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/route-reusable-strategy.ts\n            \n            class\n            RouteReusableStrategy\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/core/services/local-storage/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/core/services/local-storage/local-storage.service.ts\n            \n            variable\n            APP_PREFIX\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/services/socketio/socketio.service.ts\n            \n            injectable\n            SocketioService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/store/actions/chat.actions.ts\n            \n            class\n            BlinkTab\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/store/actions/chat.actions.ts\n            \n            class\n            ReveiveMsg\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/store/actions/chat.actions.ts\n            \n            class\n            SaveCurrentMsg\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/store/actions/chat.actions.ts\n            \n            class\n            SendMessage\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/store/actions/chat.actions.ts\n            \n            class\n            UnreadCount\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/store/actions/settings.actions.ts\n            \n            class\n            ChangeClock\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/store/actions/settings.actions.ts\n            \n            class\n            ChangeLanguage\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/store/actions/settings.actions.ts\n            \n            class\n            ChangeName\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/store/actions/settings.actions.ts\n            \n            class\n            ChangeSendOnEnter\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/store/actions/settings.actions.ts\n            \n            class\n            ChangeTheme\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/store/actions/settings.actions.ts\n            \n            class\n            Reset\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/core/store/actions/settings.actions.ts\n            \n            class\n            SetUserID\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/store/effects/chat.effects.ts\n            \n            injectable\n            ChatEffects\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/store/effects/settings.effects.ts\n            \n            injectable\n            SettingsEffects\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/store/reducers/app.reducers.ts\n            \n            variable\n            appReducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/reducers/app.reducers.ts\n            \n            variable\n            metaReducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/reducers/chat.reducer.ts\n            \n            function\n            chatReducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/reducers/local-storage.reducer.ts\n            \n            function\n            initStateFromLocalStorage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/reducers/settings.reducer.ts\n            \n            function\n            settingsReducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/selectors/chat.selector.ts\n            \n            variable\n            chatState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/selectors/chat.selector.ts\n            \n            variable\n            selectChat\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/selectors/settings.selector.ts\n            \n            variable\n            selectSettings\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/selectors/settings.selector.ts\n            \n            variable\n            settingsState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/state/app.state.ts\n            \n            interface\n            IAppState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/store/state/app.state.ts\n            \n            function\n            getInitialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/state/app.state.ts\n            \n            variable\n            initialAppState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/state/chat.state.ts\n            \n            interface\n            IChatState\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/store/state/chat.state.ts\n            \n            variable\n            initialChatState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/state/settings.state.ts\n            \n            interface\n            ISettingsState\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/store/state/settings.state.ts\n            \n            variable\n            initialSettingsState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/testing/utils.ts\n            \n            injectable\n            MockStore\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/testing/utils.ts\n            \n            function\n            provideMockStore\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.0.0\n        \n            @angular/cdk : ^7.0.1\n        \n            @angular/common : ^7.0.0\n        \n            @angular/compiler : ^7.0.0\n        \n            @angular/core : ^7.0.0\n        \n            @angular/flex-layout : 7.0.0-beta.19\n        \n            @angular/forms : ^7.0.0\n        \n            @angular/http : ^7.0.0\n        \n            @angular/material : ^7.0.1\n        \n            @angular/platform-browser : ^7.0.0\n        \n            @angular/platform-browser-dynamic : ^7.0.0\n        \n            @angular/router : ^7.0.0\n        \n            @angular/service-worker : ^7.0.0\n        \n            @ctrl/ngx-emoji-mart : ^0.14.0\n        \n            @ngrx/core : ^1.2.0\n        \n            @ngrx/effects : ^7.4.0\n        \n            @ngrx/router-store : ^7.4.0\n        \n            @ngrx/store : ^7.4.0\n        \n            @ngrx/store-devtools : ^7.4.0\n        \n            @ngx-translate/core : ^10.0.1\n        \n            autolinker : ^3.0.5\n        \n            core-js : ^2.5.6\n        \n            hammerjs : ^2.0.8\n        \n            lodash : ^4.17.10\n        \n            material-design-icons-iconfont : ^3.0.3\n        \n            ngx-scrollbar : ^4.1.1\n        \n            ngx-socket-io : ^2.1.1\n        \n            rxjs : ^6.3.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EChatActions   (src/.../chat.actions.ts)\n                        \n                        \n                            ESettingsActions   (src/.../settings.actions.ts)\n                        \n                        \n                            LogLevel   (src/.../logger.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/store/actions/chat.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        EChatActions\n                    \n                \n                    \n                        \n                            build enum for chat actions\n\n                        \n                    \n                        \n                            \n                                 ReveiveMsg\n                            \n                        \n                        \n                            \n                                Value : [Chat] Receive Message\n                            \n                        \n                        \n                            \n                                 SendMessage\n                            \n                        \n                        \n                            \n                                Value : [Chat] Send Message\n                            \n                        \n                        \n                            \n                                 SaveCurrentMsg\n                            \n                        \n                        \n                            \n                                Value : [Chat] Save current message\n                            \n                        \n                        \n                            \n                                 BlinkTab\n                            \n                        \n                        \n                            \n                                Value : [Chat] Toggle Tab Blink\n                            \n                        \n                        \n                            \n                                 UnreadCount\n                            \n                        \n                        \n                            \n                                Value : [Chat] Unread Messages Counted\n                            \n                        \n            \n        \n\n    src/app/core/store/actions/settings.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        ESettingsActions\n                    \n                \n                    \n                        \n                            build enum for settings actions\n\n                        \n                    \n                        \n                            \n                                 ChangeName\n                            \n                        \n                        \n                            \n                                Value : [Settings] Change user name\n                            \n                        \n                        \n                            \n                                 SetUserID\n                            \n                        \n                        \n                            \n                                Value : [Settings] Set User ID\n                            \n                        \n                        \n                            \n                                 ChangeTheme\n                            \n                        \n                        \n                            \n                                Value : [Settings] Change theme\n                            \n                        \n                        \n                            \n                                 ChangeClock\n                            \n                        \n                        \n                            \n                                Value : [Settings] Change clock display\n                            \n                        \n                        \n                            \n                                 ChangeSendOnEnter\n                            \n                        \n                        \n                            \n                                Value : [Settings] Toggle sending message on ctrl + enter\n                            \n                        \n                        \n                            \n                                 ChangeLanguage\n                            \n                        \n                        \n                            \n                                Value : [Settings] Change language\n                            \n                        \n                        \n                            \n                                 Reset\n                            \n                        \n                        \n                            \n                                Value : [Settings] Reset Settings\n                            \n                        \n            \n        \n\n    src/app/core/logger.service.ts\n    \n        \n            \n                \n                    \n                        \n                        LogLevel\n                    \n                \n                    \n                        \n                            Simple logger system with the possibility of registering custom outputs.\n4 different log levels are provided, with corresponding methods:\n- debug   : for debug information\n- info    : for informative status of the application (success, ...)\n- warning : for non-critical errors that do not prevent normal application behavior\n- error   : for critical errors that prevent normal application behavior\nExample usage:\n* import { Logger } from 'app/core/logger.service';\n *\n * const log = new Logger('myFile');\n * ...\n * log.debug('something happened');\n *\nTo disable debug and info logs in production, add this snippet to your root component:\n```\n * export class AppComponent implements OnInit {\n *   ngOnInit() {\n *     if (environment.production) {\n *       Logger.enableProductionMode();\n *     }\n *     ...\n *   }\n * }\n *\n * If you want to process logs through other outputs than console, you can add LogOutput functions to Logger.outputs.\n *\n\n                        \n                    \n                        \n                            \n                                 Off\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                 Warning\n                            \n                        \n                        \n                            \n                                 Info\n                            \n                        \n                        \n                            \n                                 Debug\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            chatReducers   (src/.../chat.reducer.ts)\n                        \n                        \n                            extract   (src/.../core.module.ts)\n                        \n                        \n                            getInitialState   (src/.../app.state.ts)\n                        \n                        \n                            initStateFromLocalStorage   (src/.../local-storage.reducer.ts)\n                        \n                        \n                            provideMockStore   (src/.../utils.ts)\n                        \n                        \n                            settingsReducers   (src/.../settings.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/store/reducers/chat.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            chatReducers\n                        \n                        \n                    \n                \n            \n            \n                \nchatReducers(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IChatState\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/core/core.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            extract\n                        \n                        \n                    \n                \n            \n            \n                \nextract(s)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/core/store/state/app.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getInitialState\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialState()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         IAppState\n\n                    \n                \n            \n        \n    \n    src/app/core/store/reducers/local-storage.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            initStateFromLocalStorage\n                        \n                        \n                    \n                \n            \n            \n                \ninitStateFromLocalStorage(reducer)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reducer\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionReducer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/testing/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            provideMockStore\n                        \n                        \n                    \n                \n            \n            \n                \nprovideMockStore()\n                \n            \n\n\n\n\n            \n                \n                    MockStore provider\n\n\n                \n            \n        \n    \n    src/app/core/store/reducers/settings.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            settingsReducers\n                        \n                        \n                    \n                \n            \n            \n                \nsettingsReducers(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ISettingsState\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nchat-app\nAn Angular Chat Application using ngrx, Angular material and socket.io.\n\nFeatures\nApp\n- NGRX implementation\n- 2 Languages \"English and Arabic\"\n- 2 interface directions \"LTR, RTL\"\n- All customization saved in local storageChat Page\n- Socket.io based chat interface\n- Emoji :)\n- Parser that can parse \"Youtube Videos, Images, URLs\"\n- Blink when receive message when the user on another tab\n- Unread messages counter\n- Nice Custom scrollbar with auto scroll to bottom\n- 2 message themes one for current user messages floated right and other one for other people floated to left\n- animations for messages enterance\n- save user entered text before leaving the page and restore it once get back to the page\n- send message on click send button OR on `CTRL+ENTER`.\n- Input autofocus on page init\n- Input text with Off autocompleteSettings Page\n- Ability to customize \"User name, Interface theme, Clock Display, Send messages on CTRL+ENTER, - - - Interface Language\"\n- Ability to reset all customization to defaults\n- Store user customization in localstorage and restore it on init the app.TODO\n- Authentication\n- Chat history\n- Browser notifications and \"favico.js\" for Unread messages\n- Sounds for each action \"Audio sprite using HowlerJS\"\n- Message grouping “sequence messages from same user”\n- Add Router animationsGetting started\n\nGo to project folder then navigate to /server and install server dependencies:\n| npm install\n\nback to main app folder using command \n| cd ../\nafter that launch the socket.io server using command\n| npm run server\n\nRun npm install to install our app dependencies.\nThen Lanuch the angular app server using command npm start and open localhost:4200 in your browser.\n\n\nProject structure\nsh\ndist/                        web app production build\ndocs/                        project docs and coding guides\ndocumentation/               Full project documentation\ne2e/                         end-to-end tests\nsrc/                         project source code\n|- app/                      app components\n|  |- core/                  core module (singleton services and store)\n|  |- chat/                  chat module  (chat component, message component)\n|  |- settings/              settings module  (settings component)\n|  |- app.component.*        app root component (shell)\n|  |- app.module.ts          app root module definition\n|  |- app-routing.module.ts  app routes\n|  +- ...                    additional modules and components\n|- assets/                   app assets (images, fonts, sounds...)\n|- environments/             values for various build environments\n|- theme/                    app global scss variables and theme\n|- translations/             translations files\n|- testing/                  testing utils\n|- index.html                html entry point\n|- main.scss                 global style entry point\n|- main.ts                   app entry point\n|- polyfills.ts              polyfills needed by Angular\n+- test.ts                   unit tests entry point\nreports/                     test and coverage reports\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChatModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChatRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TestingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ChatModule\n\n\n\ncluster_ChatModule_declarations\n\n\n\ncluster_ChatModule_imports\n\n\n\ncluster_ChatModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nChatModule\n\nChatModule\n\nAppModule -->\n\nChatModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\nChatModule -->\n\nCoreModule->ChatModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\nChatModule -->\n\nMaterialModule->ChatModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nMaterialModule->SettingsModule\n\n\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\n\n\nChatComponent\n\nChatComponent\n\nChatModule -->\n\nChatComponent->ChatModule\n\n\n\n\n\nMessageComponent\n\nMessageComponent\n\nChatModule -->\n\nMessageComponent->ChatModule\n\n\n\n\n\nParserPipe\n\nParserPipe\n\nChatModule -->\n\nParserPipe->ChatModule\n\n\n\n\n\nChatRoutingModule\n\nChatRoutingModule\n\nChatModule -->\n\nChatRoutingModule->ChatModule\n\n\n\n\n\nSocketioService\n\nSocketioService\n\nChatModule -->\n\nSocketioService->ChatModule\n\n\n\n\n\n!environment\n\n!environment\n\nCoreModule -->\n\n!environment->CoreModule\n\n\n\n\n\nLocalStorageService\n\nLocalStorageService\n\nCoreModule -->\n\nLocalStorageService->CoreModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        2 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ChatActions   (src/.../chat.actions.ts)\n                        \n                        \n                            LogOutput   (src/.../logger.service.ts)\n                        \n                        \n                            SettingsActions   (src/.../settings.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/store/actions/chat.actions.ts\n    \n    \n        \n            \n                \n                    \n                    ChatActions\n                \n            \n            \n                \n                    export ChatActions\n\n                \n            \n            \n                \n                            ReveiveMsg | SendMessage | SaveCurrentMsg | BlinkTab | UnreadCount\n\n                \n            \n        \n    \n    src/app/core/logger.service.ts\n    \n    \n        \n            \n                \n                    \n                    LogOutput\n                \n            \n            \n                \n                    Log output handler function.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/app/core/store/actions/settings.actions.ts\n    \n    \n        \n            \n                \n                    \n                    SettingsActions\n                \n            \n            \n                \n                    export SettingsActions\n\n                \n            \n            \n                \n                        ChangeName | SetUserID | ChangeTheme | ChangeClock | ChangeSendOnEnter | ChangeLanguage | Reset\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            APP_PREFIX   (src/.../local-storage.service.ts)\n                        \n                        \n                            appReducers   (src/.../app.reducers.ts)\n                        \n                        \n                            chatState   (src/.../chat.selector.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            initialAppState   (src/.../app.state.ts)\n                        \n                        \n                            initialChatState   (src/.../chat.state.ts)\n                        \n                        \n                            initialSettingsState   (src/.../settings.state.ts)\n                        \n                        \n                            log   (src/.../app.component.ts)\n                        \n                        \n                            metaReducers   (src/.../app.reducers.ts)\n                        \n                        \n                            selectChat   (src/.../chat.selector.ts)\n                        \n                        \n                            selectSettings   (src/.../settings.selector.ts)\n                        \n                        \n                            settingsState   (src/.../settings.selector.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/services/local-storage/local-storage.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            APP_PREFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'CHATAPP-'\n                        \n                    \n\n                \n                    \n                        Prefix for our app keys in local storage\n\n                    \n                \n\n            \n        \n\n    src/app/core/store/reducers/app.reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            appReducers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  router: routerReducer,\n  settings: settingsReducers,\n  chat: chatReducers\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            metaReducers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MetaReducer[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  initStateFromLocalStorage\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/core/store/selectors/chat.selector.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            chatState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: IAppState) => state.chat\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectChat\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n  chatState,\n  (state: IChatState) => state\n)\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  serverUrl: 'http://localhost:3000',\n  defaultLanguage: 'en-US',\n  defaultUserName: 'Guest',\n  supportedLanguages: [\n    'en-US',\n    'ar-EG'\n  ]\n}\n                        \n                    \n\n                \n                    \n                        we can add more environment related variables like API's baseurl\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  serverUrl: 'http://localhost:3000',\n  defaultLanguage: 'en-US',\n  defaultUserName: 'Guest',\n  supportedLanguages: [\n    'en-US',\n    'ar-EG'\n  ]\n}\n                        \n                    \n\n                \n                    \n                        we can add more environment related variables like API's baseurl\n\n                    \n                \n\n            \n        \n\n    src/app/core/store/state/app.state.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialAppState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IAppState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  chat: initialChatState,\n  settings: initialSettingsState\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/core/store/state/chat.state.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialChatState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IChatState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  unread: 0,\n  messages: [],\n  currentMessage: \"\",\n  blink: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/core/store/state/settings.state.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialSettingsState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ISettingsState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  user: {\n    userid: 0,\n    username: environment.defaultUserName\n  },\n  theme: \"light-theme\",\n  clock: true,\n  sendonenter: false,\n  language: \"en-US\"\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/app.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            log\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(\"App\")\n                        \n                    \n\n\n            \n        \n\n    src/app/core/store/selectors/settings.selector.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selectSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n  settingsState,\n  (state: ISettingsState) => state\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            settingsState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: IAppState) => state.settings\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
