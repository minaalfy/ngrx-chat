var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.248,1,1.681]],["body/components/AppComponent.html",[0,1.683,1,2.5,2,2.188,3,0.171,4,0.171,5,1.734,6,1.893,7,1.893,8,1.893,9,0.171,10,2.093,11,1.2,12,3.023,13,1.893,14,4.054,15,2.785,16,2.783,17,2.783,18,4.819,19,2.783,20,4.064,21,0.278,22,0.673,23,1.869,24,1.69,25,4.819,26,3.333,27,0.907,28,2.764,29,4.054,30,6.119,31,4.819,32,4.632,33,4.632,34,3.294,35,3.023,36,2.86,37,2.137,38,0.958,39,4.064,40,0.55,41,0.022,42,0.798,43,0.479,44,0.487,45,2.764,46,1.149,47,3.301,48,0.53,49,0.691,50,4.064,51,1.488,52,1.734,53,1.734,54,1.022,55,1.221,56,2.764,57,1.389,58,2.764,59,2.549,60,2.764,61,1.893,62,2.093,63,1.301,64,1.734,65,2.188,66,1.488,67,1.602,68,0.617,69,1.149,70,2.764,71,1.149,72,2.764,73,0.907,74,2.764,75,1.083,76,2.764,77,1.488,78,2.764,79,1.734,80,2.764,81,2.082,82,1.488,83,1.083,84,2.359,85,0.151,86,0.008,87,3.294,88,4.064,89,1.893,90,2.359,91,2.764,92,2.764,93,2.764,94,2.783,95,2.764,96,1.221,97,2.764,98,2.764,99,2.764,100,2.359,101,2.764,102,2.359,103,4.064,104,2.764,105,2.093,106,2.764,107,1.592,108,1.893,109,2.764,110,1.342,111,2.359,112,3.639,113,1.389,114,2.764,115,2.359,116,2.764,117,4.064,118,1.389,119,2.764,120,2.764,121,2.764,122,2.764,123,2.764,124,2.764,125,2.764,126,2.764,127,1.346,128,2.764,129,2.093,130,2.764,131,2.764,132,2.004,133,1.734,134,2.764,135,2.093,136,2.093,137,2.004,138,2.359,139,2.764,140,2.764,141,2.764,142,2.764,143,2.764,144,2.764,145,2.359,146,2.764,147,1.602,148,1.301,149,2.549,150,2.783,151,1.893,152,3.639,153,1.893,154,1.893,155,1.301,156,1.893,157,1.389,158,1.893,159,1.301,160,1.893,161,1.893,162,0.008,163,0.012,164,0.008]],["title/modules/AppModule.html",[165,1.115,166,2.241]],["body/modules/AppModule.html",[1,3.325,3,0.234,4,0.234,9,0.234,15,1.783,41,0.022,48,0.548,49,0.947,52,3.182,53,2.377,54,1.401,55,1.674,63,1.783,64,2.377,66,2.04,85,0.207,86,0.011,89,2.596,148,1.783,162,0.011,163,0.015,164,0.011,165,1.183,166,4.538,167,1.401,168,1.904,169,3.587,170,3.587,171,2.241,172,1.576,173,3.234,174,3.234,175,3.234,176,3.234,177,4.11,178,4.11,179,3.796,180,3.527,181,4.11,182,3.182,183,1.002,184,2.196,185,3.79,186,2.241,187,5.073,188,2.241,189,3.84,190,2.596,191,3.79,192,3.234,193,2.869,194,2.196,195,5.073,196,2.869,197,3.79,198,3.79,199,3.79,200,3.234,201,2.869,202,5.073,203,2.596,204,3.79,205,3.79,206,3.234,207,2.869]],["title/modules/AppRoutingModule.html",[165,1.115,177,2.241]],["body/modules/AppRoutingModule.html",[3,0.313,4,0.313,9,0.313,41,0.022,48,0.468,49,1.266,51,2.726,81,1.984,85,0.277,86,0.015,112,3.469,162,0.015,163,0.018,164,0.015,167,1.873,171,2.238,172,2.106,177,3.827,186,2.238,188,2.696,208,5.064,209,3.469,210,3.525,211,4.178,212,4.322,213,5.064,214,5.064,215,3.834,216,4.322,217,4.322,218,3.834,219,5.064]],["title/classes/BlinkTab.html",[86,0.01,220,1.485]],["body/classes/BlinkTab.html",[3,0.217,4,0.217,9,0.217,11,1.891,21,0.353,22,0.797,23,2.113,27,0.782,38,1.092,40,0.697,41,0.022,42,0.581,43,0.807,44,0.618,48,0.369,68,0.782,71,2.458,73,1.429,85,0.365,86,0.018,137,1.457,162,0.01,163,0.014,164,0.01,220,2.662,221,1.157,222,1.761,223,0.618,224,1.936,225,1.963,226,2.505,227,2.617,228,2.569,229,1.457,230,1.746,231,4.811,232,3.505,233,0.828,234,0.828,235,2.787,236,1.761,237,1.68,238,1.157,239,1.887,240,1.887,241,2.458,242,1.649,243,2.613,244,1.761,245,1.457,246,1.157,247,1.887,248,2.458,249,1.548,250,1.457,251,2.031,252,2.198,253,2.428,254,2.031,255,0.657,256,2.198,257,2.031,258,1.224,259,2.59]],["title/classes/ChangeClock.html",[86,0.01,260,1.4]],["body/classes/ChangeClock.html",[3,0.198,4,0.198,9,0.198,11,1.93,21,0.323,22,0.749,27,0.716,38,1.042,40,0.638,41,0.022,42,0.749,43,0.809,44,0.565,48,0.246,68,0.716,73,0.716,75,2.23,85,0.368,86,0.018,96,1.417,107,2.23,110,1.059,127,1.856,162,0.009,163,0.013,164,0.009,183,1.586,221,1.059,223,0.565,224,1.962,225,1.981,226,2.518,227,2.603,228,2.603,229,1.333,230,1.772,233,0.758,234,0.758,237,1.58,238,1.059,246,1.059,253,2.44,255,0.982,258,1.12,260,2.44,261,1.417,262,4.523,263,3.207,264,2.273,265,1.509,266,2.23,267,1.412,268,1.333,269,2.23,270,1.059,271,1.257,272,1.417,273,2.23,274,1.611,275,1.611,276,1.611,277,2.23,278,1.611,279,1.611,280,1.611,281,1.611,282,1.611,283,1.611,284,2.128]],["title/classes/ChangeLanguage.html",[86,0.01,277,1.4]],["body/classes/ChangeLanguage.html",[3,0.198,4,0.198,9,0.198,11,1.93,21,0.323,22,0.749,27,0.716,38,1.042,40,0.638,41,0.022,42,0.749,43,0.809,44,0.565,48,0.246,68,0.716,73,0.716,75,2.23,85,0.368,86,0.018,96,1.417,107,2.23,110,1.059,127,1.856,162,0.009,163,0.013,164,0.009,183,1.586,221,1.059,223,0.565,224,1.962,225,1.981,226,2.518,227,2.603,228,2.603,229,1.333,230,1.336,233,0.758,234,0.758,237,1.58,238,1.059,246,1.059,253,2.44,255,1.166,258,1.12,260,2.23,261,1.417,264,1.611,265,1.509,266,2.23,267,1.412,268,1.333,269,2.23,270,1.059,271,1.257,272,1.417,273,2.23,274,1.611,275,1.611,276,1.611,277,2.44,278,1.611,279,1.611,280,1.611,281,1.611,282,2.273,283,1.611,284,2.128,285,4.523,286,3.207]],["title/classes/ChangeName.html",[86,0.01,266,1.4]],["body/classes/ChangeName.html",[3,0.198,4,0.198,9,0.198,11,1.93,21,0.323,22,0.749,27,0.716,38,1.042,40,0.638,41,0.022,42,0.749,43,0.809,44,0.565,48,0.246,68,0.716,73,0.716,75,2.23,85,0.368,86,0.018,96,1.417,107,2.23,110,1.059,127,1.856,162,0.009,163,0.013,164,0.009,183,1.586,221,1.059,223,0.565,224,1.962,225,1.981,226,2.518,227,2.603,228,2.603,229,1.333,230,1.336,233,0.758,234,0.758,237,1.58,238,1.059,246,1.059,253,2.44,255,1.166,258,1.12,260,2.23,261,1.417,264,1.611,265,1.509,266,2.44,267,1.412,268,1.333,269,2.23,270,1.059,271,1.257,272,1.417,273,2.23,274,1.611,275,1.611,276,1.611,277,2.23,278,2.273,279,1.611,280,1.611,281,1.611,282,1.611,283,1.611,284,2.128,287,4.523,288,3.207]],["title/classes/ChangeSendOnEnter.html",[86,0.01,273,1.4]],["body/classes/ChangeSendOnEnter.html",[3,0.198,4,0.198,9,0.198,11,1.93,21,0.323,22,0.749,27,0.716,38,1.042,40,0.638,41,0.022,42,0.749,43,0.809,44,0.565,48,0.246,68,0.716,73,0.716,75,2.23,85,0.368,86,0.018,96,1.417,107,2.23,110,1.059,127,1.856,162,0.009,163,0.013,164,0.009,183,1.586,221,1.059,223,0.565,224,1.962,225,1.981,226,2.518,227,2.603,228,2.603,229,1.333,230,1.772,233,0.758,234,0.758,237,1.58,238,1.059,246,1.059,253,2.44,255,0.982,258,1.12,260,2.23,261,1.417,264,1.611,265,1.509,266,2.23,267,1.412,268,1.333,269,2.23,270,1.059,271,1.257,272,1.417,273,2.44,274,1.611,275,1.611,276,1.611,277,2.23,278,1.611,279,1.611,280,1.611,281,2.273,282,1.611,283,1.611,284,2.128,289,4.523,290,3.207]],["title/classes/ChangeTheme.html",[86,0.01,269,1.4]],["body/classes/ChangeTheme.html",[3,0.198,4,0.198,9,0.198,11,1.93,21,0.323,22,0.749,27,0.716,38,1.042,40,0.638,41,0.022,42,0.749,43,0.809,44,0.565,48,0.246,68,0.716,73,0.716,75,2.23,85,0.368,86,0.018,96,1.417,107,2.23,110,1.059,127,1.856,162,0.009,163,0.013,164,0.009,183,1.586,221,1.059,223,0.565,224,1.962,225,1.981,226,2.518,227,2.603,228,2.603,229,1.333,230,1.336,233,0.758,234,0.758,237,1.58,238,1.059,246,1.059,253,2.44,255,1.166,258,1.12,260,2.23,261,1.417,264,1.611,265,1.509,266,2.23,267,1.412,268,1.333,269,2.44,270,1.059,271,1.257,272,1.417,273,2.23,274,1.611,275,1.611,276,1.611,277,2.23,278,1.611,279,1.611,280,2.273,281,1.611,282,1.611,283,1.611,284,2.128,291,4.523,292,3.207]],["title/components/ChatComponent.html",[0,1.248,155,1.681]],["body/components/ChatComponent.html",[0,1.38,1,0.944,2,1.712,3,0.124,4,0.124,5,1.258,6,1.374,7,1.374,8,1.374,9,0.124,11,0.939,12,2.478,13,1.374,14,3.572,15,2.454,17,2.178,19,2.178,21,0.202,22,0.527,23,1.975,24,1.322,26,2.82,27,0.71,37,2.089,38,1.234,40,0.785,41,0.022,42,0.812,43,0.668,44,0.697,46,2.038,47,2.706,48,0.476,49,0.501,54,0.742,57,1.008,59,1.258,61,1.374,67,1.162,68,0.448,69,0.834,73,1.266,79,1.258,81,0.786,83,0.786,85,0.11,86,0.006,87,1.08,94,3.079,108,2.178,127,0.56,129,1.518,132,2.038,133,1.995,135,1.518,136,1.518,137,1.322,138,3.837,147,1.162,148,0.944,149,1.995,150,3.572,151,1.374,152,3.079,153,1.374,154,1.374,155,2.454,156,1.374,157,1.008,158,1.374,159,0.944,160,1.374,161,1.374,162,0.006,163,0.009,164,0.006,183,1.378,203,1.374,220,0.834,223,0.354,224,0.939,225,0.888,230,0.939,233,0.474,234,0.474,236,1.008,241,2.038,242,1.496,243,0.886,244,1.598,245,1.322,246,1.05,248,0.834,249,1.986,250,2.357,255,0.74,267,1.706,270,0.662,293,1.712,294,4.496,295,4.252,296,3.18,297,2.714,298,3.951,299,3.18,300,3.951,301,3.951,302,3.951,303,3.951,304,3.951,305,3.18,306,3.837,307,4.496,308,1.518,309,3.18,310,1.842,311,3.18,312,2.006,313,1.995,314,3.572,315,2.407,316,3.951,317,2.306,318,2.006,319,2.714,320,3.18,321,3.837,322,2.714,323,2.991,324,2.006,325,2.178,326,2.714,327,3.18,328,2.006,329,3.18,330,2.605,331,3.18,332,2.714,333,2.178,334,3.18,335,2.006,336,3.079,337,2.178,338,2.006,339,5.105,340,1.712,341,3.18,342,2.714,343,3.372,344,2.706,345,2.006,346,2.006,347,3.951,348,3.18,349,2.006,350,3.18,351,3.951,352,3.18,353,2.006,354,2.289,355,2.006,356,1.712,357,2.006,358,2.178,359,2.006,360,1.374,361,1.712,362,2.006,363,2.714,364,1.712,365,1.162,366,1.374,367,2.006,368,2.006,369,2.006,370,3.18,371,1.712,372,1.712,373,2.006,374,2.006,375,3.18,376,2.006,377,2.006,378,2.006,379,2.006,380,2.006,381,2.006,382,1.712,383,2.006,384,2.006,385,3.18,386,2.006,387,2.006,388,2.006,389,2.006,390,1.712,391,1.518,392,1.374,393,2.006,394,2.006,395,2.006,396,2.006,397,3.18,398,3.372,399,1.712,400,1.712,401,2.006,402,2.006,403,2.006,404,1.518,405,2.006,406,2.714,407,3.951,408,3.18,409,1.518,410,2.006,411,1.518,412,1.712,413,2.407,414,2.006,415,2.006,416,2.006,417,1.712,418,2.407,419,1.712,420,2.006,421,3.18,422,2.714,423,1.712,424,1.712,425,1.518,426,1.712,427,1.712,428,1.712]],["title/injectables/ChatEffects.html",[429,1.248,430,2.447]],["body/injectables/ChatEffects.html",[3,0.177,4,0.177,9,0.177,21,0.289,22,0.692,23,2.094,27,0.932,35,3.088,36,3.228,37,2.373,38,1.075,40,0.57,41,0.022,42,0.475,43,0.338,44,0.506,48,0.496,49,0.717,59,1.799,61,1.964,62,2.17,66,1.544,67,1.661,68,0.64,69,1.192,71,2.389,79,1.799,83,2.118,85,0.157,86,0.014,87,2.91,94,3.703,105,3.16,108,2.859,147,3.132,162,0.008,163,0.012,164,0.008,220,1.192,223,0.506,225,1.166,233,1.163,234,1.163,235,2.419,238,2.169,239,2.65,241,2.573,248,1.192,254,2.419,257,2.419,259,1.544,267,1.303,310,2.419,337,4.239,340,3.228,344,3.371,361,2.447,363,4.201,429,1.458,430,3.703,431,1.544,432,2.447,433,2.247,434,5.118,435,3.563,436,3.563,437,4.922,438,4.201,439,4.922,440,2.447,441,3.481,442,2.867,443,5.118,444,4.174,445,5.406,446,5.406,447,4.174,448,4.174,449,4.201,450,2.867,451,3.16,452,4.092,453,4.201,454,4.174,455,3.563,456,4.174,457,2.867,458,3.16,459,3.16,460,4.174,461,4.201,462,3.563,463,4.174,464,4.174,465,5.406,466,5.406,467,2.867,468,3.563,469,4.614,470,1.964,471,2.867,472,2.447,473,2.867]],["title/modules/ChatModule.html",[165,1.115,178,2.241]],["body/modules/ChatModule.html",[3,0.244,4,0.244,9,0.244,23,1.303,36,3.568,41,0.022,48,0.549,49,0.986,54,1.927,55,1.744,62,2.987,66,2.125,85,0.216,86,0.011,148,1.857,155,3.119,157,3.33,162,0.012,163,0.015,164,0.012,165,1.232,167,1.459,168,1.983,169,3.66,170,2.476,171,2.578,172,1.641,178,4.544,179,3.84,180,3.568,182,3.269,183,1.043,184,2.287,186,2.303,188,2.303,189,3.945,190,2.703,194,3.02,201,2.987,314,2.703,358,2.703,418,2.987,474,3.368,475,3.368,476,3.368,477,3.368,478,4.158,479,3.947,480,3.945,481,2.703,482,4.448,483,2.987,484,2.703,485,5.212,486,3.368,487,3.368,488,5.212,489,3.368,490,3.947]],["title/modules/ChatRoutingModule.html",[165,1.115,478,2.241]],["body/modules/ChatRoutingModule.html",[0,1.704,3,0.302,4,0.302,9,0.302,23,1.969,32,3.693,41,0.022,48,0.515,49,1.22,51,2.627,66,2.627,81,1.912,85,0.267,86,0.014,113,2.452,155,2.807,162,0.014,163,0.018,164,0.014,167,1.804,171,2.156,172,2.029,186,2.156,188,2.635,209,3.342,210,3.468,211,4.085,215,4.515,216,4.164,217,4.164,218,3.693,478,3.742,489,4.164,491,4.879,492,2.827,493,4.879,494,4.164]],["title/modules/CoreModule.html",[165,1.115,179,2.07]],["body/modules/CoreModule.html",[3,0.224,4,0.224,9,0.224,29,2.478,34,3.48,35,2.27,37,1.264,41,0.022,44,0.638,48,0.556,49,0.904,51,1.948,54,1.818,55,1.599,63,2.949,64,2.27,68,1.098,83,1.418,85,0.198,86,0.01,89,2.478,112,2.478,148,1.703,162,0.011,163,0.014,164,0.011,165,1.535,166,2.27,167,1.338,168,1.818,169,2.27,170,2.27,171,2.468,172,1.504,179,4.033,182,3.085,183,0.956,184,2.097,186,2.173,188,2.173,194,2.849,211,3.368,430,3.368,441,3.48,470,2.478,480,3.722,481,2.478,495,3.088,496,3.088,497,3.088,498,3.619,499,4.917,500,3.619,501,4.917,502,3.619,503,4.197,504,3.368,505,2.739,506,3.088,507,3.619,508,3.619,509,2.478,510,3.619,511,2.739,512,3.619,513,3.088,514,3.619,515,3.619,516,2.739,517,2.739,518,3.722,519,3.619,520,2.478,521,3.619,522,3.619,523,4.917,524,2.739,525,3.619,526,3.619,527,3.619,528,3.619,529,3.619,530,2.739,531,2.739,532,3.619,533,5.585,534,3.619,535,3.088,536,2.739,537,3.619,538,3.088,539,2.739]],["title/injectables/I18nService.html",[34,1.923,429,1.248]],["body/injectables/I18nService.html",[3,0.162,4,0.162,9,0.162,21,0.264,22,0.648,24,1.627,27,0.586,33,4.682,34,2.518,38,1.155,40,0.93,41,0.022,42,0.775,43,0.653,44,0.825,46,1.944,48,0.446,49,0.656,54,0.971,55,1.161,65,2.107,81,1.533,82,1.414,83,1.029,85,0.214,86,0.008,110,2.4,118,2.604,132,1.092,162,0.008,163,0.012,164,0.008,212,2.242,223,0.69,233,1.373,245,2.502,255,1.33,268,2.155,310,2.267,317,1.841,336,1.799,342,3.34,429,1.367,431,1.414,492,1.522,538,3.34,540,1.799,541,4.959,542,5.279,543,2.962,544,3.34,545,2.627,546,3.913,547,3.913,548,2.627,549,3.913,550,3.34,551,2.68,552,3.913,553,4.122,554,4.556,555,5.182,556,4.423,557,2.962,558,4.73,559,4.195,560,2.627,561,5.182,562,4.423,563,2.627,564,2.627,565,3.913,566,2.627,567,2.627,568,3.913,569,3.34,570,3.913,571,3.913,572,3.913,573,3.991,574,2.627,575,2.242,576,1.988,577,2.627,578,3.913,579,2.627,580,2.627,581,3.913,582,2.627,583,2.627,584,2.962,585,1.988,586,2.242,587,1.988,588,1.988,589,1.988,590,1.988,591,1.966,592,2.242,593,2.962,594,2.242,595,2.242,596,1.988,597,1.988,598,2.242,599,1.988,600,1.988,601,5.182,602,3.34,603,2.242,604,2.242,605,1.799,606,2.627,607,2.627,608,2.627,609,2.627,610,2.627,611,2.627,612,2.627,613,2.242,614,3.913,615,2.627,616,2.627,617,2.627,618,2.627,619,2.627,620,5.182,621,2.627,622,2.627,623,2.627,624,2.627,625,2.627,626,2.627,627,2.627,628,2.627,629,2.627,630,2.627,631,2.627,632,2.627,633,2.242,634,2.627]],["title/interfaces/IAppState.html",[69,1.485,635,1.321]],["body/interfaces/IAppState.html",[3,0.291,4,0.291,9,0.291,21,0.474,22,0.967,23,2.249,29,4.539,37,1.644,41,0.022,43,0.747,44,1.029,48,0.486,69,2.755,77,3.568,81,1.844,85,0.346,118,2.365,127,1.903,162,0.014,163,0.017,164,0.014,516,3.563,591,2.365,635,1.741,636,2.727,637,3.224,638,6.627,639,3.33,640,3.996,641,4.707,642,3.996,643,3.563,644,4.416,645,3.563]],["title/interfaces/IChatState.html",[77,1.923,635,1.321]],["body/interfaces/IChatState.html",[3,0.298,4,0.298,9,0.298,21,0.485,22,0.981,41,0.022,43,0.787,48,0.37,73,1.492,77,3.45,81,1.889,85,0.324,132,2.004,137,2.852,162,0.014,163,0.017,164,0.014,230,1.892,236,2.422,249,3.031,250,2.852,255,1.2,258,2.238,340,2.595,635,1.782,636,2.793,640,3.302,646,3.649,647,5.854]],["title/interfaces/ISettingsState.html",[635,1.321,639,1.795]],["body/interfaces/ISettingsState.html",[3,0.283,4,0.283,9,0.283,21,0.461,22,0.95,41,0.022,43,0.796,48,0.44,63,2.154,81,1.794,85,0.313,110,2.231,132,1.903,162,0.013,163,0.017,164,0.013,230,2.036,255,1.292,267,2.11,270,2.276,271,2.648,333,3.135,340,2.465,354,3.802,364,3.907,635,1.693,636,2.653,639,3.146,642,3.135,648,3.465,649,5.115,650,4.578,651,3.135,652,3.907,653,3.465,654,3.465,655,3.465]],["title/interfaces/IUser.html",[354,2.07,635,1.321]],["body/interfaces/IUser.html",[3,0.312,4,0.312,9,0.312,21,0.508,22,1.009,41,0.022,43,0.717,85,0.276,96,2.691,113,2.538,162,0.015,163,0.018,164,0.015,223,0.891,224,1.492,255,1.225,258,2.284,267,2.042,333,4.65,354,3.529,635,1.868,636,2.927,651,4.835,656,4.311,657,4.311,658,5.199]],["title/injectables/LocalStorageService.html",[429,1.248,441,1.923]],["body/injectables/LocalStorageService.html",[3,0.191,4,0.191,9,0.191,15,1.455,21,0.596,24,1.833,37,1.955,38,1.177,40,1.021,41,0.022,42,0.851,43,0.605,44,0.906,46,2.461,48,0.237,49,0.773,59,1.94,81,2.319,83,1.212,85,0.169,86,0.009,113,2.215,118,2.974,132,1.286,147,1.792,162,0.009,163,0.013,164,0.009,223,0.545,234,1.323,255,1.252,268,2.328,317,2.417,319,3.763,330,2.554,332,3.763,429,1.54,431,1.665,441,3.014,458,3.337,459,5.118,509,4.214,535,2.64,553,3.518,554,3.888,585,2.341,587,4.238,659,4.657,660,2.341,661,3.763,662,4.408,663,3.888,664,5.599,665,4.408,666,5.599,667,4.408,668,3.093,669,6.153,670,3.093,671,3.763,672,4.408,673,4.408,674,3.093,675,4.408,676,3.093,677,3.093,678,3.763,679,4.408,680,4.408,681,4.408,682,2.64,683,2.341,684,2.64,685,3.093,686,4.408,687,3.093,688,3.093,689,3.093,690,3.093,691,4.408,692,3.093,693,4.408,694,3.093,695,3.093,696,3.093,697,4.408,698,3.093,699,3.093,700,5.599,701,3.093,702,3.093,703,3.093,704,3.093,705,3.093,706,5.599,707,4.408,708,5.137,709,3.093,710,3.093,711,3.093,712,3.093,713,3.093,714,3.093]],["title/classes/Logger.html",[65,1.923,86,0.01]],["body/classes/Logger.html",[3,0.368,4,0.331,9,0.173,21,0.282,22,0.68,24,1.707,27,0.626,38,1.278,40,1.183,41,0.022,42,0.986,43,0.742,44,1.049,46,2.473,65,2.21,82,3.309,85,0.265,86,0.008,87,2.615,132,1.165,162,0.008,163,0.012,164,0.008,221,0.925,233,0.97,234,0.97,237,0.979,245,1.707,250,2.717,255,1.002,268,1.707,317,2.892,536,4.309,556,3.504,591,2.687,603,5.379,605,1.92,663,4.867,715,1.92,716,7.109,717,4.859,718,4.859,719,5.348,720,4.106,721,2.803,722,2.803,723,2.803,724,4.858,725,2.803,726,5.348,727,4.106,728,3.504,729,5.719,730,4.106,731,3.678,732,2.803,733,3.504,734,4.106,735,2.803,736,7.109,737,6.302,738,6.302,739,2.803,740,4.106,741,2.576,742,3.504,743,5.348,744,4.106,745,2.803,746,4.106,747,2.803,748,4.106,749,4.859,750,2.803,751,2.803,752,4.106,753,2.803,754,4.146,755,2.392,756,2.392,757,2.803,758,2.803,759,2.803,760,2.803,761,2.803,762,2.803,763,2.803,764,2.803,765,2.122,766,2.803]],["title/modules/MaterialModule.html",[165,1.115,180,1.923]],["body/modules/MaterialModule.html",[0,1.459,2,2.249,3,0.258,4,0.258,9,0.258,15,1.966,41,0.022,48,0.504,49,1.044,85,0.228,86,0.012,147,2.42,162,0.012,163,0.016,164,0.012,165,1.689,167,2.346,172,2.249,180,2.912,186,1.846,188,2.39,203,2.861,433,2.249,741,2.62,767,4.177,768,4.177,769,2.861,770,3.162,771,4.177,772,3.565,773,4.177,774,4.177,775,4.177,776,4.177,777,3.565,778,4.177,779,4.177,780,5.409,781,5.409,782,5.409,783,5.409,784,5.409,785,5.409,786,5.409,787,5.409,788,5.409,789,5.409,790,5.409,791,5.409,792,5.409,793,5.409,794,5.409,795,5.409,796,5.409,797,5.409,798,5.409,799,5.409,800,5.409,801,5.409,802,5.409,803,5.409,804,5.409,805,5.409,806,5.409,807,5.409,808,5.409,809,5.409,810,5.409,811,5.409,812,5.409,813,5.409,814,5.409,815,5.409,816,5.409]],["title/interfaces/Message.html",[73,0.797,635,1.321]],["body/interfaces/Message.html",[3,0.391,4,0.289,9,0.289,21,0.47,22,0.962,41,0.022,43,0.744,48,0.359,73,1.637,85,0.255,113,2.919,162,0.014,163,0.017,164,0.014,223,0.824,224,1.715,255,1.184,267,2.064,325,3.978,354,3.83,391,5.004,392,4.328,635,1.728,636,2.708,657,4.958,817,3.989,818,5.809,819,5.809,820,5.809,821,4.674]],["title/components/MessageComponent.html",[0,1.248,157,1.795]],["body/components/MessageComponent.html",[0,1.8,1,1.049,2,1.86,3,0.138,4,0.138,5,1.398,6,1.527,7,1.527,8,1.527,9,0.138,11,1.407,12,2.653,13,1.527,14,3.734,15,2.565,17,2.366,19,2.366,21,0.348,22,0.572,24,1.436,26,3.42,27,0.498,37,2.226,38,1.025,40,0.443,41,0.022,42,0.701,43,0.561,44,0.393,46,0.927,47,2.896,48,0.451,49,0.557,57,1.12,67,1.291,68,0.498,69,0.927,73,1.565,85,0.122,86,0.006,115,2.948,127,1.722,129,2.615,132,2.894,133,2.988,135,2.615,136,3.901,147,2.986,148,1.049,149,2.167,150,2.366,151,1.527,152,3.262,153,1.527,154,1.527,155,1.049,156,1.527,157,2.739,158,1.527,159,1.049,160,1.527,161,1.527,162,0.007,163,0.01,164,0.007,223,0.393,236,1.12,255,0.892,270,0.736,272,1.869,295,2.366,308,1.687,310,2.001,315,2.615,317,1.049,323,3.201,325,1.527,336,3.262,360,1.527,365,1.291,366,1.527,392,3.734,398,1.902,400,1.902,404,3.606,406,2.948,409,4.127,417,2.948,419,1.902,422,2.948,423,1.902,425,3.606,426,1.902,427,4.065,428,4.065,433,1.86,605,1.527,639,1.12,643,1.687,769,2.366,777,1.902,822,1.902,823,3.454,824,4.229,825,3.454,826,4.854,827,3.454,828,3.454,829,2.229,830,3.454,831,3.454,832,3.454,833,2.229,834,2.948,835,2.229,836,2.615,837,2.229,838,2.229,839,3.609,840,2.229,841,1.902,842,1.902,843,2.229,844,2.229,845,4.763,846,2.229,847,3.454,848,2.229,849,2.229,850,2.229,851,2.229,852,2.229,853,2.229,854,2.229,855,2.229,856,2.229,857,1.902,858,1.902,859,2.229,860,2.229,861,2.229,862,3.454,863,3.454,864,3.454,865,3.454,866,1.902,867,2.229,868,2.229,869,2.229,870,2.948,871,1.902,872,2.229,873,2.229,874,2.229,875,1.902,876,2.229,877,4.763,878,2.229,879,4.229,880,2.229,881,2.229,882,2.229,883,2.229,884,2.229,885,3.454,886,5.154,887,3.454,888,4.065,889,4.763,890,5.877,891,6.165,892,5.877,893,4.763,894,3.454,895,4.763,896,3.454,897,4.065,898,3.454,899,1.902,900,3.454,901,1.902,902,2.229,903,1.687,904,2.229,905,3.454,906,3.454]],["title/injectables/MockStore.html",[429,1.248,907,2.241]],["body/injectables/MockStore.html",[3,0.231,4,0.231,9,0.231,21,0.376,22,0.833,24,2.091,27,1.268,37,2.122,38,1.129,40,1,41,0.022,42,0.833,43,0.592,44,0.887,46,1.555,48,0.501,49,0.935,52,2.346,54,1.383,55,1.653,57,1.879,68,0.835,83,1.97,85,0.31,86,0.014,87,3.058,118,1.879,162,0.011,163,0.015,164,0.011,171,1.653,172,1.555,186,1.653,188,2.222,194,2.913,196,2.831,207,2.831,223,0.659,233,0.884,234,0.884,317,1.76,330,2.913,429,1.756,431,2.014,511,2.831,530,2.831,531,2.831,591,1.879,765,2.831,907,4.095,908,2.562,909,4.3,910,4.848,911,3.444,912,4.848,913,5.028,914,3.74,915,5.184,916,5.184,917,5.184,918,5.786,919,5.028,920,4.292,921,5.409,922,3.74,923,3.74,924,4.848,925,4.848,926,4.848,927,3.192,928,3.192,929,3.192,930,3.192,931,2.831,932,3.444,933,3.192,934,3.444]],["title/classes/Reset.html",[86,0.01,183,0.944]],["body/classes/Reset.html",[3,0.205,4,0.205,9,0.205,11,1.946,21,0.334,22,0.768,38,0.66,41,0.022,42,0.55,43,0.799,48,0.255,68,0.741,73,0.741,75,2.263,85,0.371,86,0.019,96,1.466,107,2.263,110,1.096,127,1.87,162,0.01,163,0.014,164,0.01,183,1.707,221,1.096,223,0.585,224,1.977,225,1.989,226,2.475,227,2.466,228,2.623,230,1.368,233,0.784,234,0.784,237,1.618,238,1.096,246,1.096,253,2.466,255,1,258,1.159,260,2.263,261,1.466,264,1.668,265,1.562,266,2.263,267,1.446,268,1.38,269,2.263,270,1.096,271,1.3,272,1.466,273,2.263,274,1.668,275,1.668,276,1.668,277,2.263,278,1.668,279,1.668,280,1.668,281,1.668,282,1.668,283,2.328,284,2.18,935,3.319]],["title/classes/ReveiveMsg.html",[71,1.485,86,0.01]],["body/classes/ReveiveMsg.html",[3,0.217,4,0.217,9,0.217,11,1.891,21,0.353,22,0.797,23,2.113,27,0.782,38,1.092,40,0.697,41,0.022,42,0.581,43,0.807,44,0.618,48,0.369,68,0.782,71,2.662,73,1.513,85,0.365,86,0.018,137,1.457,162,0.01,163,0.014,164,0.01,220,2.458,221,1.157,222,1.761,223,0.618,224,1.936,225,1.963,226,2.505,227,2.617,228,2.569,229,1.457,230,1.035,233,0.828,234,0.828,235,2.031,236,1.761,237,1.68,238,1.157,239,1.887,240,1.887,241,2.458,242,1.649,243,2.613,244,1.761,245,1.457,246,1.157,247,1.887,248,2.458,249,1.548,250,1.457,251,2.031,252,3.018,253,2.428,254,2.031,255,0.657,256,2.198,257,2.031,258,1.224,259,2.59,936,4.811,937,3.505]],["title/classes/RouteReusableStrategy.html",[86,0.01,504,2.447]],["body/classes/RouteReusableStrategy.html",[3,0.213,4,0.213,9,0.213,21,0.346,24,1.974,37,1.658,38,1.224,40,1.224,41,0.022,42,1.02,43,0.725,44,1.085,46,2.559,48,0.264,51,1.851,85,0.188,86,0.01,112,4.764,113,2.386,118,2.947,162,0.01,163,0.014,164,0.01,221,1.135,223,0.606,226,2.621,230,1.88,313,2.979,317,2.234,340,2.556,433,2.556,503,4.642,504,3.252,505,4.818,506,4.052,599,3.594,654,3.594,836,3.594,911,3.252,938,5.432,939,2.935,940,4.748,941,4.748,942,6.364,943,4.748,944,4.748,945,4.052,946,4.748,947,4.748,948,4.748,949,4.748,950,7.203,951,3.438,952,6.364,953,6.364,954,4.748,955,3.438,956,4.748,957,3.438,958,4.748,959,5.439,960,3.438,961,3.438,962,4.748,963,5.439,964,3.438,965,3.438,966,3.438,967,3.438]],["title/classes/SaveCurrentMsg.html",[86,0.01,243,1.578]],["body/classes/SaveCurrentMsg.html",[3,0.217,4,0.217,9,0.217,11,1.891,21,0.353,22,0.797,23,2.113,27,0.782,38,1.092,40,0.697,41,0.022,42,0.581,43,0.807,44,0.618,48,0.369,68,0.782,71,2.458,73,1.429,85,0.365,86,0.018,137,1.457,162,0.01,163,0.014,164,0.01,220,2.458,221,1.157,222,1.761,223,0.618,224,1.936,225,1.963,226,2.505,227,2.617,228,2.569,229,1.457,230,1.035,233,0.828,234,0.828,235,2.031,236,1.761,237,1.68,238,1.157,239,1.887,240,1.887,241,2.458,242,1.649,243,2.829,244,1.761,245,1.457,246,1.157,247,1.887,248,2.458,249,1.548,250,1.457,251,2.031,252,2.198,253,2.428,254,2.787,255,1.108,256,2.198,257,2.031,258,1.224,259,2.59,968,4.811,969,3.505]],["title/classes/SendMessage.html",[86,0.01,241,1.485]],["body/classes/SendMessage.html",[3,0.217,4,0.217,9,0.217,11,1.891,21,0.353,22,0.797,23,2.113,27,0.782,38,1.092,40,0.697,41,0.022,42,0.581,43,0.807,44,0.618,48,0.369,68,0.782,71,2.458,73,1.513,85,0.365,86,0.018,137,1.457,162,0.01,163,0.014,164,0.01,220,2.458,221,1.157,222,1.761,223,0.618,224,1.936,225,1.963,226,2.505,227,2.617,228,2.569,229,1.457,230,1.035,233,0.828,234,0.828,235,2.031,236,1.761,237,1.68,238,1.157,239,1.887,240,1.887,241,2.662,242,1.649,243,2.613,244,1.761,245,1.457,246,1.157,247,1.887,248,2.458,249,1.548,250,1.457,251,2.031,252,2.198,253,2.428,254,2.031,255,0.657,256,3.018,257,2.031,258,1.224,259,2.59,970,4.811,971,3.505]],["title/classes/SetUserID.html",[75,1.4,86,0.01]],["body/classes/SetUserID.html",[3,0.198,4,0.198,9,0.198,11,1.93,21,0.323,22,0.749,27,0.716,38,1.042,40,0.638,41,0.022,42,0.749,43,0.809,44,0.565,48,0.246,68,0.716,73,0.716,75,2.44,85,0.368,86,0.018,96,1.417,107,2.23,110,1.059,127,1.856,162,0.009,163,0.013,164,0.009,183,1.586,221,1.059,223,0.565,224,1.962,225,1.981,226,2.518,227,2.603,228,2.603,229,1.333,230,1.336,233,0.758,234,0.758,237,1.58,238,1.059,246,1.059,253,2.44,255,0.982,258,1.987,260,2.23,261,1.417,264,1.611,265,1.509,266,2.23,267,1.412,268,1.333,269,2.23,270,1.059,271,1.257,272,1.417,273,2.23,274,1.611,275,1.611,276,1.611,277,2.23,278,1.611,279,2.273,280,1.611,281,1.611,282,1.611,283,1.611,284,2.128,972,4.523,973,3.207]],["title/components/SettingsComponent.html",[0,1.248,159,1.681]],["body/components/SettingsComponent.html",[0,1.744,1,0.98,2,1.764,3,0.129,4,0.129,5,1.307,6,1.427,7,1.427,8,1.427,9,0.129,11,1.356,12,2.54,13,1.427,14,3.63,15,2.494,17,2.244,19,2.244,21,0.21,22,0.543,24,1.362,26,3.325,27,0.465,37,2.41,38,1.246,40,1.054,41,0.022,42,0.979,43,0.676,44,0.935,46,2.457,47,2.773,48,0.441,49,0.521,57,1.047,63,0.98,64,1.307,67,2.892,68,0.465,69,0.866,85,0.114,86,0.006,94,3.63,102,1.778,107,2.37,110,1.831,118,2.035,127,1.751,133,1.307,148,0.98,149,2.055,150,3.144,151,1.427,152,3.144,153,1.427,154,1.427,155,0.98,156,1.427,157,1.047,158,1.427,159,2.494,160,1.427,161,1.427,162,0.006,163,0.01,164,0.006,183,1.598,223,0.367,225,1.751,230,1.565,242,1.542,246,1.082,255,1.155,260,1.587,266,1.587,269,1.587,270,1.337,271,1.587,273,1.587,277,1.587,295,3.144,306,3.918,308,1.577,310,1.898,315,3.475,317,2.703,337,4.293,339,2.796,343,3.456,344,1.427,356,1.778,360,1.427,365,1.207,366,1.427,382,1.778,392,2.244,404,1.577,411,2.48,412,1.778,413,3.475,433,2.854,543,2.48,544,2.796,551,2.244,558,2.796,559,3.779,605,1.427,635,1.211,639,1.047,643,1.577,649,1.577,651,3.63,653,2.48,769,2.244,834,2.796,836,2.48,857,1.778,858,1.778,866,1.778,870,1.778,897,1.778,974,1.778,975,2.796,976,4.049,977,3.276,978,4.049,979,3.276,980,3.276,981,3.276,982,3.276,983,3.276,984,3.276,985,2.083,986,3.276,987,2.083,988,3.276,989,2.083,990,3.276,991,2.083,992,3.276,993,3.276,994,2.083,995,3.276,996,2.083,997,3.276,998,2.083,999,2.083,1000,2.796,1001,2.083,1002,2.083,1003,2.083,1004,2.083,1005,3.276,1006,1.778,1007,2.083,1008,2.083,1009,2.083,1010,2.083,1011,2.083,1012,2.083,1013,2.083,1014,3.276,1015,3.276,1016,3.276,1017,3.276,1018,5.35,1019,3.276,1020,3.276,1021,3.276,1022,3.276,1023,4.591,1024,3.276,1025,3.276,1026,3.276,1027,3.276,1028,3.276,1029,2.083,1030,2.083,1031,2.083,1032,2.083,1033,2.083,1034,2.083,1035,2.083,1036,2.083,1037,2.083,1038,2.083,1039,2.083,1040,2.083]],["title/injectables/SettingsEffects.html",[429,1.248,520,2.447]],["body/injectables/SettingsEffects.html",[3,0.169,4,0.169,9,0.169,21,0.276,22,0.669,27,0.901,33,4.989,37,2.353,38,1.051,40,0.544,41,0.022,42,0.454,43,0.322,44,0.483,48,0.49,49,0.684,54,1.012,55,1.21,59,1.718,61,1.875,66,1.474,67,1.586,68,0.611,69,1.138,81,2.072,85,0.15,86,0.016,87,2.847,107,2.072,110,1.332,127,1.648,162,0.008,163,0.012,164,0.008,223,0.483,225,1.127,233,1.132,234,1.132,238,2.146,245,1.678,255,0.756,264,2.028,265,2.255,270,1.746,278,2.028,279,2.028,280,2.028,281,2.028,282,2.028,283,2.028,284,1.288,310,2.338,313,2.531,337,3.282,340,3.176,344,3.282,360,1.875,365,1.586,366,1.875,371,4.513,372,4.513,429,1.409,431,1.474,433,2.172,434,5.035,435,3.444,436,3.444,438,4.09,440,2.337,441,3.441,443,3.444,449,4.09,452,4.465,453,4.09,455,3.444,458,3.055,459,3.055,461,2.337,462,4.513,469,4.513,470,1.875,472,2.337,520,3.622,557,3.055,633,3.444,655,3.055,1006,2.337,1041,2.337,1042,4.792,1043,4.792,1044,2.738,1045,4.035,1046,4.035,1047,2.738,1048,5.288,1049,5.639,1050,4.035,1051,5.288,1052,3.444,1053,3.444,1054,2.738,1055,4.035,1056,5.288,1057,4.035,1058,4.035,1059,4.035,1060,4.035,1061,4.035,1062,4.035,1063,4.035,1064,4.035,1065,4.035,1066,2.738,1067,4.035]],["title/modules/SettingsModule.html",[165,1.115,181,2.241]],["body/modules/SettingsModule.html",[3,0.273,4,0.273,9,0.273,41,0.022,48,0.539,49,1.104,54,1.633,55,1.951,85,0.241,86,0.013,127,1.234,148,2.078,159,3.215,162,0.013,163,0.016,164,0.013,165,1.379,167,1.633,168,2.219,169,3.863,170,2.771,171,1.951,172,1.836,180,3.678,181,4.481,182,3.516,183,1.167,184,2.559,186,2.477,188,2.477,189,4.243,190,3.025,194,3.248,201,3.343,480,4.243,481,3.025,482,4.784,483,3.343,484,3.025,487,3.769,1068,3.769,1069,3.769,1070,3.769,1071,4.285,1072,4.417,1073,3.769]],["title/modules/SettingsRoutingModule.html",[165,1.115,1071,2.241]],["body/modules/SettingsRoutingModule.html",[0,1.734,3,0.307,4,0.307,9,0.307,32,3.758,41,0.022,48,0.518,49,1.241,51,2.672,66,2.672,81,1.945,85,0.271,86,0.014,113,2.494,127,1.387,159,2.836,162,0.015,163,0.018,164,0.015,167,1.836,171,2.193,172,2.064,186,2.193,188,2.663,209,3.4,210,3.494,211,4.128,215,3.758,492,2.876,494,4.237,1071,3.781,1073,4.237,1074,4.964,1075,4.964]],["title/injectables/SocketioService.html",[36,1.923,429,1.248]],["body/injectables/SocketioService.html",[3,0.233,4,0.233,9,0.233,16,2.576,21,0.379,22,0.836,23,2.01,24,2.098,27,1.272,35,4.101,36,3.278,38,1.21,40,0.748,41,0.022,42,0.623,43,0.443,44,0.663,46,1.564,48,0.467,49,0.94,54,1.391,63,1.77,64,2.36,73,1.359,85,0.206,86,0.016,105,4.949,113,2.536,162,0.011,163,0.015,164,0.011,223,0.663,233,1.193,234,1.193,267,1.576,297,3.21,317,1.77,390,5.196,391,3.821,429,1.763,431,2.025,433,2.717,451,5.138,524,2.847,584,4.609,911,4.17,1076,3.21,1077,6.088,1078,5.047,1079,6.35,1080,6.35,1081,5.047,1082,5.047,1083,5.697,1084,5.047,1085,3.761,1086,5.047,1087,5.047,1088,6.088,1089,3.761,1090,6.088,1091,5.047,1092,6.088,1093,4.308,1094,3.761,1095,3.761,1096,3.761,1097,3.761,1098,3.761]],["title/modules/TestingModule.html",[165,1.115,934,2.447]],["body/modules/TestingModule.html",[3,0.26,4,0.26,9,0.26,27,1.212,37,2.101,41,0.022,48,0.517,49,1.051,52,2.637,54,1.554,55,1.857,57,2.112,68,0.938,83,1.647,85,0.329,86,0.016,87,2.263,118,2.112,162,0.012,163,0.016,164,0.012,167,1.554,171,1.857,172,1.748,186,1.857,188,2.4,194,3.147,196,3.182,207,3.182,330,2.435,429,1.897,511,3.182,530,3.182,531,3.182,591,2.112,765,3.182,907,3.989,908,2.879,909,4.111,910,4.635,911,2.879,912,3.587,915,4.635,916,4.635,917,4.635,918,5.427,920,3.587,921,4.635,924,4.635,925,5.135,926,5.135,927,3.587,928,3.587,929,3.587,930,3.587,931,3.182,932,3.719,933,3.587,934,4.12]],["title/classes/UnreadCount.html",[86,0.01,248,1.485]],["body/classes/UnreadCount.html",[3,0.217,4,0.217,9,0.217,11,1.891,21,0.353,22,0.797,23,2.113,27,0.782,38,1.092,40,0.697,41,0.022,42,0.581,43,0.807,44,0.618,48,0.369,68,0.782,71,2.458,73,1.429,85,0.365,86,0.018,137,1.457,162,0.01,163,0.014,164,0.01,220,2.458,221,1.157,222,1.761,223,0.618,224,1.936,225,1.963,226,2.505,227,2.617,228,2.569,229,1.457,230,1.035,233,0.828,234,0.828,235,2.031,236,1.761,237,1.68,238,1.157,239,1.887,240,1.887,241,2.458,242,1.649,243,2.613,244,1.761,245,1.457,246,1.157,247,1.887,248,2.662,249,1.548,250,1.457,251,2.031,252,2.198,253,2.428,254,2.031,255,0.657,256,2.198,257,2.787,258,2.065,259,2.59,1099,4.811,1100,3.505]],["title/coverage.html",[1101,3.69]],["body/coverage.html",[0,1.937,1,1.425,9,0.187,10,3.286,34,1.63,36,1.63,41,0.022,43,0.357,63,2.043,65,1.63,69,1.259,71,1.259,73,0.676,75,1.186,77,1.63,79,1.899,82,2.337,83,1.186,86,0.02,132,2.939,155,1.425,157,1.521,159,1.425,162,0.009,163,0.013,164,0.009,183,0.8,220,1.259,222,2.949,241,1.259,243,1.338,248,1.259,260,1.186,261,2.78,266,1.186,269,1.186,273,1.186,277,1.186,293,2.584,354,1.754,365,1.754,429,2.134,430,2.074,432,2.584,441,1.63,492,1.754,504,2.074,505,2.292,509,2.973,517,2.292,518,2.292,520,2.074,540,3.797,588,2.292,591,3.069,635,2.17,637,3.476,639,1.521,640,2.074,642,2.074,644,2.292,645,2.292,646,3.286,648,3.286,656,2.584,659,3.286,660,3.286,683,2.292,715,2.074,817,2.584,822,2.584,871,3.705,875,2.584,907,1.899,908,2.973,932,2.074,938,2.584,939,2.584,974,2.584,1041,2.584,1076,2.584,1101,2.292,1102,2.584,1103,3.028,1104,3.028,1105,4.342,1106,6.959,1107,6.913,1108,6.999,1109,3.028,1110,4.342,1111,3.028,1112,6.292,1113,3.028,1114,3.028,1115,3.028,1116,3.028,1117,3.028,1118,5.076,1119,6.801,1120,6.801,1121,3.028,1122,3.705,1123,2.584,1124,2.292,1125,2.584,1126,2.584,1127,2.292,1128,2.584,1129,2.292,1130,3.705,1131,2.584,1132,3.705,1133,2.584,1134,3.028,1135,3.028,1136,3.028,1137,2.584,1138,2.584,1139,3.028,1140,3.028]],["title/dependencies.html",[168,2.159,1141,2.984]],["body/dependencies.html",[35,2.802,37,1.56,41,0.022,49,1.116,51,2.404,52,3.541,53,3.541,54,2.289,55,1.973,57,2.244,68,1.26,162,0.013,163,0.017,164,0.013,168,2.244,190,3.059,192,3.811,193,3.38,203,3.059,314,3.059,358,3.059,418,3.38,470,3.059,481,3.059,483,3.38,484,3.059,486,3.811,513,3.811,516,3.38,524,3.38,539,3.38,576,3.38,770,3.38,841,3.811,1142,7.2,1143,4.466,1144,5.645,1145,4.466,1146,4.466,1147,4.466,1148,4.466,1149,4.466,1150,4.466,1151,4.466,1152,6.503,1153,4.466,1154,4.466,1155,4.466,1156,4.466,1157,4.466,1158,4.466,1159,4.466,1160,3.811,1161,4.466,1162,4.466,1163,4.466,1164,4.466,1165,4.466,1166,4.466,1167,4.466]],["title/miscellaneous/enumerations.html",[1168,1.499,1169,3.667]],["body/miscellaneous/enumerations.html",[0,1.235,1,1.664,3,0.341,11,1.044,12,2.218,16,2.421,21,0.356,23,2.119,24,1.47,26,2.218,41,0.022,42,0.586,48,0.271,65,2.606,71,1.47,73,1.325,75,1.385,81,1.385,82,2.606,83,1.385,85,0.193,86,0.01,89,2.421,90,3.017,96,1.562,107,2.326,110,1.167,127,1.896,132,1.47,137,1.47,162,0.01,163,0.014,164,0.01,183,1.279,220,1.47,222,1.776,224,1.429,234,1.663,237,1.69,238,1.598,239,2.606,240,1.903,241,1.47,242,1.664,243,1.562,244,1.776,245,1.47,246,1.598,247,1.903,248,1.47,249,1.562,250,1.47,251,2.048,260,1.385,261,1.562,265,2.277,266,1.385,267,1.511,268,1.47,269,1.385,270,1.167,271,1.385,272,1.562,273,1.385,274,1.776,275,1.776,276,1.776,277,1.385,313,3.036,536,3.664,551,3.78,562,3.017,590,2.676,715,2.421,717,4.131,718,5.065,728,3.017,729,4.131,731,2.676,741,2.218,749,4.131,754,4.131,1168,1.776,1169,3.017,1170,3.017,1171,3.017,1172,3.017,1173,3.535,1174,3.535,1175,3.535,1176,3.017,1177,3.017,1178,3.535,1179,3.535,1180,3.535,1181,3.535,1182,3.535,1183,3.535,1184,3.535,1185,3.535,1186,3.535,1187,4.84,1188,4.84,1189,4.84,1190,4.84,1191,4.84,1192,3.535,1193,3.535,1194,3.535,1195,3.535,1196,3.535,1197,3.535,1198,3.535,1199,3.535,1200,3.017,1201,3.535,1202,2.676,1203,3.535]],["title/miscellaneous/functions.html",[1168,1.499,1202,3.252]],["body/miscellaneous/functions.html",[21,0.462,40,1.306,41,0.021,42,1.088,44,1.158,46,2.73,69,1.908,77,2.47,162,0.013,163,0.017,164,0.013,223,0.809,225,1.835,255,1.174,330,3.327,492,3.631,540,3.143,589,3.473,590,3.473,591,2.306,592,3.916,593,4.347,594,3.916,595,3.916,596,3.473,597,3.473,598,3.916,599,3.473,600,3.473,602,3.916,604,3.916,637,3.143,639,2.306,645,4.744,907,2.879,908,3.143,931,3.473,932,4.292,1123,3.916,1124,4.347,1125,3.916,1126,4.901,1127,4.347,1128,3.916,1129,4.347,1168,2.306,1202,3.473,1204,4.589,1205,3.916,1206,3.916,1207,3.916,1208,4.589,1209,4.589,1210,4.589,1211,4.589,1212,4.589,1213,4.589,1214,4.589]],["title/index.html",[21,0.3,1215,2.984,1216,2.547]],["body/index.html",[0,1.885,2,1.825,4,0.21,5,1.365,15,3.089,16,2.322,23,1.861,37,0.76,41,0.021,42,0.36,53,2.949,54,0.804,57,1.093,73,1.05,83,0.853,100,2.893,107,0.853,108,3.49,110,0.718,111,4.349,127,1.164,133,1.365,137,0.905,149,2.127,162,0.006,163,0.01,164,0.006,165,1.468,167,0.804,168,1.703,183,0.575,184,1.261,193,1.647,200,1.857,206,1.857,209,1.49,210,1.171,218,1.647,223,0.384,224,1.665,225,0.608,233,0.801,240,1.171,242,1.96,244,1.093,245,0.905,247,1.171,249,1.498,250,2.244,267,1.685,270,1.375,271,0.853,272,1.498,295,2.852,314,1.49,321,1.857,322,1.857,323,1.647,325,2.322,326,1.857,358,1.49,399,3.554,409,1.647,411,1.647,413,1.647,424,1.857,425,1.647,451,4.267,452,1.647,468,1.857,484,1.49,492,1.261,539,2.566,543,1.647,550,1.857,551,2.322,553,2.322,557,4.086,559,1.647,569,1.857,573,4.811,575,1.857,576,1.647,589,1.647,593,1.647,596,5.092,597,1.647,600,4.267,635,1.739,658,1.857,661,1.857,663,1.647,671,1.857,678,5.112,733,3.554,741,2.127,742,1.857,769,4.272,770,3.152,772,1.857,826,1.857,839,1.857,842,1.857,888,1.857,899,3.554,901,4.607,903,3.152,909,2.566,945,1.857,975,1.857,1000,1.857,1018,1.857,1052,1.857,1053,1.857,1093,2.893,1101,1.647,1102,4.013,1160,1.857,1176,1.857,1200,1.857,1216,1.857,1217,2.176,1218,3.39,1219,3.39,1220,2.176,1221,2.176,1222,2.176,1223,2.176,1224,3.39,1225,2.176,1226,3.39,1227,3.39,1228,2.176,1229,2.176,1230,2.176,1231,2.176,1232,2.176,1233,3.39,1234,2.176,1235,2.176,1236,2.176,1237,2.176,1238,2.176,1239,2.176,1240,3.39,1241,2.176,1242,2.176,1243,2.176,1244,2.176,1245,2.176,1246,2.176,1247,2.176,1248,2.176,1249,3.39,1250,2.176,1251,2.176,1252,2.176,1253,3.39,1254,5.398,1255,3.39,1256,4.164,1257,2.176,1258,5.096,1259,2.176,1260,2.176,1261,3.39,1262,2.176,1263,3.39,1264,3.39,1265,4.164,1266,3.39,1267,3.39,1268,4.164,1269,2.176,1270,2.176,1271,2.176,1272,2.176,1273,2.176,1274,3.39,1275,2.176,1276,2.176,1277,3.39,1278,2.176,1279,2.176,1280,3.39,1281,2.176,1282,1.647,1283,4.164,1284,2.176,1285,2.176,1286,4.702,1287,4.702,1288,2.176,1289,2.176,1290,2.176,1291,2.176,1292,2.176,1293,5.096,1294,3.39,1295,4.164,1296,2.176,1297,3.39,1298,3.39,1299,2.176,1300,4.164,1301,6.624,1302,4.164,1303,2.176,1304,2.176,1305,4.702,1306,2.176,1307,2.176,1308,3.39,1309,2.176,1310,2.176,1311,2.176,1312,2.176,1313,3.39,1314,2.176,1315,2.176,1316,2.176,1317,2.176,1318,2.176,1319,2.176,1320,4.702,1321,2.176,1322,2.176,1323,2.176,1324,2.176,1325,2.176,1326,2.176,1327,2.176,1328,2.176,1329,3.39,1330,2.176,1331,3.39,1332,3.39,1333,3.39,1334,2.176,1335,4.702,1336,2.176,1337,2.176,1338,4.702,1339,2.176,1340,2.176,1341,2.176,1342,2.176,1343,4.164,1344,2.176,1345,2.176,1346,3.39,1347,1.857,1348,2.176,1349,2.176,1350,2.176,1351,3.39,1352,3.39,1353,2.176,1354,2.176,1355,2.176,1356,2.176,1357,2.176,1358,2.176,1359,2.176,1360,2.176,1361,2.176,1362,2.176,1363,2.176,1364,2.176,1365,2.176,1366,2.176,1367,2.176,1368,2.176,1369,2.176,1370,2.176,1371,2.176,1372,2.176,1373,2.176,1374,2.176,1375,2.176,1376,2.176,1377,2.176,1378,2.176,1379,2.176,1380,2.176,1381,2.176]],["title/modules.html",[167,1.802]],["body/modules.html",[41,0.018,53,4.296,162,0.015,163,0.018,164,0.015,166,3.251,167,1.916,177,3.251,178,3.251,179,3.003,180,2.79,181,3.251,478,3.251,934,3.549,1071,3.251,1382,6.848,1383,6.848,1384,7.282,1385,6.998,1386,6.998]],["title/overview.html",[1387,4.16]],["body/overview.html",[1,3.202,2,2.185,34,3.185,36,3.185,41,0.022,63,2.784,145,3.464,148,1.91,155,2.784,157,2.972,159,2.784,162,0.012,163,0.016,164,0.012,165,1.267,166,4.542,167,1.501,168,2.039,169,2.546,170,2.546,171,1.793,172,1.687,173,3.464,174,3.464,175,3.464,176,3.464,177,3.711,178,4.542,179,4.081,180,3.505,181,4.379,182,3.33,183,1.073,184,2.352,210,2.185,221,1.34,431,2.185,441,3.185,474,3.464,475,3.464,476,3.464,477,3.464,478,3.711,495,3.464,496,3.464,497,3.464,636,2.352,903,3.072,1068,3.464,1069,3.464,1070,3.464,1071,3.711,1177,3.464,1387,3.464,1388,4.059,1389,4.059,1390,4.059]],["title/routes.html",[210,2.624]],["body/routes.html",[41,0.019,162,0.017,163,0.019,164,0.017,210,3.112]],["title/miscellaneous/typealiases.html",[1168,1.499,1391,4.296]],["body/miscellaneous/typealiases.html",[21,0.514,41,0.022,43,0.601,71,2.122,75,2,82,2.747,85,0.335,162,0.015,163,0.018,164,0.015,183,1.349,220,2.122,222,2.564,241,2.122,243,2.255,248,2.122,259,3.536,260,2,261,2.255,266,2,269,2,273,2,277,2,284,3.091,591,3.079,715,3.495,731,4.639,755,4.355,756,4.355,1168,2.564,1170,4.355,1171,4.355,1172,4.355,1392,5.103]],["title/miscellaneous/variables.html",[1168,1.499,1282,3.252]],["body/miscellaneous/variables.html",[10,2.467,15,1.534,21,0.328,23,1.51,29,2.232,34,1.755,41,0.022,43,0.785,63,2.945,65,1.755,69,2.198,77,2.463,79,2.87,82,3.085,83,1.793,84,2.782,110,1.745,127,1.278,132,1.902,137,1.355,162,0.01,163,0.013,164,0.01,233,1.662,234,1.662,249,1.44,250,1.355,255,0.857,267,1.018,270,1.51,271,1.277,313,2.87,330,3.626,333,2.232,336,3.62,340,2.846,365,2.651,509,2.232,517,3.463,518,3.463,540,2.232,541,3.904,542,3.904,553,3.133,554,3.463,584,3.463,585,3.463,586,2.782,587,2.467,588,3.463,613,3.904,637,2.232,639,2.299,640,3.62,642,3.62,644,3.463,646,2.467,647,2.782,648,2.467,649,2.467,651,2.232,652,2.782,653,2.467,654,3.463,655,4.569,659,2.467,660,3.463,682,2.782,683,3.463,684,2.782,741,2.87,1122,2.782,1124,2.467,1127,2.467,1129,2.467,1130,2.782,1131,4.511,1132,2.782,1133,4.511,1137,2.782,1138,2.782,1168,1.638,1205,3.904,1206,2.782,1207,2.782,1282,4.001,1347,3.904,1393,4.575,1394,4.575,1395,3.259,1396,3.259,1397,3.259,1398,3.259,1399,3.259,1400,4.575,1401,3.259,1402,3.259,1403,3.259,1404,3.259,1405,4.575,1406,4.575,1407,4.575,1408,4.575,1409,4.575,1410,4.575,1411,4.575,1412,4.575,1413,4.575,1414,3.259]]],"invertedIndex":[["",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"injectables/I18nService.html":{},"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"modules/MaterialModule.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SocketioService.html":{},"modules/TestingModule.html":{},"classes/UnreadCount.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/I18nService.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"components/MessageComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["0%{opacity",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["0.14.0",{"_index":1149,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":853,"title":{},"body":{"components/MessageComponent.html":{}}}],["0.6",{"_index":852,"title":{},"body":{"components/MessageComponent.html":{}}}],["0.8.26",{"_index":1167,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1107,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1105,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1134,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1135,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":894,"title":{},"body":{"components/MessageComponent.html":{}}}],["1",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"injectables/LocalStorageService.html":{},"modules/MaterialModule.html":{},"components/MessageComponent.html":{}}}],["1.2.0",{"_index":1151,"title":{},"body":{"dependencies.html":{}}}],["1.2em",{"_index":1037,"title":{},"body":{"components/SettingsComponent.html":{}}}],["1.5",{"_index":854,"title":{},"body":{"components/MessageComponent.html":{}}}],["1/1",{"_index":1112,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1121,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1120,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1117,"title":{},"body":{"coverage.html":{}}}],["10.0.1",{"_index":1153,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1108,"title":{},"body":{"coverage.html":{}}}],["100%{opacity",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["100vh",{"_index":402,"title":{},"body":{"components/ChatComponent.html":{}}}],["106px",{"_index":403,"title":{},"body":{"components/ChatComponent.html":{}}}],["10px",{"_index":872,"title":{},"body":{"components/MessageComponent.html":{}}}],["12",{"_index":1022,"title":{},"body":{"components/SettingsComponent.html":{}}}],["12/12",{"_index":1136,"title":{},"body":{"coverage.html":{}}}],["12px",{"_index":410,"title":{},"body":{"components/ChatComponent.html":{}}}],["13/13",{"_index":1109,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1390,"title":{},"body":{"overview.html":{}}}],["15px",{"_index":873,"title":{},"body":{"components/MessageComponent.html":{}}}],["16",{"_index":1116,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":405,"title":{},"body":{"components/ChatComponent.html":{}}}],["19px",{"_index":896,"title":{},"body":{"components/MessageComponent.html":{}}}],["1px",{"_index":891,"title":{},"body":{"components/MessageComponent.html":{}}}],["1s",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":903,"title":{},"body":{"components/MessageComponent.html":{},"index.html":{},"overview.html":{}}}],["2.0.8",{"_index":1157,"title":{},"body":{"dependencies.html":{}}}],["2.1.1",{"_index":1164,"title":{},"body":{"dependencies.html":{}}}],["2.5.6",{"_index":1155,"title":{},"body":{"dependencies.html":{}}}],["20px",{"_index":866,"title":{},"body":{"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["24",{"_index":1024,"title":{},"body":{"components/SettingsComponent.html":{}}}],["25",{"_index":1119,"title":{},"body":{"coverage.html":{}}}],["2d8cfa",{"_index":900,"title":{},"body":{"components/MessageComponent.html":{}}}],["2px",{"_index":895,"title":{},"body":{"components/MessageComponent.html":{}}}],["3",{"_index":777,"title":{},"body":{"modules/MaterialModule.html":{},"components/MessageComponent.html":{}}}],["3.0.3",{"_index":1162,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1115,"title":{},"body":{"coverage.html":{}}}],["30px",{"_index":877,"title":{},"body":{"components/MessageComponent.html":{}}}],["333",{"_index":905,"title":{},"body":{"components/MessageComponent.html":{}}}],["3;text",{"_index":904,"title":{},"body":{"components/MessageComponent.html":{}}}],["4",{"_index":1177,"title":{},"body":{"miscellaneous/enumerations.html":{},"overview.html":{}}}],["4.1.1",{"_index":1163,"title":{},"body":{"dependencies.html":{}}}],["4.17.10",{"_index":1158,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1114,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1111,"title":{},"body":{"coverage.html":{}}}],["40px",{"_index":421,"title":{},"body":{"components/ChatComponent.html":{}}}],["424242",{"_index":428,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{}}}],["48px",{"_index":420,"title":{},"body":{"components/ChatComponent.html":{}}}],["4px",{"_index":893,"title":{},"body":{"components/MessageComponent.html":{}}}],["5",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"overview.html":{}}}],["5/5",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":875,"title":{},"body":{"components/MessageComponent.html":{},"coverage.html":{}}}],["50%{opacity",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["50px",{"_index":880,"title":{},"body":{"components/MessageComponent.html":{}}}],["5px",{"_index":884,"title":{},"body":{"components/MessageComponent.html":{}}}],["6",{"_index":1389,"title":{},"body":{"overview.html":{}}}],["6.3.1",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1110,"title":{},"body":{"coverage.html":{}}}],["666",{"_index":906,"title":{},"body":{"components/MessageComponent.html":{}}}],["7.0.0",{"_index":1142,"title":{},"body":{"dependencies.html":{}}}],["7.0.1",{"_index":1144,"title":{},"body":{"dependencies.html":{}}}],["7.4.0",{"_index":1152,"title":{},"body":{"dependencies.html":{}}}],["768px",{"_index":1032,"title":{},"body":{"components/SettingsComponent.html":{}}}],["8/10",{"_index":1113,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":871,"title":{},"body":{"components/MessageComponent.html":{},"coverage.html":{}}}],["9",{"_index":1388,"title":{},"body":{"overview.html":{}}}],["9px",{"_index":892,"title":{},"body":{"components/MessageComponent.html":{}}}],["aaa",{"_index":881,"title":{},"body":{"components/MessageComponent.html":{}}}],["ability",{"_index":1226,"title":{},"body":{"index.html":{}}}],["absolute",{"_index":419,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{}}}],["access_time",{"_index":1020,"title":{},"body":{"components/SettingsComponent.html":{}}}],["accessors",{"_index":544,"title":{},"body":{"injectables/I18nService.html":{},"components/SettingsComponent.html":{}}}],["account_circle",{"_index":1015,"title":{},"body":{"components/SettingsComponent.html":{}}}],["action",{"_index":225,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"classes/UnreadCount.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["action.payload",{"_index":446,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["actionreducer",{"_index":1213,"title":{},"body":{"miscellaneous/functions.html":{}}}],["actionreducermap",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions",{"_index":238,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"injectables/ChatEffects.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"injectables/SettingsEffects.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{}}}],["actionsobserver",{"_index":916,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["actionssubject",{"_index":917,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["activatedroute",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["activatedroutesnapshot",{"_index":950,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["actual_component",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["add",{"_index":313,"title":{},"body":{"components/ChatComponent.html":{},"classes/RouteReusableStrategy.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["addemoji",{"_index":305,"title":{},"body":{"components/ChatComponent.html":{}}}],["addemoji(ev",{"_index":311,"title":{},"body":{"components/ChatComponent.html":{}}}],["additional",{"_index":733,"title":{},"body":{"classes/Logger.html":{},"index.html":{}}}],["addmessage",{"_index":437,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["aliases",{"_index":1392,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":897,"title":{},"body":{"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["allowing",{"_index":940,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["already",{"_index":537,"title":{},"body":{"modules/CoreModule.html":{}}}],["analysis",{"_index":1371,"title":{},"body":{"index.html":{}}}],["angular",{"_index":769,"title":{},"body":{"modules/MaterialModule.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":841,"title":{},"body":{"components/MessageComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":1143,"title":{},"body":{"dependencies.html":{}}}],["angular/cli",{"_index":1341,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":481,"title":{},"body":{"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/SettingsModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":502,"title":{},"body":{"modules/CoreModule.html":{}}}],["angular/compiler",{"_index":1145,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"injectables/I18nService.html":{},"injectables/LocalStorageService.html":{},"modules/MaterialModule.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SocketioService.html":{},"modules/TestingModule.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":483,"title":{},"body":{"modules/ChatModule.html":{},"modules/SettingsModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/SettingsModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1147,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"components/ChatComponent.html":{},"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/MockStore.html":{},"modules/TestingModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{},"modules/SettingsRoutingModule.html":{},"dependencies.html":{}}}],["angular/router/testing",{"_index":927,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["angular/service",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["animate",{"_index":840,"title":{},"body":{"components/MessageComponent.html":{}}}],["animate('0.5s",{"_index":849,"title":{},"body":{"components/MessageComponent.html":{}}}],["animation",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{}}}],["animations",{"_index":842,"title":{},"body":{"components/MessageComponent.html":{},"index.html":{}}}],["another",{"_index":468,"title":{},"body":{"injectables/ChatEffects.html":{},"index.html":{}}}],["aot",{"_index":1306,"title":{},"body":{"index.html":{}}}],["api's",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"injectables/LocalStorageService.html":{},"modules/MaterialModule.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["app.component.html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.module.ts",{"_index":1273,"title":{},"body":{"index.html":{}}}],["app/core",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ChatEffects.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsRoutingModule.html":{}}}],["app/core/logger.service",{"_index":1194,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["app/core/models/message.interface",{"_index":236,"title":{},"body":{"classes/BlinkTab.html":{},"components/ChatComponent.html":{},"interfaces/IChatState.html":{},"components/MessageComponent.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{}}}],["app/core/models/user.interface",{"_index":364,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/ISettingsState.html":{}}}],["app/core/services/socketio/socketio.service",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChatEffects.html":{},"modules/ChatModule.html":{}}}],["app/core/store/actions/chat.actions",{"_index":361,"title":{},"body":{"components/ChatComponent.html":{},"injectables/ChatEffects.html":{}}}],["app/core/store/actions/settings.actions",{"_index":1006,"title":{},"body":{"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{}}}],["app/core/store/effects/chat.effects",{"_index":522,"title":{},"body":{"modules/CoreModule.html":{}}}],["app/core/store/effects/settings.effects",{"_index":521,"title":{},"body":{"modules/CoreModule.html":{}}}],["app/core/store/reducers/app.reducers",{"_index":519,"title":{},"body":{"modules/CoreModule.html":{}}}],["app/core/store/selectors/chat.selector",{"_index":362,"title":{},"body":{"components/ChatComponent.html":{}}}],["app/core/store/selectors/settings.selector",{"_index":366,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{}}}],["app/core/store/state/app.state",{"_index":360,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{}}}],["app/core/store/state/chat.state",{"_index":641,"title":{},"body":{"interfaces/IAppState.html":{}}}],["app/core/store/state/settings.state",{"_index":643,"title":{},"body":{"interfaces/IAppState.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["app/material.module",{"_index":487,"title":{},"body":{"modules/ChatModule.html":{},"modules/SettingsModule.html":{}}}],["app_prefix",{"_index":683,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["appearance",{"_index":415,"title":{},"body":{"components/ChatComponent.html":{}}}],["application",{"_index":551,"title":{},"body":{"injectables/I18nService.html":{},"components/SettingsComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["appmodule",{"_index":166,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["appreducers",{"_index":517,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":177,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appstate",{"_index":300,"title":{},"body":{"components/ChatComponent.html":{}}}],["ar",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arabic",{"_index":1222,"title":{},"body":{"index.html":{}}}],["areg",{"_index":581,"title":{},"body":{"injectables/I18nService.html":{}}}],["arguments",{"_index":1324,"title":{},"body":{"index.html":{}}}],["array",{"_index":1005,"title":{},"body":{"components/SettingsComponent.html":{}}}],["array.from(classlist).filter((item",{"_index":1061,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["asset",{"_index":1365,"title":{},"body":{"index.html":{}}}],["assets",{"_index":1274,"title":{},"body":{"index.html":{}}}],["async",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["attach",{"_index":434,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/SettingsEffects.html":{}}}],["audio",{"_index":1250,"title":{},"body":{"index.html":{}}}],["authentication",{"_index":1245,"title":{},"body":{"index.html":{}}}],["auto",{"_index":424,"title":{},"body":{"components/ChatComponent.html":{},"index.html":{}}}],["autocompletetodo",{"_index":1243,"title":{},"body":{"index.html":{}}}],["autofocus",{"_index":1242,"title":{},"body":{"index.html":{}}}],["automatically",{"_index":1328,"title":{},"body":{"index.html":{}}}],["automation",{"_index":1299,"title":{},"body":{"index.html":{}}}],["autoprefixer",{"_index":1363,"title":{},"body":{"index.html":{}}}],["available",{"_index":1386,"title":{},"body":{"modules.html":{}}}],["avoid",{"_index":607,"title":{},"body":{"injectables/I18nService.html":{}}}],["await",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["back",{"_index":1241,"title":{},"body":{"index.html":{}}}],["backend",{"_index":1332,"title":{},"body":{"index.html":{}}}],["background",{"_index":427,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{}}}],["based",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["baseurl",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["before",{"_index":326,"title":{},"body":{"components/ChatComponent.html":{},"index.html":{}}}],["behavior",{"_index":1191,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["behaviorsubject",{"_index":924,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["beta.19",{"_index":1146,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":1367,"title":{},"body":{"index.html":{}}}],["bezier(.8",{"_index":851,"title":{},"body":{"components/MessageComponent.html":{}}}],["blick",{"_index":320,"title":{},"body":{"components/ChatComponent.html":{}}}],["blink",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"classes/BlinkTab.html":{},"components/ChatComponent.html":{},"interfaces/IChatState.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["blinktab",{"_index":220,"title":{"classes/BlinkTab.html":{}},"body":{"classes/BlinkTab.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["blinktab(false",{"_index":379,"title":{},"body":{"components/ChatComponent.html":{}}}],["blinktab(true",{"_index":465,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["boolean",{"_index":230,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"classes/UnreadCount.html":{}}}],["boolean(language",{"_index":631,"title":{},"body":{"injectables/I18nService.html":{}}}],["bootstrap",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/SettingsModule.html":{},"overview.html":{}}}],["border",{"_index":406,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{}}}],["both",{"_index":868,"title":{},"body":{"components/MessageComponent.html":{}}}],["bottom",{"_index":323,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{},"index.html":{}}}],["box",{"_index":888,"title":{},"body":{"components/MessageComponent.html":{},"index.html":{}}}],["browse",{"_index":1384,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/animations",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["browseranimationsmodule",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["browserslist",{"_index":1364,"title":{},"body":{"index.html":{}}}],["btn",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["build",{"_index":224,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"interfaces/IUser.html":{},"interfaces/Message.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["building",{"_index":1317,"title":{},"body":{"index.html":{}}}],["builds",{"_index":779,"title":{},"body":{"modules/MaterialModule.html":{}}}],["bundling",{"_index":1358,"title":{},"body":{"index.html":{}}}],["button",{"_index":413,"title":{},"body":{"components/ChatComponent.html":{},"components/SettingsComponent.html":{},"index.html":{}}}],["cache",{"_index":1368,"title":{},"body":{"index.html":{}}}],["calc",{"_index":401,"title":{},"body":{"components/ChatComponent.html":{}}}],["carry",{"_index":830,"title":{},"body":{"components/MessageComponent.html":{}}}],["change",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["changeclock",{"_index":260,"title":{"classes/ChangeClock.html":{}},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["changeclock(clock",{"_index":1010,"title":{},"body":{"components/SettingsComponent.html":{}}}],["changelanguage",{"_index":277,"title":{"classes/ChangeLanguage.html":{}},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["changelanguage(language",{"_index":1013,"title":{},"body":{"components/SettingsComponent.html":{}}}],["changename",{"_index":266,"title":{"classes/ChangeName.html":{}},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["changename(name",{"_index":1009,"title":{},"body":{"components/SettingsComponent.html":{}}}],["changes",{"_index":332,"title":{},"body":{"components/ChatComponent.html":{},"injectables/LocalStorageService.html":{}}}],["changesendonenter",{"_index":273,"title":{"classes/ChangeSendOnEnter.html":{}},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["changesendonenter(sendonenter",{"_index":1012,"title":{},"body":{"components/SettingsComponent.html":{}}}],["changetheme",{"_index":269,"title":{"classes/ChangeTheme.html":{}},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["changetheme(theme",{"_index":1011,"title":{},"body":{"components/SettingsComponent.html":{}}}],["chat",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"classes/BlinkTab.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"interfaces/IAppState.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"injectables/SocketioService.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["chat'},{'name",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["chat.component",{"_index":489,"title":{},"body":{"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{}}}],["chat.component.html",{"_index":299,"title":{},"body":{"components/ChatComponent.html":{}}}],["chat.component.scss",{"_index":298,"title":{},"body":{"components/ChatComponent.html":{}}}],["chat.currentmessage",{"_index":386,"title":{},"body":{"components/ChatComponent.html":{}}}],["chat/chat.module",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["chatactions",{"_index":259,"title":{},"body":{"classes/BlinkTab.html":{},"injectables/ChatEffects.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{},"miscellaneous/typealiases.html":{}}}],["chatapp",{"_index":684,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/variables.html":{}}}],["chatcomponent",{"_index":155,"title":{"components/ChatComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["chateffects",{"_index":430,"title":{"injectables/ChatEffects.html":{}},"body":{"injectables/ChatEffects.html":{},"modules/CoreModule.html":{},"coverage.html":{}}}],["chatmodule",{"_index":178,"title":{"modules/ChatModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules.html":{},"overview.html":{}}}],["chatreceived",{"_index":1079,"title":{},"body":{"injectables/SocketioService.html":{}}}],["chatreducers",{"_index":1124,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["chatreducers(state",{"_index":1210,"title":{},"body":{"miscellaneous/functions.html":{}}}],["chatroutingmodule",{"_index":478,"title":{"modules/ChatRoutingModule.html":{}},"body":{"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["chatsend",{"_index":1081,"title":{},"body":{"injectables/SocketioService.html":{}}}],["chatsend(msg",{"_index":1084,"title":{},"body":{"injectables/SocketioService.html":{}}}],["chatstate",{"_index":1131,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["check",{"_index":671,"title":{},"body":{"injectables/LocalStorageService.html":{},"index.html":{}}}],["class",{"_index":86,"title":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Logger.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"classes/UnreadCount.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"injectables/I18nService.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"modules/MaterialModule.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SocketioService.html":{},"modules/TestingModule.html":{},"classes/UnreadCount.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["classes",{"_index":221,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Logger.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"classes/UnreadCount.html":{},"overview.html":{}}}],["classlist",{"_index":1058,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["classlist.add(theme",{"_index":1065,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["classlist.remove(...toremove",{"_index":1064,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["clear",{"_index":867,"title":{},"body":{"components/MessageComponent.html":{}}}],["cli",{"_index":1338,"title":{},"body":{"index.html":{}}}],["click",{"_index":1000,"title":{},"body":{"components/SettingsComponent.html":{},"index.html":{}}}],["clock",{"_index":271,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"interfaces/ISettingsState.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_chatmodule",{"_index":474,"title":{},"body":{"modules/ChatModule.html":{},"overview.html":{}}}],["cluster_chatmodule_declarations",{"_index":475,"title":{},"body":{"modules/ChatModule.html":{},"overview.html":{}}}],["cluster_chatmodule_imports",{"_index":476,"title":{},"body":{"modules/ChatModule.html":{},"overview.html":{}}}],["cluster_chatmodule_providers",{"_index":477,"title":{},"body":{"modules/ChatModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":495,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":496,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_providers",{"_index":497,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_settingsmodule",{"_index":1068,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_declarations",{"_index":1069,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_imports",{"_index":1070,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["code",{"_index":573,"title":{},"body":{"injectables/I18nService.html":{},"index.html":{}}}],["codelyzer",{"_index":1373,"title":{},"body":{"index.html":{}}}],["coding",{"_index":1266,"title":{},"body":{"index.html":{}}}],["color",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{}}}],["column",{"_index":883,"title":{},"body":{"components/MessageComponent.html":{}}}],["command",{"_index":1342,"title":{},"body":{"index.html":{}}}],["common",{"_index":1353,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":480,"title":{},"body":{"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/SettingsModule.html":{}}}],["completely",{"_index":730,"title":{},"body":{"classes/Logger.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"modules/ChatRoutingModule.html":{},"modules/MaterialModule.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsRoutingModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["component_template",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"modules/MaterialModule.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"index.html":{},"overview.html":{}}}],["configuration",{"_index":1320,"title":{},"body":{"index.html":{}}}],["configuration=production",{"_index":1304,"title":{},"body":{"index.html":{}}}],["connection",{"_index":1077,"title":{},"body":{"injectables/SocketioService.html":{}}}],["console",{"_index":1201,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["console.log",{"_index":738,"title":{},"body":{"classes/Logger.html":{}}}],["const",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChatComponent.html":{},"modules/ChatRoutingModule.html":{},"injectables/I18nService.html":{},"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"injectables/LocalStorageService.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsRoutingModule.html":{},"miscellaneous/enumerations.html":{}}}],["constructor",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"injectables/I18nService.html":{},"classes/Logger.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SocketioService.html":{},"modules/TestingModule.html":{},"classes/UnreadCount.html":{}}}],["constructor(@optional",{"_index":532,"title":{},"body":{"modules/CoreModule.html":{}}}],["constructor(actions",{"_index":440,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/SettingsEffects.html":{}}}],["constructor(payload",{"_index":229,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"classes/UnreadCount.html":{}}}],["constructor(private",{"_index":605,"title":{},"body":{"injectables/I18nService.html":{},"classes/Logger.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["constructor(public",{"_index":253,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"classes/UnreadCount.html":{}}}],["constructor(router",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(source",{"_index":721,"title":{},"body":{"classes/Logger.html":{}}}],["constructor(state",{"_index":914,"title":{},"body":{"injectables/MockStore.html":{}}}],["constructor(store",{"_index":308,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["constructor(translateservice",{"_index":545,"title":{},"body":{"injectables/I18nService.html":{}}}],["container",{"_index":294,"title":{},"body":{"components/ChatComponent.html":{}}}],["content",{"_index":876,"title":{},"body":{"components/MessageComponent.html":{}}}],["context(.dark",{"_index":426,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{}}}],["context([dir=rtl",{"_index":423,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{}}}],["continuous",{"_index":1311,"title":{},"body":{"index.html":{}}}],["convenience",{"_index":771,"title":{},"body":{"modules/MaterialModule.html":{}}}],["core",{"_index":539,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"index.html":{}}}],["core/models/message.interface",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["core/store/actions/chat.actions",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["core/store/actions/settings.actions",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["core/store/selectors/chat.selector",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["core/store/state/app.state",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["core/store/state/chat.state",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["coremodule",{"_index":179,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["corresponding",{"_index":1181,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["counted",{"_index":251,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{}}}],["counter",{"_index":321,"title":{},"body":{"components/ChatComponent.html":{},"index.html":{}}}],["coverage",{"_index":1101,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["created",{"_index":1092,"title":{},"body":{"injectables/SocketioService.html":{}}}],["createselector",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["critical",{"_index":1187,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cross",{"_index":1361,"title":{},"body":{"index.html":{}}}],["css",{"_index":1362,"title":{},"body":{"index.html":{}}}],["ctrl",{"_index":275,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"miscellaneous/enumerations.html":{}}}],["ctrl+enter",{"_index":1227,"title":{},"body":{"index.html":{}}}],["ctrl/ngx",{"_index":486,"title":{},"body":{"modules/ChatModule.html":{},"dependencies.html":{}}}],["cubic",{"_index":850,"title":{},"body":{"components/MessageComponent.html":{}}}],["curr",{"_index":959,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["curr.routeconfig",{"_index":966,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["current",{"_index":245,"title":{},"body":{"classes/BlinkTab.html":{},"components/ChatComponent.html":{},"injectables/I18nService.html":{},"classes/Logger.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"injectables/SettingsEffects.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["currentmessage",{"_index":647,"title":{},"body":{"interfaces/IChatState.html":{},"miscellaneous/variables.html":{}}}],["currentstateref",{"_index":697,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["currentstateref[key",{"_index":700,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["custom",{"_index":1176,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["customization",{"_index":1224,"title":{},"body":{"index.html":{}}}],["customize",{"_index":975,"title":{},"body":{"components/SettingsComponent.html":{},"index.html":{}}}],["dark",{"_index":1019,"title":{},"body":{"components/SettingsComponent.html":{}}}],["data",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"modules/ChatRoutingModule.html":{},"interfaces/IUser.html":{},"injectables/LocalStorageService.html":{},"interfaces/Message.html":{},"classes/RouteReusableStrategy.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SocketioService.html":{}}}],["date",{"_index":392,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["datetime",{"_index":819,"title":{},"body":{"interfaces/Message.html":{}}}],["debug",{"_index":718,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["debug(...objects",{"_index":734,"title":{},"body":{"classes/Logger.html":{}}}],["declarations",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/SettingsModule.html":{},"overview.html":{}}}],["declate",{"_index":329,"title":{},"body":{"components/ChatComponent.html":{}}}],["decorators",{"_index":344,"title":{},"body":{"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{}}}],["dedede",{"_index":887,"title":{},"body":{"components/MessageComponent.html":{}}}],["default",{"_index":233,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"injectables/I18nService.html":{},"classes/Logger.html":{},"injectables/MockStore.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"injectables/SettingsEffects.html":{},"injectables/SocketioService.html":{},"classes/UnreadCount.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaultlanguage",{"_index":541,"title":{},"body":{"injectables/I18nService.html":{},"miscellaneous/variables.html":{}}}],["defaultschat",{"_index":1228,"title":{},"body":{"index.html":{}}}],["defaultusername",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"injectables/I18nService.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SocketioService.html":{},"classes/UnreadCount.html":{}}}],["definition",{"_index":945,"title":{},"body":{"classes/RouteReusableStrategy.html":{},"index.html":{}}}],["dependencies",{"_index":168,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/SettingsModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":223,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"injectables/I18nService.html":{},"interfaces/IUser.html":{},"injectables/LocalStorageService.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SocketioService.html":{},"classes/UnreadCount.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["design",{"_index":1159,"title":{},"body":{"dependencies.html":{}}}],["detachedroutehandle",{"_index":952,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["detachedtree",{"_index":963,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["details",{"_index":831,"title":{},"body":{"components/MessageComponent.html":{}}}],["dev",{"_index":1326,"title":{},"body":{"index.html":{}}}],["development",{"_index":1258,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":513,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["different",{"_index":1178,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["direction",{"_index":882,"title":{},"body":{"components/MessageComponent.html":{}}}],["directions",{"_index":1223,"title":{},"body":{"index.html":{}}}],["directive",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["directives",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["directive|pipe|service|class|module",{"_index":1336,"title":{},"body":{"index.html":{}}}],["directly",{"_index":1331,"title":{},"body":{"index.html":{}}}],["disable",{"_index":728,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["dispatch",{"_index":337,"title":{},"body":{"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{}}}],["display",{"_index":272,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/MessageComponent.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["displayed",{"_index":832,"title":{},"body":{"components/MessageComponent.html":{}}}],["dist",{"_index":1263,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":1049,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["docs",{"_index":1265,"title":{},"body":{"index.html":{}}}],["document.body.classlist",{"_index":1059,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["document.bosy",{"_index":1067,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["document.dir",{"_index":1051,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["documentation",{"_index":1102,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["dynamic",{"_index":1148,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1268,"title":{},"body":{"index.html":{}}}],["each",{"_index":452,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/SettingsEffects.html":{},"index.html":{}}}],["echatactions",{"_index":239,"title":{},"body":{"classes/BlinkTab.html":{},"injectables/ChatEffects.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{}}}],["echatactions.blinktab",{"_index":235,"title":{},"body":{"classes/BlinkTab.html":{},"injectables/ChatEffects.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{}}}],["echatactions.reveivemsg",{"_index":252,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{}}}],["echatactions.savecurrentmsg",{"_index":254,"title":{},"body":{"classes/BlinkTab.html":{},"injectables/ChatEffects.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{}}}],["echatactions.sendmessage",{"_index":256,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{}}}],["echatactions.unreadcount",{"_index":257,"title":{},"body":{"classes/BlinkTab.html":{},"injectables/ChatEffects.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{}}}],["effect",{"_index":469,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/SettingsEffects.html":{}}}],["effect({dispatch",{"_index":449,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/SettingsEffects.html":{}}}],["effects",{"_index":436,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/SettingsEffects.html":{}}}],["effectsmodule",{"_index":514,"title":{},"body":{"modules/CoreModule.html":{}}}],["effectsmodule.forroot([settingseffects",{"_index":526,"title":{},"body":{"modules/CoreModule.html":{}}}],["eg",{"_index":613,"title":{},"body":{"injectables/I18nService.html":{},"miscellaneous/variables.html":{}}}],["eg.json",{"_index":583,"title":{},"body":{"injectables/I18nService.html":{}}}],["element",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["elementref",{"_index":343,"title":{},"body":{"components/ChatComponent.html":{},"components/SettingsComponent.html":{}}}],["elements",{"_index":350,"title":{},"body":{"components/ChatComponent.html":{}}}],["embed",{"_index":606,"title":{},"body":{"injectables/I18nService.html":{}}}],["emit",{"_index":1086,"title":{},"body":{"injectables/SocketioService.html":{}}}],["emoji",{"_index":314,"title":{},"body":{"components/ChatComponent.html":{},"modules/ChatModule.html":{},"dependencies.html":{},"index.html":{}}}],["emojishow",{"_index":301,"title":{},"body":{"components/ChatComponent.html":{}}}],["en",{"_index":655,"title":{},"body":{"interfaces/ISettingsState.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/variables.html":{}}}],["enabled",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["enableproductionmode",{"_index":719,"title":{},"body":{"classes/Logger.html":{}}}],["enables",{"_index":740,"title":{},"body":{"classes/Logger.html":{}}}],["end",{"_index":901,"title":{},"body":{"components/MessageComponent.html":{},"index.html":{}}}],["english",{"_index":1221,"title":{},"body":{"index.html":{}}}],["enter",{"_index":276,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"miscellaneous/enumerations.html":{}}}],["enterance",{"_index":1235,"title":{},"body":{"index.html":{}}}],["entered",{"_index":1237,"title":{},"body":{"index.html":{}}}],["entry",{"_index":1286,"title":{},"body":{"index.html":{}}}],["enum",{"_index":237,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Logger.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":1169,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enus",{"_index":578,"title":{},"body":{"injectables/I18nService.html":{}}}],["env/environment",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"components/SettingsComponent.html":{},"injectables/SocketioService.html":{}}}],["env/environment.prod",{"_index":650,"title":{},"body":{"interfaces/ISettingsState.html":{}}}],["environment",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"interfaces/ISettingsState.html":{},"components/SettingsComponent.html":{},"injectables/SocketioService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["environment.defaultusername",{"_index":652,"title":{},"body":{"interfaces/ISettingsState.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"miscellaneous/enumerations.html":{}}}],["environment.serverurl",{"_index":1097,"title":{},"body":{"injectables/SocketioService.html":{}}}],["environment.supportedlanguages",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/SettingsComponent.html":{}}}],["environments",{"_index":1277,"title":{},"body":{"index.html":{}}}],["error",{"_index":536,"title":{},"body":{"modules/CoreModule.html":{},"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["error(...objects",{"_index":744,"title":{},"body":{"classes/Logger.html":{}}}],["error(errormessage",{"_index":714,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["errormessage",{"_index":709,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["errors",{"_index":1188,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["esettingsactions",{"_index":265,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{}}}],["esettingsactions.changeclock",{"_index":264,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"injectables/SettingsEffects.html":{}}}],["esettingsactions.changelanguage",{"_index":282,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"injectables/SettingsEffects.html":{}}}],["esettingsactions.changename",{"_index":278,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"injectables/SettingsEffects.html":{}}}],["esettingsactions.changesendonenter",{"_index":281,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"injectables/SettingsEffects.html":{}}}],["esettingsactions.changetheme",{"_index":280,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"injectables/SettingsEffects.html":{}}}],["esettingsactions.reset",{"_index":283,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"injectables/SettingsEffects.html":{}}}],["esettingsactions.setuserid",{"_index":279,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"injectables/SettingsEffects.html":{}}}],["ev",{"_index":316,"title":{},"body":{"components/ChatComponent.html":{}}}],["ev.emoji.native",{"_index":396,"title":{},"body":{"components/ChatComponent.html":{}}}],["event",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChatEffects.html":{},"injectables/SocketioService.html":{}}}],["event[\"title",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["exact",{"_index":622,"title":{},"body":{"injectables/I18nService.html":{}}}],["example",{"_index":1192,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["exists",{"_index":679,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["expected",{"_index":710,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["explicit",{"_index":941,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["export",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"injectables/I18nService.html":{},"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"modules/MaterialModule.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SocketioService.html":{},"modules/TestingModule.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["exports",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"modules/MaterialModule.html":{},"injectables/MockStore.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TestingModule.html":{},"overview.html":{}}}],["extends",{"_index":911,"title":{},"body":{"injectables/MockStore.html":{},"classes/RouteReusableStrategy.html":{},"injectables/SocketioService.html":{},"modules/TestingModule.html":{}}}],["extra",{"_index":608,"title":{},"body":{"injectables/I18nService.html":{}}}],["extract",{"_index":492,"title":{},"body":{"modules/ChatRoutingModule.html":{},"injectables/I18nService.html":{},"modules/SettingsRoutingModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["extract('settings",{"_index":1075,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["extract(\\\"chat",{"_index":493,"title":{},"body":{"modules/ChatRoutingModule.html":{}}}],["extract(s",{"_index":604,"title":{},"body":{"injectables/I18nService.html":{},"miscellaneous/functions.html":{}}}],["extraction",{"_index":594,"title":{},"body":{"injectables/I18nService.html":{},"miscellaneous/functions.html":{}}}],["fallback",{"_index":212,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/I18nService.html":{}}}],["false",{"_index":340,"title":{},"body":{"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"classes/RouteReusableStrategy.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/variables.html":{}}}],["favico.js",{"_index":1248,"title":{},"body":{"index.html":{}}}],["feature",{"_index":773,"title":{},"body":{"modules/MaterialModule.html":{}}}],["features",{"_index":1220,"title":{},"body":{"index.html":{}}}],["fff",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{}}}],["field",{"_index":1033,"title":{},"body":{"components/SettingsComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"injectables/I18nService.html":{},"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"modules/MaterialModule.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SocketioService.html":{},"modules/TestingModule.html":{},"classes/UnreadCount.html":{},"coverage.html":{}}}],["files",{"_index":1283,"title":{},"body":{"index.html":{}}}],["filter",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["filter(route",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["final",{"_index":856,"title":{},"body":{"components/MessageComponent.html":{}}}],["first",{"_index":363,"title":{},"body":{"components/ChatComponent.html":{},"injectables/ChatEffects.html":{}}}],["fix",{"_index":902,"title":{},"body":{"components/MessageComponent.html":{}}}],["fixed",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["flag",{"_index":1321,"title":{},"body":{"index.html":{}}}],["flex",{"_index":409,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{},"index.html":{}}}],["flexlayoutmodule",{"_index":482,"title":{},"body":{"modules/ChatModule.html":{},"modules/SettingsModule.html":{}}}],["floated",{"_index":1233,"title":{},"body":{"index.html":{}}}],["focus",{"_index":411,"title":{},"body":{"components/ChatComponent.html":{},"components/SettingsComponent.html":{},"index.html":{}}}],["folder",{"_index":1255,"title":{},"body":{"index.html":{}}}],["font",{"_index":1035,"title":{},"body":{"components/SettingsComponent.html":{}}}],["fonts",{"_index":1276,"title":{},"body":{"index.html":{}}}],["forget",{"_index":1322,"title":{},"body":{"index.html":{}}}],["format",{"_index":826,"title":{},"body":{"components/MessageComponent.html":{},"index.html":{}}}],["formsmodule",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/SettingsModule.html":{}}}],["found",{"_index":624,"title":{},"body":{"injectables/I18nService.html":{}}}],["full",{"_index":218,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ChatRoutingModule.html":{},"index.html":{}}}],["func",{"_index":751,"title":{},"body":{"classes/Logger.html":{}}}],["function",{"_index":591,"title":{},"body":{"injectables/I18nService.html":{},"interfaces/IAppState.html":{},"classes/Logger.html":{},"injectables/MockStore.html":{},"modules/TestingModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":1202,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["future",{"_index":961,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["future.data.reuse",{"_index":967,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["future.routeconfig",{"_index":965,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["g",{"_index":1340,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1335,"title":{},"body":{"index.html":{}}}],["getinitialstate",{"_index":645,"title":{},"body":{"interfaces/IAppState.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getitem",{"_index":662,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getitem(key",{"_index":667,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getlanguage",{"_index":563,"title":{},"body":{"injectables/I18nService.html":{}}}],["getlanguages",{"_index":1003,"title":{},"body":{"components/SettingsComponent.html":{}}}],["gets",{"_index":565,"title":{},"body":{"injectables/I18nService.html":{}}}],["getting",{"_index":1215,"title":{"index.html":{}},"body":{}}],["given",{"_index":599,"title":{},"body":{"injectables/I18nService.html":{},"classes/RouteReusableStrategy.html":{},"miscellaneous/functions.html":{}}}],["global",{"_index":1280,"title":{},"body":{"index.html":{}}}],["globally",{"_index":1339,"title":{},"body":{"index.html":{}}}],["go",{"_index":1253,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1385,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":534,"title":{},"body":{"modules/CoreModule.html":{}}}],["guest",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guide",{"_index":1379,"title":{},"body":{"index.html":{}}}],["guides",{"_index":1267,"title":{},"body":{"index.html":{}}}],["hads",{"_index":1377,"title":{},"body":{"index.html":{}}}],["hammerjs",{"_index":1156,"title":{},"body":{"dependencies.html":{}}}],["handler",{"_index":756,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/typealiases.html":{}}}],["happened",{"_index":1197,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["height",{"_index":400,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{}}}],["help",{"_index":1346,"title":{},"body":{"index.html":{}}}],["hh:mm",{"_index":862,"title":{},"body":{"components/MessageComponent.html":{}}}],["history",{"_index":1246,"title":{},"body":{"index.html":{}}}],["host",{"_index":422,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{}}}],["howlerjs\"getting",{"_index":1252,"title":{},"body":{"index.html":{}}}],["html",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"index.html":{}}}],["html5",{"_index":1350,"title":{},"body":{"index.html":{}}}],["htmlhint",{"_index":1375,"title":{},"body":{"index.html":{}}}],["http",{"_index":609,"title":{},"body":{"injectables/I18nService.html":{}}}],["http://localhost:3000",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1302,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":500,"title":{},"body":{"modules/CoreModule.html":{}}}],["httpclientmodule",{"_index":501,"title":{},"body":{"modules/CoreModule.html":{}}}],["https://github.com/angular/angular/issues/18374",{"_index":944,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["https://material.angular.io/guide/getting",{"_index":775,"title":{},"body":{"modules/MaterialModule.html":{}}}],["i18n",{"_index":550,"title":{},"body":{"injectables/I18nService.html":{},"index.html":{}}}],["i18n.service",{"_index":507,"title":{},"body":{"modules/CoreModule.html":{}}}],["i18nservice",{"_index":34,"title":{"injectables/I18nService.html":{}},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"injectables/I18nService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["iappstate",{"_index":69,"title":{"interfaces/IAppState.html":{}},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"interfaces/IAppState.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ichatstate",{"_index":77,"title":{"interfaces/IChatState.html":{}},"body":{"components/AppComponent.html":{},"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["icon",{"_index":1038,"title":{},"body":{"components/SettingsComponent.html":{}}}],["iconfont",{"_index":1161,"title":{},"body":{"dependencies.html":{}}}],["icons",{"_index":1160,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["id",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"interfaces/IUser.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"miscellaneous/enumerations.html":{}}}],["identifier",{"_index":1103,"title":{},"body":{"coverage.html":{}}}],["identify",{"_index":1231,"title":{},"body":{"index.html":{}}}],["ids",{"_index":1230,"title":{},"body":{"index.html":{}}}],["ietf",{"_index":572,"title":{},"body":{"injectables/I18nService.html":{}}}],["if(chat.blink",{"_index":378,"title":{},"body":{"components/ChatComponent.html":{}}}],["if(chat.unread",{"_index":380,"title":{},"body":{"components/ChatComponent.html":{}}}],["if(ev",{"_index":389,"title":{},"body":{"components/ChatComponent.html":{}}}],["if(state.router.state.url",{"_index":464,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["if(this.messagefield.nativeelement.value",{"_index":394,"title":{},"body":{"components/ChatComponent.html":{}}}],["images",{"_index":1275,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":1218,"title":{},"body":{"index.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{}}}],["import",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"injectables/I18nService.html":{},"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"injectables/LocalStorageService.html":{},"modules/MaterialModule.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SocketioService.html":{},"modules/TestingModule.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{}}}],["imports",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"modules/MaterialModule.html":{},"injectables/MockStore.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TestingModule.html":{}}}],["include",{"_index":598,"title":{},"body":{"injectables/I18nService.html":{},"miscellaneous/functions.html":{}}}],["includes",{"_index":575,"title":{},"body":{"injectables/I18nService.html":{},"index.html":{}}}],["includes(this.supportedlanguages",{"_index":621,"title":{},"body":{"injectables/I18nService.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"injectables/I18nService.html":{},"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SocketioService.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":1285,"title":{},"body":{"index.html":{}}}],["infinite",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"injectables/I18nService.html":{},"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"modules/MaterialModule.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SocketioService.html":{},"modules/TestingModule.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{}}}],["info(...objects",{"_index":746,"title":{},"body":{"classes/Logger.html":{}}}],["information",{"_index":1182,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["informative",{"_index":1183,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["init",{"_index":543,"title":{},"body":{"injectables/I18nService.html":{},"components/SettingsComponent.html":{},"index.html":{}}}],["init(defaultlanguage",{"_index":547,"title":{},"body":{"injectables/I18nService.html":{}}}],["initial",{"_index":848,"title":{},"body":{"components/MessageComponent.html":{}}}],["initialappstate",{"_index":644,"title":{},"body":{"interfaces/IAppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialchatstate",{"_index":640,"title":{},"body":{"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialize",{"_index":584,"title":{},"body":{"injectables/I18nService.html":{},"injectables/SocketioService.html":{},"miscellaneous/variables.html":{}}}],["initializes",{"_index":549,"title":{},"body":{"injectables/I18nService.html":{}}}],["initialsettingsstate",{"_index":642,"title":{},"body":{"interfaces/IAppState.html":{},"interfaces/ISettingsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initstatefromlocalstorage",{"_index":1127,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["initstatefromlocalstorage(reducer",{"_index":1211,"title":{},"body":{"miscellaneous/functions.html":{}}}],["inject",{"_index":310,"title":{},"body":{"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"injectables/I18nService.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{}}}],["injectable",{"_index":429,"title":{"injectables/ChatEffects.html":{},"injectables/I18nService.html":{},"injectables/LocalStorageService.html":{},"injectables/MockStore.html":{},"injectables/SettingsEffects.html":{},"injectables/SocketioService.html":{}},"body":{"injectables/ChatEffects.html":{},"injectables/I18nService.html":{},"injectables/LocalStorageService.html":{},"injectables/MockStore.html":{},"injectables/SettingsEffects.html":{},"injectables/SocketioService.html":{},"modules/TestingModule.html":{},"coverage.html":{}}}],["injectables",{"_index":431,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/I18nService.html":{},"injectables/LocalStorageService.html":{},"injectables/MockStore.html":{},"injectables/SettingsEffects.html":{},"injectables/SocketioService.html":{},"overview.html":{}}}],["input",{"_index":295,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"index.html":{}}}],["inputs",{"_index":827,"title":{},"body":{"components/MessageComponent.html":{}}}],["inset",{"_index":890,"title":{},"body":{"components/MessageComponent.html":{}}}],["install",{"_index":1256,"title":{},"body":{"index.html":{}}}],["installed",{"_index":1337,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["integration",{"_index":1312,"title":{},"body":{"index.html":{}}}],["interface",{"_index":635,"title":{"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"interfaces/Message.html":{}},"body":{"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"interfaces/Message.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":636,"title":{},"body":{"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"interfaces/Message.html":{},"overview.html":{}}}],["invert_colors",{"_index":1016,"title":{},"body":{"components/SettingsComponent.html":{}}}],["io",{"_index":524,"title":{},"body":{"modules/CoreModule.html":{},"injectables/SocketioService.html":{},"dependencies.html":{}}}],["isettingsstate",{"_index":639,"title":{"interfaces/ISettingsState.html":{}},"body":{"interfaces/IAppState.html":{},"interfaces/ISettingsState.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["issupportedlanguage",{"_index":620,"title":{},"body":{"injectables/I18nService.html":{}}}],["it's",{"_index":296,"title":{},"body":{"components/ChatComponent.html":{}}}],["item",{"_index":669,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["item.includes",{"_index":1062,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["iuser",{"_index":354,"title":{"interfaces/IUser.html":{}},"body":{"components/ChatComponent.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"interfaces/Message.html":{},"coverage.html":{}}}],["jasmine",{"_index":1370,"title":{},"body":{"index.html":{}}}],["join",{"_index":696,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["js",{"_index":1154,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":1354,"title":{},"body":{"index.html":{}}}],["json.parse(localstorage.getitem(`${app_prefix}${key",{"_index":704,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json.parse(localstorage.getitem(storagekey",{"_index":701,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json.stringify(value",{"_index":703,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["karma",{"_index":1308,"title":{},"body":{"index.html":{}}}],["key",{"_index":587,"title":{},"body":{"injectables/I18nService.html":{},"injectables/LocalStorageService.html":{},"miscellaneous/variables.html":{}}}],["keyframes",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["keys",{"_index":682,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/variables.html":{}}}],["knowledgebase",{"_index":1376,"title":{},"body":{"index.html":{}}}],["label",{"_index":1034,"title":{},"body":{"components/SettingsComponent.html":{}}}],["langchangeevent",{"_index":574,"title":{},"body":{"injectables/I18nService.html":{}}}],["language",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"injectables/I18nService.html":{},"interfaces/ISettingsState.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["language(language",{"_index":617,"title":{},"body":{"injectables/I18nService.html":{}}}],["language.split",{"_index":628,"title":{},"body":{"injectables/I18nService.html":{}}}],["languagekey",{"_index":588,"title":{},"body":{"injectables/I18nService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["languages",{"_index":559,"title":{},"body":{"injectables/I18nService.html":{},"components/SettingsComponent.html":{},"index.html":{}}}],["launch",{"_index":1257,"title":{},"body":{"index.html":{}}}],["layout",{"_index":484,"title":{},"body":{"modules/ChatModule.html":{},"modules/SettingsModule.html":{},"dependencies.html":{},"index.html":{}}}],["leave",{"_index":327,"title":{},"body":{"components/ChatComponent.html":{}}}],["leaving",{"_index":1238,"title":{},"body":{"index.html":{}}}],["left",{"_index":425,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{},"index.html":{}}}],["legend",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"overview.html":{}}}],["level",{"_index":716,"title":{},"body":{"classes/Logger.html":{}}}],["level].concat(objects",{"_index":766,"title":{},"body":{"classes/Logger.html":{}}}],["levels",{"_index":1179,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libraries",{"_index":1378,"title":{},"body":{"index.html":{}}}],["light",{"_index":653,"title":{},"body":{"interfaces/ISettingsState.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["linear",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["lint",{"_index":1305,"title":{},"body":{"index.html":{}}}],["list",{"_index":342,"title":{},"body":{"components/ChatComponent.html":{},"injectables/I18nService.html":{}}}],["listen,emit",{"_index":1078,"title":{},"body":{"injectables/SocketioService.html":{}}}],["listner",{"_index":1090,"title":{},"body":{"injectables/SocketioService.html":{}}}],["live",{"_index":1360,"title":{},"body":{"index.html":{}}}],["load",{"_index":672,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["loaded",{"_index":538,"title":{},"body":{"modules/CoreModule.html":{},"injectables/I18nService.html":{}}}],["loadinitialstate",{"_index":664,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["loads",{"_index":552,"title":{},"body":{"injectables/I18nService.html":{}}}],["local",{"_index":553,"title":{},"body":{"injectables/I18nService.html":{},"injectables/LocalStorageService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["localhost:4200",{"_index":1260,"title":{},"body":{"index.html":{}}}],["localstorage",{"_index":459,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/LocalStorageService.html":{},"injectables/SettingsEffects.html":{}}}],["localstorage.getitem(languagekey",{"_index":618,"title":{},"body":{"injectables/I18nService.html":{}}}],["localstorage.removeitem(`${app_prefix}${key",{"_index":705,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.setitem(`${app_prefix}${key",{"_index":702,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorageservice",{"_index":441,"title":{"injectables/LocalStorageService.html":{}},"body":{"injectables/ChatEffects.html":{},"modules/CoreModule.html":{},"injectables/LocalStorageService.html":{},"injectables/SettingsEffects.html":{},"coverage.html":{},"overview.html":{}}}],["lodash",{"_index":576,"title":{},"body":{"injectables/I18nService.html":{},"dependencies.html":{},"index.html":{}}}],["log",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"injectables/I18nService.html":{},"classes/Logger.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["log(func",{"_index":748,"title":{},"body":{"classes/Logger.html":{}}}],["log.debug('something",{"_index":1196,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log.debug(`language",{"_index":632,"title":{},"body":{"injectables/I18nService.html":{}}}],["logger",{"_index":65,"title":{"classes/Logger.html":{}},"body":{"components/AppComponent.html":{},"injectables/I18nService.html":{},"classes/Logger.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["logger(\"app",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["logger('i18nservice",{"_index":586,"title":{},"body":{"injectables/I18nService.html":{},"miscellaneous/variables.html":{}}}],["logger('myfile",{"_index":1195,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logger.enableproductionmode",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/enumerations.html":{}}}],["logger.level",{"_index":757,"title":{},"body":{"classes/Logger.html":{}}}],["logger.outputs",{"_index":1203,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logger.service",{"_index":577,"title":{},"body":{"injectables/I18nService.html":{}}}],["logging",{"_index":726,"title":{},"body":{"classes/Logger.html":{}}}],["loglevel",{"_index":749,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["loglevel.debug",{"_index":724,"title":{},"body":{"classes/Logger.html":{}}}],["loglevel.error",{"_index":763,"title":{},"body":{"classes/Logger.html":{}}}],["loglevel.info",{"_index":760,"title":{},"body":{"classes/Logger.html":{}}}],["loglevel.off",{"_index":727,"title":{},"body":{"classes/Logger.html":{}}}],["loglevel.warning",{"_index":743,"title":{},"body":{"classes/Logger.html":{}}}],["logoutput",{"_index":731,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["logs",{"_index":729,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["ltr",{"_index":1052,"title":{},"body":{"injectables/SettingsEffects.html":{},"index.html":{}}}],["main",{"_index":1296,"title":{},"body":{"index.html":{}}}],["main.scss",{"_index":1288,"title":{},"body":{"index.html":{}}}],["main.ts",{"_index":1289,"title":{},"body":{"index.html":{}}}],["management",{"_index":1369,"title":{},"body":{"index.html":{}}}],["map",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"injectables/LocalStorageService.html":{},"injectables/SettingsEffects.html":{}}}],["map((action",{"_index":445,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["map(key",{"_index":692,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["map(settings",{"_index":372,"title":{},"body":{"components/ChatComponent.html":{},"injectables/SettingsEffects.html":{}}}],["margin",{"_index":404,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["mark",{"_index":592,"title":{},"body":{"injectables/I18nService.html":{},"miscellaneous/functions.html":{}}}],["mart",{"_index":418,"title":{},"body":{"components/ChatComponent.html":{},"modules/ChatModule.html":{},"dependencies.html":{}}}],["mat",{"_index":412,"title":{},"body":{"components/ChatComponent.html":{},"components/SettingsComponent.html":{}}}],["matautocompletemodule",{"_index":780,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbadgemodule",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttonmodule",{"_index":781,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttontogglemodule",{"_index":782,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":783,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":623,"title":{},"body":{"injectables/I18nService.html":{}}}],["matcheckboxmodule",{"_index":784,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matched",{"_index":214,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["matching",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"injectables/I18nService.html":{},"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"modules/MaterialModule.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SocketioService.html":{},"modules/TestingModule.html":{},"classes/UnreadCount.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":785,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcommonmodule",{"_index":786,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdatepickermodule",{"_index":787,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialogmodule",{"_index":788,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdividermodule",{"_index":789,"title":{},"body":{"modules/MaterialModule.html":{}}}],["material",{"_index":770,"title":{},"body":{"modules/MaterialModule.html":{},"dependencies.html":{},"index.html":{}}}],["material.module",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["materialmodule",{"_index":180,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/MaterialModule.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":790,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matformfieldmodule",{"_index":791,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matgridlistmodule",{"_index":792,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonmodule",{"_index":793,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":794,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlinemodule",{"_index":795,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistitem",{"_index":359,"title":{},"body":{"components/ChatComponent.html":{}}}],["matlistmodule",{"_index":796,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodule",{"_index":797,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matnativedatemodule",{"_index":798,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matoptionmodule",{"_index":799,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matpaginatormodule",{"_index":800,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressbarmodule",{"_index":801,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":802,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matpseudocheckboxmodule",{"_index":803,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matradiomodule",{"_index":804,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matripplemodule",{"_index":805,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectmodule",{"_index":806,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenavmodule",{"_index":807,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidermodule",{"_index":808,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodule",{"_index":809,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbarmodule",{"_index":810,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsortmodule",{"_index":811,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsteppermodule",{"_index":812,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattablemodule",{"_index":813,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabsmodule",{"_index":814,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":815,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":816,"title":{},"body":{"modules/MaterialModule.html":{}}}],["max",{"_index":869,"title":{},"body":{"components/MessageComponent.html":{}}}],["media",{"_index":1029,"title":{},"body":{"components/SettingsComponent.html":{}}}],["merge",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["merge(this.translateservice.onlangchange",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["mergemap",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["mergemap(route",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":73,"title":{"interfaces/Message.html":{}},"body":{"components/AppComponent.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"interfaces/IChatState.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"injectables/SocketioService.html":{},"classes/UnreadCount.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["message'},{'name",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["message.component.html",{"_index":825,"title":{},"body":{"components/MessageComponent.html":{}}}],["message.component.scss",{"_index":824,"title":{},"body":{"components/MessageComponent.html":{}}}],["message.message",{"_index":865,"title":{},"body":{"components/MessageComponent.html":{}}}],["message.time",{"_index":864,"title":{},"body":{"components/MessageComponent.html":{}}}],["message.user?.username",{"_index":863,"title":{},"body":{"components/MessageComponent.html":{}}}],["message/message.component",{"_index":490,"title":{},"body":{"modules/ChatModule.html":{}}}],["messagecomponent",{"_index":157,"title":{"components/MessageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"modules/ChatModule.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["messagefield",{"_index":302,"title":{},"body":{"components/ChatComponent.html":{}}}],["messages",{"_index":250,"title":{},"body":{"classes/BlinkTab.html":{},"components/ChatComponent.html":{},"interfaces/IChatState.html":{},"classes/Logger.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["messagesitems",{"_index":303,"title":{},"body":{"components/ChatComponent.html":{}}}],["meta",{"_index":879,"title":{},"body":{"components/MessageComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["metareducer",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metareducers",{"_index":518,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["method",{"_index":1055,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["methods",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/I18nService.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"classes/RouteReusableStrategy.html":{},"components/SettingsComponent.html":{},"injectables/SocketioService.html":{},"miscellaneous/enumerations.html":{}}}],["middle",{"_index":1040,"title":{},"body":{"components/SettingsComponent.html":{}}}],["min",{"_index":1031,"title":{},"body":{"components/SettingsComponent.html":{}}}],["miscellaneous",{"_index":1168,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mockstore",{"_index":907,"title":{"injectables/MockStore.html":{}},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mode",{"_index":742,"title":{},"body":{"classes/Logger.html":{},"index.html":{}}}],["model",{"_index":657,"title":{},"body":{"interfaces/IUser.html":{},"interfaces/Message.html":{}}}],["models/message.interface",{"_index":1094,"title":{},"body":{"injectables/SocketioService.html":{}}}],["module",{"_index":165,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"modules/MaterialModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TestingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/MaterialModule.html":{},"modules/SettingsModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":167,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"modules/MaterialModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TestingModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1347,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["mostly",{"_index":1344,"title":{},"body":{"index.html":{}}}],["msg",{"_index":390,"title":{},"body":{"components/ChatComponent.html":{},"injectables/SocketioService.html":{}}}],["name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"injectables/I18nService.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SocketioService.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nav",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["navigate",{"_index":1327,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationend",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["needed",{"_index":772,"title":{},"body":{"modules/MaterialModule.html":{},"index.html":{}}}],["new",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"modules/CoreModule.html":{},"injectables/I18nService.html":{},"injectables/LocalStorageService.html":{},"injectables/MockStore.html":{},"modules/TestingModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nextstate",{"_index":923,"title":{},"body":{"injectables/MockStore.html":{}}}],["ng",{"_index":399,"title":{},"body":{"components/ChatComponent.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":306,"title":{},"body":{"components/ChatComponent.html":{},"components/SettingsComponent.html":{}}}],["ngmodule",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"modules/MaterialModule.html":{},"injectables/MockStore.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TestingModule.html":{}}}],["ngondestroy",{"_index":307,"title":{},"body":{"components/ChatComponent.html":{}}}],["ngoninit",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["ngrx",{"_index":1219,"title":{},"body":{"index.html":{}}}],["ngrx/core",{"_index":1150,"title":{},"body":{"dependencies.html":{}}}],["ngrx/effects",{"_index":470,"title":{},"body":{"injectables/ChatEffects.html":{},"modules/CoreModule.html":{},"injectables/SettingsEffects.html":{},"dependencies.html":{}}}],["ngrx/router",{"_index":516,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/IAppState.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"modules/CoreModule.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/TestingModule.html":{},"classes/UnreadCount.html":{},"dependencies.html":{}}}],["ngscrollbar",{"_index":351,"title":{},"body":{"components/ChatComponent.html":{}}}],["ngscrollbarmodule",{"_index":488,"title":{},"body":{"modules/ChatModule.html":{}}}],["ngx",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"injectables/I18nService.html":{},"injectables/MockStore.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"injectables/SocketioService.html":{},"modules/TestingModule.html":{},"dependencies.html":{},"index.html":{}}}],["nice",{"_index":1236,"title":{},"body":{"index.html":{}}}],["non",{"_index":1186,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["none",{"_index":407,"title":{},"body":{"components/ChatComponent.html":{}}}],["noopanimationsmodule",{"_index":925,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["normal",{"_index":1190,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["note",{"_index":568,"title":{},"body":{"injectables/I18nService.html":{}}}],["notifications",{"_index":1247,"title":{},"body":{"index.html":{}}}],["npm",{"_index":596,"title":{},"body":{"injectables/I18nService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["null",{"_index":953,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["number",{"_index":258,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"interfaces/IChatState.html":{},"interfaces/IUser.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"classes/UnreadCount.html":{}}}],["object",{"_index":336,"title":{},"body":{"components/ChatComponent.html":{},"injectables/I18nService.html":{},"components/MessageComponent.html":{},"miscellaneous/variables.html":{}}}],["object.keys(localstorage).reduce((state",{"_index":685,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["objects",{"_index":736,"title":{},"body":{"classes/Logger.html":{}}}],["observable",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["oftype",{"_index":453,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/SettingsEffects.html":{}}}],["oftype(echatactions.reveivemsg",{"_index":460,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["oftype(echatactions.sendmessage",{"_index":444,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["once",{"_index":1240,"title":{},"body":{"index.html":{}}}],["one",{"_index":1093,"title":{},"body":{"injectables/SocketioService.html":{},"index.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["onlanguageselect",{"_index":979,"title":{},"body":{"components/SettingsComponent.html":{}}}],["onlanguageselect(language",{"_index":988,"title":{},"body":{"components/SettingsComponent.html":{}}}],["onnavigationend",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["onsendonentertoggle",{"_index":980,"title":{},"body":{"components/SettingsComponent.html":{}}}],["onsendonentertoggle(sendonenter",{"_index":990,"title":{},"body":{"components/SettingsComponent.html":{}}}],["onthemechange",{"_index":981,"title":{},"body":{"components/SettingsComponent.html":{}}}],["onthemechange(theme",{"_index":993,"title":{},"body":{"components/SettingsComponent.html":{}}}],["ontimedisplaychange",{"_index":982,"title":{},"body":{"components/SettingsComponent.html":{}}}],["ontimedisplaychange(clock",{"_index":995,"title":{},"body":{"components/SettingsComponent.html":{}}}],["onusernamechange",{"_index":983,"title":{},"body":{"components/SettingsComponent.html":{}}}],["onusernamechange(name",{"_index":997,"title":{},"body":{"components/SettingsComponent.html":{}}}],["opacity",{"_index":847,"title":{},"body":{"components/MessageComponent.html":{}}}],["open",{"_index":1259,"title":{},"body":{"index.html":{}}}],["optimize",{"_index":778,"title":{},"body":{"modules/MaterialModule.html":{}}}],["optimized",{"_index":1357,"title":{},"body":{"index.html":{}}}],["optional",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"modules/CoreModule.html":{},"injectables/I18nService.html":{},"interfaces/IAppState.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SocketioService.html":{},"classes/UnreadCount.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":297,"title":{},"body":{"components/ChatComponent.html":{},"injectables/SocketioService.html":{}}}],["order",{"_index":886,"title":{},"body":{"components/MessageComponent.html":{}}}],["origin",{"_index":885,"title":{},"body":{"components/MessageComponent.html":{}}}],["out",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/SettingsModule.html":{},"index.html":{},"overview.html":{}}}],["outline",{"_index":408,"title":{},"body":{"components/ChatComponent.html":{}}}],["output",{"_index":755,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/typealiases.html":{}}}],["output.apply(output",{"_index":764,"title":{},"body":{"classes/Logger.html":{}}}],["outputs",{"_index":717,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["overview",{"_index":1387,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1141,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":398,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{}}}],["page",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"index.html":{}}}],["param",{"_index":601,"title":{},"body":{"injectables/I18nService.html":{}}}],["parameter",{"_index":570,"title":{},"body":{"injectables/I18nService.html":{}}}],["parameters",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"injectables/I18nService.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SocketioService.html":{},"classes/UnreadCount.html":{},"miscellaneous/functions.html":{}}}],["parentmodule",{"_index":533,"title":{},"body":{"modules/CoreModule.html":{}}}],["pass",{"_index":589,"title":{},"body":{"injectables/I18nService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["path",{"_index":215,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ChatRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["pathmatch",{"_index":217,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ChatRoutingModule.html":{}}}],["payload",{"_index":227,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"classes/UnreadCount.html":{}}}],["people",{"_index":1234,"title":{},"body":{"index.html":{}}}],["persistsettings",{"_index":438,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/SettingsEffects.html":{}}}],["pickermodule",{"_index":485,"title":{},"body":{"modules/ChatModule.html":{}}}],["pipe",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/MessageComponent.html":{}}}],["point",{"_index":1287,"title":{},"body":{"index.html":{}}}],["polyfills",{"_index":1291,"title":{},"body":{"index.html":{}}}],["polyfills.ts",{"_index":1290,"title":{},"body":{"index.html":{}}}],["position",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{}}}],["possibility",{"_index":1174,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["prefix",{"_index":585,"title":{},"body":{"injectables/I18nService.html":{},"injectables/LocalStorageService.html":{},"miscellaneous/variables.html":{}}}],["prepend",{"_index":1323,"title":{},"body":{"index.html":{}}}],["present",{"_index":555,"title":{},"body":{"injectables/I18nService.html":{}}}],["prevent",{"_index":1189,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["primary",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["prior",{"_index":213,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["private",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"classes/Logger.html":{},"injectables/MockStore.html":{},"injectables/SettingsEffects.html":{},"modules/TestingModule.html":{}}}],["process",{"_index":1200,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["processes",{"_index":1356,"title":{},"body":{"index.html":{}}}],["prod",{"_index":1325,"title":{},"body":{"index.html":{}}}],["production",{"_index":741,"title":{},"body":{"classes/Logger.html":{},"modules/MaterialModule.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1254,"title":{},"body":{"index.html":{}}}],["properties",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"injectables/I18nService.html":{},"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"classes/Logger.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SocketioService.html":{},"classes/UnreadCount.html":{}}}],["protractor",{"_index":1313,"title":{},"body":{"index.html":{}}}],["provide",{"_index":530,"title":{},"body":{"modules/CoreModule.html":{},"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["provided",{"_index":1180,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["providedin",{"_index":1095,"title":{},"body":{"injectables/SocketioService.html":{}}}],["providemockstore",{"_index":932,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["provider",{"_index":931,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{},"miscellaneous/functions.html":{}}}],["providers",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"injectables/MockStore.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TestingModule.html":{},"overview.html":{}}}],["proxy",{"_index":1333,"title":{},"body":{"index.html":{}}}],["public",{"_index":226,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"classes/UnreadCount.html":{}}}],["purposes",{"_index":910,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["quality",{"_index":1355,"title":{},"body":{"index.html":{}}}],["querylist",{"_index":347,"title":{},"body":{"components/ChatComponent.html":{}}}],["radius",{"_index":417,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{}}}],["re",{"_index":768,"title":{},"body":{"modules/MaterialModule.html":{}}}],["read",{"_index":681,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["readme",{"_index":1348,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":228,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"classes/UnreadCount.html":{}}}],["real",{"_index":1244,"title":{},"body":{"index.html":{}}}],["receive",{"_index":240,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["received",{"_index":1088,"title":{},"body":{"injectables/SocketioService.html":{}}}],["receivemessage",{"_index":439,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["redirectto",{"_index":216,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ChatRoutingModule.html":{}}}],["reducer",{"_index":1212,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reducermanager",{"_index":918,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["redux",{"_index":1217,"title":{},"body":{"index.html":{}}}],["reference",{"_index":339,"title":{},"body":{"components/ChatComponent.html":{},"components/SettingsComponent.html":{}}}],["refrence",{"_index":561,"title":{},"body":{"injectables/I18nService.html":{}}}],["region",{"_index":627,"title":{},"body":{"injectables/I18nService.html":{}}}],["registering",{"_index":1175,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["related",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["relative",{"_index":874,"title":{},"body":{"components/MessageComponent.html":{}}}],["reload",{"_index":1329,"title":{},"body":{"index.html":{}}}],["remove",{"_index":319,"title":{},"body":{"components/ChatComponent.html":{},"injectables/LocalStorageService.html":{}}}],["removeitem",{"_index":665,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["removeitem(key",{"_index":673,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["replace(app_prefix",{"_index":689,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["reports",{"_index":1294,"title":{},"body":{"index.html":{}}}],["requests",{"_index":610,"title":{},"body":{"injectables/I18nService.html":{}}}],["reset",{"_index":183,"title":{"classes/Reset.html":{}},"body":{"modules/AppModule.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["restore",{"_index":1239,"title":{},"body":{"index.html":{}}}],["result",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"injectables/I18nService.html":{},"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"modules/MaterialModule.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SocketioService.html":{},"modules/TestingModule.html":{},"classes/UnreadCount.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"injectables/I18nService.html":{},"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"modules/MaterialModule.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SocketioService.html":{},"modules/TestingModule.html":{},"classes/UnreadCount.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":836,"title":{},"body":{"components/MessageComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SettingsComponent.html":{}}}],["retrieve(route",{"_index":949,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["retrievedvalue",{"_index":708,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["return",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"injectables/I18nService.html":{},"interfaces/IAppState.html":{},"injectables/LocalStorageService.html":{},"injectables/MockStore.html":{},"classes/RouteReusableStrategy.html":{},"components/SettingsComponent.html":{},"modules/TestingModule.html":{}}}],["returns",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/I18nService.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"classes/RouteReusableStrategy.html":{},"components/SettingsComponent.html":{},"injectables/SocketioService.html":{},"miscellaneous/functions.html":{}}}],["reusable",{"_index":505,"title":{},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["reuse",{"_index":942,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["reveivemsg",{"_index":71,"title":{"classes/ReveiveMsg.html":{}},"body":{"components/AppComponent.html":{},"classes/BlinkTab.html":{},"injectables/ChatEffects.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["reveivemsg(m",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["revisioning",{"_index":1366,"title":{},"body":{"index.html":{}}}],["right",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"index.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"injectables/SocketioService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["root'},{'name",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["route",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{}}}],["route.data",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["route.firstchild",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["route.outlet",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["router",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"interfaces/IAppState.html":{},"miscellaneous/variables.html":{}}}],["routereusablestrategy",{"_index":504,"title":{"classes/RouteReusableStrategy.html":{}},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["routereusestrategy",{"_index":503,"title":{},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{}}}],["routermodule",{"_index":211,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":494,"title":{},"body":{"modules/ChatRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":219,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerreducer",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerreducerstate",{"_index":638,"title":{},"body":{"interfaces/IAppState.html":{}}}],["routertestingmodule",{"_index":926,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["routes",{"_index":210,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ChatRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"index.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":1381,"title":{},"body":{"index.html":{}}}],["routing.module",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/SettingsModule.html":{}}}],["routing.module.ts",{"_index":209,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ChatRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"index.html":{}}}],["rtl",{"_index":1053,"title":{},"body":{"injectables/SettingsEffects.html":{},"index.html":{}}}],["run",{"_index":1301,"title":{},"body":{"index.html":{}}}],["running",{"_index":595,"title":{},"body":{"injectables/I18nService.html":{},"miscellaneous/functions.html":{}}}],["rxjs",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"components/SettingsComponent.html":{},"modules/TestingModule.html":{},"dependencies.html":{},"index.html":{}}}],["rxjs/operators",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"injectables/SettingsEffects.html":{}}}],["s",{"_index":602,"title":{},"body":{"injectables/I18nService.html":{},"miscellaneous/functions.html":{}}}],["same",{"_index":603,"title":{},"body":{"injectables/I18nService.html":{},"classes/Logger.html":{}}}],["sass",{"_index":1352,"title":{},"body":{"index.html":{}}}],["save",{"_index":244,"title":{},"body":{"classes/BlinkTab.html":{},"components/ChatComponent.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["savecurrentmsg",{"_index":243,"title":{"classes/SaveCurrentMsg.html":{}},"body":{"classes/BlinkTab.html":{},"components/ChatComponent.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["savecurrentmsg(this.messagefield.nativeelement.value",{"_index":395,"title":{},"body":{"components/ChatComponent.html":{}}}],["saved",{"_index":569,"title":{},"body":{"injectables/I18nService.html":{},"index.html":{}}}],["scaffolding",{"_index":1334,"title":{},"body":{"index.html":{}}}],["scale(0.5",{"_index":846,"title":{},"body":{"components/MessageComponent.html":{}}}],["scale(1",{"_index":855,"title":{},"body":{"components/MessageComponent.html":{}}}],["screen",{"_index":1030,"title":{},"body":{"components/SettingsComponent.html":{}}}],["scripts",{"_index":1300,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":322,"title":{},"body":{"components/ChatComponent.html":{},"index.html":{}}}],["scrollbar",{"_index":358,"title":{},"body":{"components/ChatComponent.html":{},"modules/ChatModule.html":{},"dependencies.html":{},"index.html":{}}}],["scrollbarref",{"_index":304,"title":{},"body":{"components/ChatComponent.html":{}}}],["scss",{"_index":1281,"title":{},"body":{"index.html":{}}}],["search",{"_index":625,"title":{},"body":{"injectables/I18nService.html":{}}}],["see",{"_index":774,"title":{},"body":{"modules/MaterialModule.html":{}}}],["select",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{}}}],["select(selectchat",{"_index":376,"title":{},"body":{"components/ChatComponent.html":{}}}],["select(selectsettings",{"_index":371,"title":{},"body":{"components/ChatComponent.html":{},"injectables/SettingsEffects.html":{}}}],["selectchat",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selection",{"_index":315,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["selectors/chat.selector",{"_index":473,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["selectsettings",{"_index":365,"title":{},"body":{"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["self",{"_index":898,"title":{},"body":{"components/MessageComponent.html":{}}}],["send",{"_index":242,"title":{},"body":{"classes/BlinkTab.html":{},"components/ChatComponent.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"components/SettingsComponent.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["sender",{"_index":820,"title":{},"body":{"interfaces/Message.html":{}}}],["sending",{"_index":274,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"miscellaneous/enumerations.html":{}}}],["sendmessage",{"_index":241,"title":{"classes/SendMessage.html":{}},"body":{"classes/BlinkTab.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["sendmessage(ev",{"_index":334,"title":{},"body":{"components/ChatComponent.html":{}}}],["sendmessage(msg",{"_index":393,"title":{},"body":{"components/ChatComponent.html":{}}}],["sendonenter",{"_index":649,"title":{},"body":{"interfaces/ISettingsState.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["sent",{"_index":818,"title":{},"body":{"interfaces/Message.html":{}}}],["sentiment_satisfied_alt",{"_index":397,"title":{},"body":{"components/ChatComponent.html":{}}}],["serve",{"_index":1330,"title":{},"body":{"index.html":{}}}],["serve:sw",{"_index":1303,"title":{},"body":{"index.html":{}}}],["server",{"_index":451,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/SocketioService.html":{},"index.html":{}}}],["serverurl",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":661,"title":{},"body":{"injectables/LocalStorageService.html":{},"index.html":{}}}],["services",{"_index":1271,"title":{},"body":{"index.html":{}}}],["services/local",{"_index":508,"title":{},"body":{"modules/CoreModule.html":{}}}],["serviceworkermodule",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register('./ngsw",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":268,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"injectables/I18nService.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"miscellaneous/enumerations.html":{}}}],["setitem",{"_index":458,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/LocalStorageService.html":{},"injectables/SettingsEffects.html":{}}}],["setitem(key",{"_index":675,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setlanguage(language",{"_index":566,"title":{},"body":{"injectables/I18nService.html":{}}}],["sets",{"_index":556,"title":{},"body":{"injectables/I18nService.html":{},"classes/Logger.html":{}}}],["setstate",{"_index":913,"title":{},"body":{"injectables/MockStore.html":{}}}],["setstate(nextstate",{"_index":920,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["settimeout",{"_index":382,"title":{},"body":{"components/ChatComponent.html":{},"components/SettingsComponent.html":{}}}],["settings",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"interfaces/IAppState.html":{},"components/MessageComponent.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["settings.clock",{"_index":861,"title":{},"body":{"components/MessageComponent.html":{}}}],["settings.component",{"_index":1073,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["settings.component.html",{"_index":977,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.scss",{"_index":976,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.language",{"_index":1048,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["settings.theme",{"_index":1056,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["settings.user",{"_index":373,"title":{},"body":{"components/ChatComponent.html":{}}}],["settings/settings.module",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["settings_backup_restore",{"_index":1027,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settingsactions",{"_index":284,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/typealiases.html":{}}}],["settingscomponent",{"_index":159,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["settingseffects",{"_index":520,"title":{"injectables/SettingsEffects.html":{}},"body":{"modules/CoreModule.html":{},"injectables/SettingsEffects.html":{},"coverage.html":{}}}],["settingsmodule",{"_index":181,"title":{"modules/SettingsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["settingsreducers",{"_index":1129,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["settingsreducers(state",{"_index":1214,"title":{},"body":{"miscellaneous/functions.html":{}}}],["settingsroutingmodule",{"_index":1071,"title":{"modules/SettingsRoutingModule.html":{}},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["settingsstate",{"_index":1133,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["settingsview.clockdisplay",{"_index":1021,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settingsview.hours",{"_index":1023,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settingsview.interfacecolor",{"_index":1017,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settingsview.language",{"_index":1026,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settingsview.reset",{"_index":1028,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settingsview.sendonenter",{"_index":1025,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settingsview.username",{"_index":1014,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settranslateservicelanguage",{"_index":1042,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["setup",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["setuserid",{"_index":75,"title":{"classes/SetUserID.html":{}},"body":{"components/AppComponent.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["setuserid(id",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["sh",{"_index":1261,"title":{},"body":{"index.html":{}}}],["shadow",{"_index":889,"title":{},"body":{"components/MessageComponent.html":{}}}],["shell",{"_index":1272,"title":{},"body":{"index.html":{}}}],["shouldattach",{"_index":946,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldattach(route",{"_index":954,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shoulddetach",{"_index":947,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shoulddetach(route",{"_index":956,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldreuseroute",{"_index":948,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldreuseroute(future",{"_index":958,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["show/hide",{"_index":341,"title":{},"body":{"components/ChatComponent.html":{}}}],["side",{"_index":435,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/SettingsEffects.html":{}}}],["simple",{"_index":1173,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["singleton",{"_index":1270,"title":{},"body":{"index.html":{}}}],["size",{"_index":1036,"title":{},"body":{"components/SettingsComponent.html":{}}}],["skipself",{"_index":499,"title":{},"body":{"modules/CoreModule.html":{}}}],["slider",{"_index":992,"title":{},"body":{"components/SettingsComponent.html":{}}}],["snippet",{"_index":1198,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["socket",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChatEffects.html":{},"modules/CoreModule.html":{},"injectables/SocketioService.html":{},"dependencies.html":{}}}],["socket.io",{"_index":1229,"title":{},"body":{"index.html":{}}}],["socketiomodule",{"_index":523,"title":{},"body":{"modules/CoreModule.html":{}}}],["socketioservice",{"_index":36,"title":{"injectables/SocketioService.html":{}},"body":{"components/AppComponent.html":{},"injectables/ChatEffects.html":{},"modules/ChatModule.html":{},"injectables/SocketioService.html":{},"coverage.html":{},"overview.html":{}}}],["sounds",{"_index":1249,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"modules/ChatModule.html":{},"modules/ChatRoutingModule.html":{},"modules/CoreModule.html":{},"injectables/I18nService.html":{},"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"modules/MaterialModule.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SocketioService.html":{},"modules/TestingModule.html":{},"classes/UnreadCount.html":{},"index.html":{}}}],["specified",{"_index":571,"title":{},"body":{"injectables/I18nService.html":{}}}],["specify",{"_index":1318,"title":{},"body":{"index.html":{}}}],["split",{"_index":691,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["sprite",{"_index":1251,"title":{},"body":{"index.html":{}}}],["src",{"_index":1269,"title":{},"body":{"index.html":{}}}],["src/.../app.component.ts",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.reducers.ts",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.state.ts",{"_index":1206,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../chat.actions.ts",{"_index":1170,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../chat.reducer.ts",{"_index":1204,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../chat.selector.ts",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../chat.state.ts",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../i18n.service.ts",{"_index":1205,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":1207,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../logger.service.ts",{"_index":1172,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../settings.actions.ts",{"_index":1171,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../settings.reducer.ts",{"_index":1209,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../settings.selector.ts",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../settings.state.ts",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":1208,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":208,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts:27",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:38",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/chat/chat",{"_index":491,"title":{},"body":{"modules/ChatRoutingModule.html":{}}}],["src/app/chat/chat.component.ts",{"_index":293,"title":{},"body":{"components/ChatComponent.html":{},"coverage.html":{}}}],["src/app/chat/chat.component.ts:106",{"_index":324,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/chat/chat.component.ts:114",{"_index":312,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/chat/chat.component.ts:26",{"_index":346,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/chat/chat.component.ts:30",{"_index":353,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/chat/chat.component.ts:34",{"_index":349,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/chat/chat.component.ts:38",{"_index":338,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/chat/chat.component.ts:42",{"_index":355,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/chat/chat.component.ts:46",{"_index":309,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/chat/chat.component.ts:56",{"_index":328,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/chat/chat.component.ts:79",{"_index":318,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/chat/chat.component.ts:93",{"_index":335,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/chat/chat.module.ts",{"_index":479,"title":{},"body":{"modules/ChatModule.html":{}}}],["src/app/chat/message/message.component.ts",{"_index":822,"title":{},"body":{"components/MessageComponent.html":{},"coverage.html":{}}}],["src/app/chat/message/message.component.ts:30",{"_index":829,"title":{},"body":{"components/MessageComponent.html":{}}}],["src/app/chat/message/message.component.ts:34",{"_index":835,"title":{},"body":{"components/MessageComponent.html":{}}}],["src/app/chat/message/message.component.ts:38",{"_index":828,"title":{},"body":{"components/MessageComponent.html":{}}}],["src/app/chat/message/message.component.ts:46",{"_index":833,"title":{},"body":{"components/MessageComponent.html":{}}}],["src/app/core/core.module.ts",{"_index":498,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/i18n.service.ts",{"_index":540,"title":{},"body":{"injectables/I18nService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/i18n.service.ts:32",{"_index":560,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/core/i18n.service.ts:36",{"_index":546,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/core/i18n.service.ts:52",{"_index":548,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/core/i18n.service.ts:64",{"_index":567,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/core/i18n.service.ts:88",{"_index":564,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/core/logger.service.ts",{"_index":715,"title":{},"body":{"classes/Logger.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/logger.service.ts:101",{"_index":745,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/core/logger.service.ts:107",{"_index":750,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/core/logger.service.ts:56",{"_index":725,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/core/logger.service.ts:61",{"_index":732,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/core/logger.service.ts:67",{"_index":739,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/core/logger.service.ts:69",{"_index":722,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/core/logger.service.ts:77",{"_index":735,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/core/logger.service.ts:85",{"_index":747,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/core/logger.service.ts:93",{"_index":753,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/core/models/message.interface.ts",{"_index":817,"title":{},"body":{"interfaces/Message.html":{},"coverage.html":{}}}],["src/app/core/models/user.interface.ts",{"_index":656,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/app/core/route",{"_index":938,"title":{},"body":{"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["src/app/core/services/local",{"_index":659,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/socketio/socketio.service.ts",{"_index":1076,"title":{},"body":{"injectables/SocketioService.html":{},"coverage.html":{}}}],["src/app/core/services/socketio/socketio.service.ts:16",{"_index":1089,"title":{},"body":{"injectables/SocketioService.html":{}}}],["src/app/core/services/socketio/socketio.service.ts:20",{"_index":1082,"title":{},"body":{"injectables/SocketioService.html":{}}}],["src/app/core/services/socketio/socketio.service.ts:33",{"_index":1085,"title":{},"body":{"injectables/SocketioService.html":{}}}],["src/app/core/store/actions/chat.actions.ts",{"_index":222,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/store/actions/chat.actions.ts:17",{"_index":936,"title":{},"body":{"classes/ReveiveMsg.html":{}}}],["src/app/core/store/actions/chat.actions.ts:18",{"_index":937,"title":{},"body":{"classes/ReveiveMsg.html":{}}}],["src/app/core/store/actions/chat.actions.ts:24",{"_index":968,"title":{},"body":{"classes/SaveCurrentMsg.html":{}}}],["src/app/core/store/actions/chat.actions.ts:25",{"_index":969,"title":{},"body":{"classes/SaveCurrentMsg.html":{}}}],["src/app/core/store/actions/chat.actions.ts:31",{"_index":970,"title":{},"body":{"classes/SendMessage.html":{}}}],["src/app/core/store/actions/chat.actions.ts:32",{"_index":971,"title":{},"body":{"classes/SendMessage.html":{}}}],["src/app/core/store/actions/chat.actions.ts:38",{"_index":231,"title":{},"body":{"classes/BlinkTab.html":{}}}],["src/app/core/store/actions/chat.actions.ts:39",{"_index":232,"title":{},"body":{"classes/BlinkTab.html":{}}}],["src/app/core/store/actions/chat.actions.ts:45",{"_index":1099,"title":{},"body":{"classes/UnreadCount.html":{}}}],["src/app/core/store/actions/chat.actions.ts:46",{"_index":1100,"title":{},"body":{"classes/UnreadCount.html":{}}}],["src/app/core/store/actions/settings.actions.ts",{"_index":261,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/store/actions/settings.actions.ts:18",{"_index":287,"title":{},"body":{"classes/ChangeName.html":{}}}],["src/app/core/store/actions/settings.actions.ts:19",{"_index":288,"title":{},"body":{"classes/ChangeName.html":{}}}],["src/app/core/store/actions/settings.actions.ts:25",{"_index":972,"title":{},"body":{"classes/SetUserID.html":{}}}],["src/app/core/store/actions/settings.actions.ts:26",{"_index":973,"title":{},"body":{"classes/SetUserID.html":{}}}],["src/app/core/store/actions/settings.actions.ts:32",{"_index":291,"title":{},"body":{"classes/ChangeTheme.html":{}}}],["src/app/core/store/actions/settings.actions.ts:33",{"_index":292,"title":{},"body":{"classes/ChangeTheme.html":{}}}],["src/app/core/store/actions/settings.actions.ts:39",{"_index":262,"title":{},"body":{"classes/ChangeClock.html":{}}}],["src/app/core/store/actions/settings.actions.ts:40",{"_index":263,"title":{},"body":{"classes/ChangeClock.html":{}}}],["src/app/core/store/actions/settings.actions.ts:46",{"_index":289,"title":{},"body":{"classes/ChangeSendOnEnter.html":{}}}],["src/app/core/store/actions/settings.actions.ts:47",{"_index":290,"title":{},"body":{"classes/ChangeSendOnEnter.html":{}}}],["src/app/core/store/actions/settings.actions.ts:53",{"_index":285,"title":{},"body":{"classes/ChangeLanguage.html":{}}}],["src/app/core/store/actions/settings.actions.ts:54",{"_index":286,"title":{},"body":{"classes/ChangeLanguage.html":{}}}],["src/app/core/store/actions/settings.actions.ts:60",{"_index":935,"title":{},"body":{"classes/Reset.html":{}}}],["src/app/core/store/effects/chat.effects.ts",{"_index":432,"title":{},"body":{"injectables/ChatEffects.html":{},"coverage.html":{}}}],["src/app/core/store/effects/chat.effects.ts:22",{"_index":442,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["src/app/core/store/effects/chat.effects.ts:36",{"_index":457,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["src/app/core/store/effects/chat.effects.ts:51",{"_index":450,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["src/app/core/store/effects/chat.effects.ts:61",{"_index":467,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["src/app/core/store/effects/settings.effects.ts",{"_index":1041,"title":{},"body":{"injectables/SettingsEffects.html":{},"coverage.html":{}}}],["src/app/core/store/effects/settings.effects.ts:15",{"_index":1044,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/core/store/effects/settings.effects.ts:29",{"_index":1047,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/core/store/effects/settings.effects.ts:48",{"_index":1054,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/core/store/effects/settings.effects.ts:63",{"_index":1066,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/core/store/reducers/app.reducers.ts",{"_index":1122,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/store/reducers/chat.reducer.ts",{"_index":1123,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/store/reducers/local",{"_index":1125,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/store/reducers/settings.reducer.ts",{"_index":1128,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/store/selectors/chat.selector.ts",{"_index":1130,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/store/selectors/settings.selector.ts",{"_index":1132,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/store/state/app.state.ts",{"_index":637,"title":{},"body":{"interfaces/IAppState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/store/state/chat.state.ts",{"_index":646,"title":{},"body":{"interfaces/IChatState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/store/state/settings.state.ts",{"_index":648,"title":{},"body":{"interfaces/ISettingsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/material.module.ts",{"_index":767,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/settings/settings",{"_index":1074,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["src/app/settings/settings.component.ts",{"_index":974,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{}}}],["src/app/settings/settings.component.ts:22",{"_index":1001,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:26",{"_index":984,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:34",{"_index":987,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:40",{"_index":985,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:46",{"_index":1004,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:52",{"_index":998,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:58",{"_index":996,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:64",{"_index":994,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:70",{"_index":991,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:76",{"_index":989,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:82",{"_index":999,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.module.ts",{"_index":1072,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/app/translations/template.json",{"_index":1316,"title":{},"body":{"index.html":{}}}],["src/environments/environment.prod.ts",{"_index":1137,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1138,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/testing/utils.ts",{"_index":908,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/testing/utils.ts:18",{"_index":919,"title":{},"body":{"injectables/MockStore.html":{}}}],["src/testing/utils.ts:29",{"_index":922,"title":{},"body":{"injectables/MockStore.html":{}}}],["standalone.mat",{"_index":414,"title":{},"body":{"components/ChatComponent.html":{}}}],["standard",{"_index":416,"title":{},"body":{"components/ChatComponent.html":{}}}],["start",{"_index":899,"title":{},"body":{"components/MessageComponent.html":{},"index.html":{}}}],["started",{"_index":1216,"title":{"index.html":{}},"body":{"index.html":{}}}],["started#step",{"_index":776,"title":{},"body":{"modules/MaterialModule.html":{}}}],["state",{"_index":330,"title":{},"body":{"components/ChatComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/MockStore.html":{},"modules/TestingModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["state.chat",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.settings",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state/app.state",{"_index":471,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["statekey",{"_index":528,"title":{},"body":{"modules/CoreModule.html":{}}}],["statekeys",{"_index":688,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["statekeys.foreach((key",{"_index":698,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["statekeys.length",{"_index":699,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["statements",{"_index":1104,"title":{},"body":{"coverage.html":{}}}],["stateobservable",{"_index":915,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["statesubject",{"_index":912,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["static",{"_index":663,"title":{},"body":{"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"index.html":{}}}],["status",{"_index":1184,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["storage",{"_index":554,"title":{},"body":{"injectables/I18nService.html":{},"injectables/LocalStorageService.html":{},"miscellaneous/variables.html":{}}}],["storage.reducer.ts",{"_index":1126,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["storage.service",{"_index":510,"title":{},"body":{"modules/CoreModule.html":{}}}],["storage.service.ts",{"_index":660,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage.service.ts:15",{"_index":670,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:49",{"_index":676,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:55",{"_index":668,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:61",{"_index":674,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:66",{"_index":677,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage/local",{"_index":509,"title":{},"body":{"modules/CoreModule.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storagekey",{"_index":686,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storagekey.includes(app_prefix",{"_index":687,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storagesettings",{"_index":1225,"title":{},"body":{"index.html":{}}}],["store",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"modules/CoreModule.html":{},"interfaces/IAppState.html":{},"injectables/LocalStorageService.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"classes/RouteReusableStrategy.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/TestingModule.html":{},"dependencies.html":{},"index.html":{}}}],["store(route",{"_index":962,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["storedevtoolsmodule",{"_index":512,"title":{},"body":{"modules/CoreModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":529,"title":{},"body":{"modules/CoreModule.html":{}}}],["storemodule",{"_index":511,"title":{},"body":{"modules/CoreModule.html":{},"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["storemodule.forroot",{"_index":933,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["storemodule.forroot(appreducers",{"_index":525,"title":{},"body":{"modules/CoreModule.html":{}}}],["storerouterconnectingmodule",{"_index":515,"title":{},"body":{"modules/CoreModule.html":{}}}],["storerouterconnectingmodule.forroot",{"_index":527,"title":{},"body":{"modules/CoreModule.html":{}}}],["strategy",{"_index":506,"title":{},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{}}}],["strategy.ts",{"_index":939,"title":{},"body":{"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["strategy.ts:10",{"_index":957,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:14",{"_index":964,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:16",{"_index":955,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:20",{"_index":951,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:24",{"_index":960,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["string",{"_index":255,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/I18nService.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"classes/UnreadCount.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":1314,"title":{},"body":{"index.html":{}}}],["structure",{"_index":1262,"title":{},"body":{"index.html":{}}}],["style",{"_index":839,"title":{},"body":{"components/MessageComponent.html":{},"index.html":{}}}],["stylelint",{"_index":1374,"title":{},"body":{"index.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["subscribe",{"_index":331,"title":{},"body":{"components/ChatComponent.html":{}}}],["subscribe((state",{"_index":463,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["subscribe(chat",{"_index":377,"title":{},"body":{"components/ChatComponent.html":{}}}],["subscribe(event",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(user",{"_index":374,"title":{},"body":{"components/ChatComponent.html":{}}}],["success",{"_index":1185,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["super",{"_index":1096,"title":{},"body":{"injectables/SocketioService.html":{}}}],["super(state",{"_index":928,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["support",{"_index":1382,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":558,"title":{},"body":{"injectables/I18nService.html":{},"components/SettingsComponent.html":{}}}],["supportedlanguage.startswith(language",{"_index":630,"title":{},"body":{"injectables/I18nService.html":{}}}],["supportedlanguages",{"_index":542,"title":{},"body":{"injectables/I18nService.html":{},"miscellaneous/variables.html":{}}}],["svg",{"_index":1383,"title":{},"body":{"modules.html":{}}}],["system",{"_index":562,"title":{},"body":{"injectables/I18nService.html":{},"miscellaneous/enumerations.html":{}}}],["t",{"_index":921,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["tab",{"_index":247,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["table",{"_index":1140,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1139,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":823,"title":{},"body":{"components/MessageComponent.html":{}}}],["tap",{"_index":461,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/SettingsEffects.html":{}}}],["tap(([action",{"_index":455,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/SettingsEffects.html":{}}}],["tap((theme",{"_index":1057,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["tap(language",{"_index":1050,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["tap(msg",{"_index":447,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["target",{"_index":1319,"title":{},"body":{"index.html":{}}}],["task",{"_index":1298,"title":{},"body":{"index.html":{}}}],["tasks",{"_index":1297,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{},"index.html":{}}}],["templates",{"_index":1315,"title":{},"body":{"index.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["test",{"_index":1295,"title":{},"body":{"index.html":{}}}],["test.ts",{"_index":1292,"title":{},"body":{"index.html":{}}}],["test:ci",{"_index":1310,"title":{},"body":{"index.html":{}}}],["testing",{"_index":909,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{},"index.html":{}}}],["testingmodule",{"_index":934,"title":{"modules/TestingModule.html":{}},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{},"modules.html":{}}}],["testkey",{"_index":707,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["testlocalstorage",{"_index":666,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["tests",{"_index":678,"title":{},"body":{"injectables/LocalStorageService.html":{},"index.html":{}}}],["testvalue",{"_index":706,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["text",{"_index":325,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"index.html":{}}}],["theme",{"_index":270,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"interfaces/ISettingsState.html":{},"components/MessageComponent.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["themes",{"_index":1232,"title":{},"body":{"index.html":{}}}],["this.actions$.pipe",{"_index":443,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/SettingsEffects.html":{}}}],["this.activatedroute",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["this.appstate",{"_index":368,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.appstate$.pipe",{"_index":370,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.chat",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["this.defaultlanguage",{"_index":614,"title":{},"body":{"injectables/I18nService.html":{}}}],["this.emit(\"chat",{"_index":1098,"title":{},"body":{"injectables/SocketioService.html":{}}}],["this.format",{"_index":860,"title":{},"body":{"components/MessageComponent.html":{}}}],["this.fromevent(\"chat",{"_index":1087,"title":{},"body":{"injectables/SocketioService.html":{}}}],["this.fromonetimeevent(\"user",{"_index":1091,"title":{},"body":{"injectables/SocketioService.html":{}}}],["this.getitem(testkey",{"_index":712,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.i18nservice.init(environment.defaultlanguage",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["this.language",{"_index":616,"title":{},"body":{"injectables/I18nService.html":{}}}],["this.localstorageservice.setitem('messages",{"_index":456,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["this.localstorageservice.setitem('settings",{"_index":1046,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["this.log(console.error",{"_index":762,"title":{},"body":{"classes/Logger.html":{}}}],["this.log(console.info",{"_index":759,"title":{},"body":{"classes/Logger.html":{}}}],["this.log(console.log",{"_index":758,"title":{},"body":{"classes/Logger.html":{}}}],["this.log(console.warn",{"_index":761,"title":{},"body":{"classes/Logger.html":{}}}],["this.messagefield.nativeelement.focus",{"_index":383,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.messagefield.nativeelement.value",{"_index":385,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.messagesitems.changes.subscribe",{"_index":387,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.removeitem(testkey",{"_index":713,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.router.events.pipe(filter(event",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["this.scrollbarref.scrolltobottom(200",{"_index":388,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.setitem(testkey",{"_index":711,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.settings",{"_index":857,"title":{},"body":{"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["this.settings$.subscribe((settings",{"_index":859,"title":{},"body":{"components/MessageComponent.html":{}}}],["this.socket.chatreceived$.subscribe((m",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["this.socket.chatsend(msg",{"_index":448,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["this.socket.usercreated",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["this.source",{"_index":765,"title":{},"body":{"classes/Logger.html":{},"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["this.statesubject.asobservable",{"_index":929,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["this.statesubject.next(nextstate",{"_index":930,"title":{},"body":{"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["this.store",{"_index":369,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.store.dispatch(new",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"components/SettingsComponent.html":{}}}],["this.store.pipe",{"_index":462,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/SettingsEffects.html":{}}}],["this.store.pipe(select(selectchat",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectsettings",{"_index":858,"title":{},"body":{"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["this.store.select(selectchat).subscribe((chat",{"_index":384,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.supportedlanguages",{"_index":615,"title":{},"body":{"injectables/I18nService.html":{}}}],["this.supportedlanguages.find(supportedlanguage",{"_index":629,"title":{},"body":{"injectables/I18nService.html":{}}}],["this.titleservice.settitle(this.translateservice.instant(title",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translateservice.currentlang",{"_index":634,"title":{},"body":{"injectables/I18nService.html":{}}}],["this.translateservice.getbrowserculturelang",{"_index":619,"title":{},"body":{"injectables/I18nService.html":{}}}],["this.translateservice.use(language",{"_index":633,"title":{},"body":{"injectables/I18nService.html":{},"injectables/SettingsEffects.html":{}}}],["this.user",{"_index":375,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.usernamefiels.nativeelement.focus",{"_index":1008,"title":{},"body":{"components/SettingsComponent.html":{}}}],["through",{"_index":590,"title":{},"body":{"injectables/I18nService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["throw",{"_index":535,"title":{},"body":{"modules/CoreModule.html":{},"injectables/LocalStorageService.html":{}}}],["time",{"_index":391,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/Message.html":{},"injectables/SocketioService.html":{}}}],["title",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/ChatRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["titleservice",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["toggle",{"_index":246,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{}}}],["token",{"_index":693,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["token.charat(0).touppercase",{"_index":694,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["token.slice(1",{"_index":695,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["tolowercase",{"_index":690,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["tool",{"_index":1345,"title":{},"body":{"index.html":{}}}],["tools",{"_index":1343,"title":{},"body":{"index.html":{}}}],["top",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["toremove",{"_index":1060,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["toremove.length",{"_index":1063,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["transform",{"_index":845,"title":{},"body":{"components/MessageComponent.html":{}}}],["transition",{"_index":838,"title":{},"body":{"components/MessageComponent.html":{}}}],["transition(':enter",{"_index":844,"title":{},"body":{"components/MessageComponent.html":{}}}],["translate",{"_index":1018,"title":{},"body":{"components/SettingsComponent.html":{},"index.html":{}}}],["translate/core",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"injectables/I18nService.html":{},"injectables/MockStore.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/TestingModule.html":{},"dependencies.html":{}}}],["translatemodule",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"injectables/MockStore.html":{},"modules/SettingsModule.html":{},"modules/TestingModule.html":{}}}],["translatemodule.forroot",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["translateservice",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/I18nService.html":{},"injectables/SettingsEffects.html":{}}}],["translateservice.settranslation('ar",{"_index":612,"title":{},"body":{"injectables/I18nService.html":{}}}],["translateservice.settranslation('en",{"_index":611,"title":{},"body":{"injectables/I18nService.html":{}}}],["translation",{"_index":593,"title":{},"body":{"injectables/I18nService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["translations",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["translations/ar",{"_index":582,"title":{},"body":{"injectables/I18nService.html":{}}}],["translations/en",{"_index":579,"title":{},"body":{"injectables/I18nService.html":{}}}],["translations:extract",{"_index":597,"title":{},"body":{"injectables/I18nService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["trigger",{"_index":837,"title":{},"body":{"components/MessageComponent.html":{}}}],["trigger('items",{"_index":843,"title":{},"body":{"components/MessageComponent.html":{}}}],["true",{"_index":654,"title":{},"body":{"interfaces/ISettingsState.html":{},"classes/RouteReusableStrategy.html":{},"miscellaneous/variables.html":{}}}],["tslint",{"_index":1372,"title":{},"body":{"index.html":{}}}],["type",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"injectables/I18nService.html":{},"interfaces/IAppState.html":{},"interfaces/IChatState.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/RouteReusableStrategy.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SocketioService.html":{},"classes/UnreadCount.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1391,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":1351,"title":{},"body":{"index.html":{}}}],["unique",{"_index":658,"title":{},"body":{"interfaces/IUser.html":{},"index.html":{}}}],["unit",{"_index":1293,"title":{},"body":{"index.html":{}}}],["unread",{"_index":249,"title":{},"body":{"classes/BlinkTab.html":{},"components/ChatComponent.html":{},"interfaces/IChatState.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["unreadcount",{"_index":248,"title":{"classes/UnreadCount.html":{}},"body":{"classes/BlinkTab.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/UnreadCount.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["unreadcount(0",{"_index":381,"title":{},"body":{"components/ChatComponent.html":{}}}],["unreadcount(state.chat.unread",{"_index":466,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["update",{"_index":834,"title":{},"body":{"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["updatetheme",{"_index":1043,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["updating",{"_index":1380,"title":{},"body":{"index.html":{}}}],["url",{"_index":1083,"title":{},"body":{"injectables/SocketioService.html":{}}}],["us.json",{"_index":580,"title":{},"body":{"injectables/I18nService.html":{}}}],["usage",{"_index":1193,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["use",{"_index":557,"title":{},"body":{"injectables/I18nService.html":{},"injectables/SettingsEffects.html":{},"index.html":{}}}],["useclass",{"_index":531,"title":{},"body":{"modules/CoreModule.html":{},"injectables/MockStore.html":{},"modules/TestingModule.html":{}}}],["used",{"_index":433,"title":{},"body":{"injectables/ChatEffects.html":{},"modules/MaterialModule.html":{},"components/MessageComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SocketioService.html":{}}}],["user",{"_index":267,"title":{},"body":{"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"interfaces/Message.html":{},"classes/Reset.html":{},"classes/SetUserID.html":{},"injectables/SocketioService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user.interface",{"_index":821,"title":{},"body":{"interfaces/Message.html":{}}}],["usercreated",{"_index":1080,"title":{},"body":{"injectables/SocketioService.html":{}}}],["userid",{"_index":333,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":651,"title":{},"body":{"interfaces/ISettingsState.html":{},"interfaces/IUser.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["usernamefiels",{"_index":978,"title":{},"body":{"components/SettingsComponent.html":{}}}],["using",{"_index":600,"title":{},"body":{"injectables/I18nService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["utils",{"_index":1284,"title":{},"body":{"index.html":{}}}],["value",{"_index":234,"title":{},"body":{"classes/BlinkTab.html":{},"classes/ChangeClock.html":{},"classes/ChangeLanguage.html":{},"classes/ChangeName.html":{},"classes/ChangeSendOnEnter.html":{},"classes/ChangeTheme.html":{},"components/ChatComponent.html":{},"injectables/ChatEffects.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"injectables/MockStore.html":{},"classes/Reset.html":{},"classes/ReveiveMsg.html":{},"classes/SaveCurrentMsg.html":{},"classes/SendMessage.html":{},"classes/SetUserID.html":{},"injectables/SettingsEffects.html":{},"injectables/SocketioService.html":{},"classes/UnreadCount.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1278,"title":{},"body":{"index.html":{}}}],["var",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["variable",{"_index":1106,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1282,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["various",{"_index":1279,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":1039,"title":{},"body":{"components/SettingsComponent.html":{}}}],["via",{"_index":1307,"title":{},"body":{"index.html":{}}}],["view",{"_index":986,"title":{},"body":{"components/SettingsComponent.html":{}}}],["viewchild",{"_index":356,"title":{},"body":{"components/ChatComponent.html":{},"components/SettingsComponent.html":{}}}],["viewchild(\"messagetext",{"_index":367,"title":{},"body":{"components/ChatComponent.html":{}}}],["viewchild(\"username",{"_index":1007,"title":{},"body":{"components/SettingsComponent.html":{}}}],["viewchild('messagetext",{"_index":345,"title":{},"body":{"components/ChatComponent.html":{}}}],["viewchild('username",{"_index":1002,"title":{},"body":{"components/SettingsComponent.html":{}}}],["viewchild(ngscrollbar",{"_index":352,"title":{},"body":{"components/ChatComponent.html":{}}}],["viewchildren",{"_index":357,"title":{},"body":{"components/ChatComponent.html":{}}}],["viewchildren('allmessagesitems",{"_index":348,"title":{},"body":{"components/ChatComponent.html":{}}}],["void",{"_index":317,"title":{},"body":{"components/ChatComponent.html":{},"injectables/I18nService.html":{},"injectables/LocalStorageService.html":{},"classes/Logger.html":{},"components/MessageComponent.html":{},"injectables/MockStore.html":{},"classes/RouteReusableStrategy.html":{},"components/SettingsComponent.html":{},"injectables/SocketioService.html":{}}}],["want",{"_index":1199,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["warn",{"_index":720,"title":{},"body":{"classes/Logger.html":{}}}],["warn(...objects",{"_index":752,"title":{},"body":{"classes/Logger.html":{}}}],["warning",{"_index":754,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["watch",{"_index":1309,"title":{},"body":{"index.html":{}}}],["web",{"_index":1264,"title":{},"body":{"index.html":{}}}],["webpack",{"_index":1359,"title":{},"body":{"index.html":{}}}],["what's",{"_index":1349,"title":{},"body":{"index.html":{}}}],["width",{"_index":870,"title":{},"body":{"components/MessageComponent.html":{},"components/SettingsComponent.html":{}}}],["withlatestfrom",{"_index":472,"title":{},"body":{"injectables/ChatEffects.html":{},"injectables/SettingsEffects.html":{}}}],["withlatestfrom(this.store.pipe(select(selectchat",{"_index":454,"title":{},"body":{"injectables/ChatEffects.html":{}}}],["withlatestfrom(this.store.pipe(select(selectsettings",{"_index":1045,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["without",{"_index":626,"title":{},"body":{"injectables/I18nService.html":{}}}],["workaround",{"_index":943,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["worker",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["worker.js",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["works",{"_index":737,"title":{},"body":{"classes/Logger.html":{}}}],["written",{"_index":680,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["yes",{"_index":723,"title":{},"body":{"classes/Logger.html":{}}}],["z",{"_index":878,"title":{},"body":{"components/MessageComponent.html":{}}}],["zone.js",{"_index":1166,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/CoreModule.html":{},"modules/SettingsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chat$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, activatedRoute: ActivatedRoute, titleService: Title, translateService: TranslateService, i18nService: I18nService, socket: SocketioService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18nService\n                                                  \n                                                        \n                                                                        I18nService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        socket\n                                                  \n                                                        \n                                                                        SocketioService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chat$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { Router, NavigationEnd, ActivatedRoute } from \"@angular/router\";\nimport { Title } from \"@angular/platform-browser\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { merge, Observable } from \"rxjs\";\nimport { filter, map, mergeMap } from \"rxjs/operators\";\nimport { SocketioService } from '@app/core/services/socketio/socketio.service';\n\nimport { environment } from \"@env/environment\";\nimport { Logger, I18nService } from \"@app/core\";\nimport { Store, select } from \"@ngrx/store\";\nimport { IAppState } from \"./core/store/state/app.state\";\nimport { ReveiveMsg } from \"./core/store/actions/chat.actions\";\nimport { Message } from \"./core/models/message.interface\";\nimport { SetUserID } from \"./core/store/actions/settings.actions\";\nimport { IChatState } from \"./core/store/state/chat.state\";\nimport { selectChat } from \"./core/store/selectors/chat.selector\";\n\nconst log = new Logger(\"App\");\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"]\n})\nexport class AppComponent implements OnInit {\n  chat$: Observable;\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private titleService: Title,\n    private translateService: TranslateService,\n    private i18nService: I18nService,\n    private socket: SocketioService,\n    private store: Store\n  ) {}\n\n  async ngOnInit() {\n    // Setup logger\n    if (environment.production) {\n      Logger.enableProductionMode();\n    }\n    this.chat$ = this.store.pipe(select(selectChat));\n    this.socket.chatReceived$.subscribe((m: Message)=>{\n      this.store.dispatch(new ReveiveMsg(m));\n    });\n    const id = await this.socket.userCreated$;\n    this.store.dispatch(new SetUserID(id));\n\n    // Setup translations\n    this.i18nService.init(environment.defaultLanguage, environment.supportedLanguages);\n\n    const onNavigationEnd = this.router.events.pipe(filter(event => event instanceof NavigationEnd));\n\n    // Change page title on navigation or language change, based on route data\n    merge(this.translateService.onLangChange, onNavigationEnd)\n      .pipe(\n        map(() => {\n          let route = this.activatedRoute;\n          while (route.firstChild) {\n            route = route.firstChild;\n          }\n          return route;\n        }),\n        filter(route => route.outlet === \"primary\"),\n        mergeMap(route => route.data)\n      )\n      .subscribe(event => {\n        const title = event[\"title\"];\n        if (title) {\n          this.titleService.setTitle(this.translateService.instant(title));\n        }\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Chat\n    \n    \n      Settings\n    \n\n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .language-btn {\n  position: fixed;\n  top: 0;\n  right: 0;\n}\n\nnav {\n  color: #fff\n}\n.blink{\n  animation: blink 1s linear infinite;\n}\n\n@keyframes blink{\n  0%{opacity: 0;}\n  50%{opacity: .5;}\n  100%{opacity: 1;}\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Chat              Settings    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nChatModule\n\nChatModule\n\nAppModule -->\n\nChatModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ChatModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            SettingsModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material.module';\n\nimport { environment } from '@env/environment';\nimport { CoreModule } from '@app/core';\nimport { ChatModule } from './chat/chat.module';\nimport { SettingsModule } from './settings/settings.module';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { MatBadgeModule } from '@angular/material';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    ServiceWorkerModule.register('./ngsw-worker.js', { enabled: environment.production }),\n    FormsModule,\n    TranslateModule.forRoot(),\n    BrowserAnimationsModule,\n    MaterialModule,\n    MatBadgeModule,\n    CoreModule,\n    ChatModule,\n    SettingsModule,\n    AppRoutingModule\n  ],\n  declarations: [AppComponent],\n  providers: [\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  // Fallback when no prior route is matched\n  { path: '**', redirectTo: '', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: []\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BlinkTab.html":{"url":"classes/BlinkTab.html","title":"class - BlinkTab","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BlinkTab\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/actions/chat.actions.ts\n        \n\n            \n                Description\n            \n            \n                build action BlinkTab\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/actions/chat.actions.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/chat.actions.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EChatActions.BlinkTab\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/chat.actions.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from \"@ngrx/store\";\nimport { Message } from \"@app/core/models/message.interface\";\n/**\n* build enum for chat actions\n*/\nexport enum EChatActions {\n  ReveiveMsg = \"[Chat] Receive Message\",\n  SendMessage = \"[Chat] Send Message\",\n  SaveCurrentMsg = \"[Chat] Save current message\",\n  BlinkTab = \"[Chat] Toggle Tab Blink\",\n  UnreadCount = \"[Chat] Unread Messages Counted\"\n}\n/**\n* build action ReveiveMsg\n*/\nexport class ReveiveMsg implements Action {\n  public readonly type = EChatActions.ReveiveMsg;\n  constructor(public payload: Message) {}\n}\n/**\n* build action SaveCurrentMsg\n*/\nexport class SaveCurrentMsg implements Action {\n  public readonly type = EChatActions.SaveCurrentMsg;\n  constructor(public payload: string) {}\n}\n/**\n* build action SendMessage\n*/\nexport class SendMessage implements Action {\n  public readonly type = EChatActions.SendMessage;\n  constructor(public payload: Message) {}\n}\n/**\n* build action BlinkTab\n*/\nexport class BlinkTab implements Action {\n  public readonly type = EChatActions.BlinkTab;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action UnreadCount\n*/\nexport class UnreadCount implements Action {\n  public readonly type = EChatActions.UnreadCount;\n  constructor(public payload: number) {}\n}\n/**\n* export ChatActions\n*/\nexport type ChatActions = ReveiveMsg | SendMessage | SaveCurrentMsg | BlinkTab | UnreadCount;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeClock.html":{"url":"classes/ChangeClock.html","title":"class - ChangeClock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeClock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/actions/settings.actions.ts\n        \n\n            \n                Description\n            \n            \n                build action ChangeClock\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/actions/settings.actions.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/settings.actions.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ESettingsActions.ChangeClock\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/settings.actions.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from \"@ngrx/store\";\n/**\n* build enum for settings actions\n*/\nexport enum ESettingsActions {\n  ChangeName = \"[Settings] Change user name\",\n  SetUserID = \"[Settings] Set User ID\",\n  ChangeTheme = \"[Settings] Change theme\",\n  ChangeClock = \"[Settings] Change clock display\",\n  ChangeSendOnEnter = \"[Settings] Toggle sending message on ctrl + enter\",\n  ChangeLanguage = \"[Settings] Change language\",\n  Reset = \"[Settings] Reset Settings\"\n}\n/**\n* build action ChangeName\n*/\nexport class ChangeName implements Action {\n  public readonly type = ESettingsActions.ChangeName;\n  constructor(public payload: string) {}\n}\n/**\n* build action SetUserID\n*/\nexport class SetUserID implements Action {\n  public readonly type = ESettingsActions.SetUserID;\n  constructor(public payload: number) {}\n}\n/**\n* build action ChangeTheme\n*/\nexport class ChangeTheme implements Action {\n  public readonly type = ESettingsActions.ChangeTheme;\n  constructor(public payload: string) {}\n}\n/**\n* build action ChangeClock\n*/\nexport class ChangeClock implements Action {\n  public readonly type = ESettingsActions.ChangeClock;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action ChangeSendOnEnter\n*/\nexport class ChangeSendOnEnter implements Action {\n  public readonly type = ESettingsActions.ChangeSendOnEnter;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action ChangeLanguage\n*/\nexport class ChangeLanguage implements Action {\n  public readonly type = ESettingsActions.ChangeLanguage;\n  constructor(public payload: string) {}\n}\n/**\n* build action Reset\n*/\nexport class Reset implements Action {\n  public readonly type = ESettingsActions.Reset;\n}\n/**\n* export SettingsActions\n*/\nexport type SettingsActions = ChangeName | SetUserID | ChangeTheme | ChangeClock | ChangeSendOnEnter | ChangeLanguage | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeLanguage.html":{"url":"classes/ChangeLanguage.html","title":"class - ChangeLanguage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeLanguage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/actions/settings.actions.ts\n        \n\n            \n                Description\n            \n            \n                build action ChangeLanguage\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/actions/settings.actions.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/settings.actions.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ESettingsActions.ChangeLanguage\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/settings.actions.ts:53\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from \"@ngrx/store\";\n/**\n* build enum for settings actions\n*/\nexport enum ESettingsActions {\n  ChangeName = \"[Settings] Change user name\",\n  SetUserID = \"[Settings] Set User ID\",\n  ChangeTheme = \"[Settings] Change theme\",\n  ChangeClock = \"[Settings] Change clock display\",\n  ChangeSendOnEnter = \"[Settings] Toggle sending message on ctrl + enter\",\n  ChangeLanguage = \"[Settings] Change language\",\n  Reset = \"[Settings] Reset Settings\"\n}\n/**\n* build action ChangeName\n*/\nexport class ChangeName implements Action {\n  public readonly type = ESettingsActions.ChangeName;\n  constructor(public payload: string) {}\n}\n/**\n* build action SetUserID\n*/\nexport class SetUserID implements Action {\n  public readonly type = ESettingsActions.SetUserID;\n  constructor(public payload: number) {}\n}\n/**\n* build action ChangeTheme\n*/\nexport class ChangeTheme implements Action {\n  public readonly type = ESettingsActions.ChangeTheme;\n  constructor(public payload: string) {}\n}\n/**\n* build action ChangeClock\n*/\nexport class ChangeClock implements Action {\n  public readonly type = ESettingsActions.ChangeClock;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action ChangeSendOnEnter\n*/\nexport class ChangeSendOnEnter implements Action {\n  public readonly type = ESettingsActions.ChangeSendOnEnter;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action ChangeLanguage\n*/\nexport class ChangeLanguage implements Action {\n  public readonly type = ESettingsActions.ChangeLanguage;\n  constructor(public payload: string) {}\n}\n/**\n* build action Reset\n*/\nexport class Reset implements Action {\n  public readonly type = ESettingsActions.Reset;\n}\n/**\n* export SettingsActions\n*/\nexport type SettingsActions = ChangeName | SetUserID | ChangeTheme | ChangeClock | ChangeSendOnEnter | ChangeLanguage | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeName.html":{"url":"classes/ChangeName.html","title":"class - ChangeName","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeName\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/actions/settings.actions.ts\n        \n\n            \n                Description\n            \n            \n                build action ChangeName\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/actions/settings.actions.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/settings.actions.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ESettingsActions.ChangeName\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/settings.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from \"@ngrx/store\";\n/**\n* build enum for settings actions\n*/\nexport enum ESettingsActions {\n  ChangeName = \"[Settings] Change user name\",\n  SetUserID = \"[Settings] Set User ID\",\n  ChangeTheme = \"[Settings] Change theme\",\n  ChangeClock = \"[Settings] Change clock display\",\n  ChangeSendOnEnter = \"[Settings] Toggle sending message on ctrl + enter\",\n  ChangeLanguage = \"[Settings] Change language\",\n  Reset = \"[Settings] Reset Settings\"\n}\n/**\n* build action ChangeName\n*/\nexport class ChangeName implements Action {\n  public readonly type = ESettingsActions.ChangeName;\n  constructor(public payload: string) {}\n}\n/**\n* build action SetUserID\n*/\nexport class SetUserID implements Action {\n  public readonly type = ESettingsActions.SetUserID;\n  constructor(public payload: number) {}\n}\n/**\n* build action ChangeTheme\n*/\nexport class ChangeTheme implements Action {\n  public readonly type = ESettingsActions.ChangeTheme;\n  constructor(public payload: string) {}\n}\n/**\n* build action ChangeClock\n*/\nexport class ChangeClock implements Action {\n  public readonly type = ESettingsActions.ChangeClock;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action ChangeSendOnEnter\n*/\nexport class ChangeSendOnEnter implements Action {\n  public readonly type = ESettingsActions.ChangeSendOnEnter;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action ChangeLanguage\n*/\nexport class ChangeLanguage implements Action {\n  public readonly type = ESettingsActions.ChangeLanguage;\n  constructor(public payload: string) {}\n}\n/**\n* build action Reset\n*/\nexport class Reset implements Action {\n  public readonly type = ESettingsActions.Reset;\n}\n/**\n* export SettingsActions\n*/\nexport type SettingsActions = ChangeName | SetUserID | ChangeTheme | ChangeClock | ChangeSendOnEnter | ChangeLanguage | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeSendOnEnter.html":{"url":"classes/ChangeSendOnEnter.html","title":"class - ChangeSendOnEnter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeSendOnEnter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/actions/settings.actions.ts\n        \n\n            \n                Description\n            \n            \n                build action ChangeSendOnEnter\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/actions/settings.actions.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/settings.actions.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ESettingsActions.ChangeSendOnEnter\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/settings.actions.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from \"@ngrx/store\";\n/**\n* build enum for settings actions\n*/\nexport enum ESettingsActions {\n  ChangeName = \"[Settings] Change user name\",\n  SetUserID = \"[Settings] Set User ID\",\n  ChangeTheme = \"[Settings] Change theme\",\n  ChangeClock = \"[Settings] Change clock display\",\n  ChangeSendOnEnter = \"[Settings] Toggle sending message on ctrl + enter\",\n  ChangeLanguage = \"[Settings] Change language\",\n  Reset = \"[Settings] Reset Settings\"\n}\n/**\n* build action ChangeName\n*/\nexport class ChangeName implements Action {\n  public readonly type = ESettingsActions.ChangeName;\n  constructor(public payload: string) {}\n}\n/**\n* build action SetUserID\n*/\nexport class SetUserID implements Action {\n  public readonly type = ESettingsActions.SetUserID;\n  constructor(public payload: number) {}\n}\n/**\n* build action ChangeTheme\n*/\nexport class ChangeTheme implements Action {\n  public readonly type = ESettingsActions.ChangeTheme;\n  constructor(public payload: string) {}\n}\n/**\n* build action ChangeClock\n*/\nexport class ChangeClock implements Action {\n  public readonly type = ESettingsActions.ChangeClock;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action ChangeSendOnEnter\n*/\nexport class ChangeSendOnEnter implements Action {\n  public readonly type = ESettingsActions.ChangeSendOnEnter;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action ChangeLanguage\n*/\nexport class ChangeLanguage implements Action {\n  public readonly type = ESettingsActions.ChangeLanguage;\n  constructor(public payload: string) {}\n}\n/**\n* build action Reset\n*/\nexport class Reset implements Action {\n  public readonly type = ESettingsActions.Reset;\n}\n/**\n* export SettingsActions\n*/\nexport type SettingsActions = ChangeName | SetUserID | ChangeTheme | ChangeClock | ChangeSendOnEnter | ChangeLanguage | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeTheme.html":{"url":"classes/ChangeTheme.html","title":"class - ChangeTheme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeTheme\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/actions/settings.actions.ts\n        \n\n            \n                Description\n            \n            \n                build action ChangeTheme\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/actions/settings.actions.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/settings.actions.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ESettingsActions.ChangeTheme\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/settings.actions.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from \"@ngrx/store\";\n/**\n* build enum for settings actions\n*/\nexport enum ESettingsActions {\n  ChangeName = \"[Settings] Change user name\",\n  SetUserID = \"[Settings] Set User ID\",\n  ChangeTheme = \"[Settings] Change theme\",\n  ChangeClock = \"[Settings] Change clock display\",\n  ChangeSendOnEnter = \"[Settings] Toggle sending message on ctrl + enter\",\n  ChangeLanguage = \"[Settings] Change language\",\n  Reset = \"[Settings] Reset Settings\"\n}\n/**\n* build action ChangeName\n*/\nexport class ChangeName implements Action {\n  public readonly type = ESettingsActions.ChangeName;\n  constructor(public payload: string) {}\n}\n/**\n* build action SetUserID\n*/\nexport class SetUserID implements Action {\n  public readonly type = ESettingsActions.SetUserID;\n  constructor(public payload: number) {}\n}\n/**\n* build action ChangeTheme\n*/\nexport class ChangeTheme implements Action {\n  public readonly type = ESettingsActions.ChangeTheme;\n  constructor(public payload: string) {}\n}\n/**\n* build action ChangeClock\n*/\nexport class ChangeClock implements Action {\n  public readonly type = ESettingsActions.ChangeClock;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action ChangeSendOnEnter\n*/\nexport class ChangeSendOnEnter implements Action {\n  public readonly type = ESettingsActions.ChangeSendOnEnter;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action ChangeLanguage\n*/\nexport class ChangeLanguage implements Action {\n  public readonly type = ESettingsActions.ChangeLanguage;\n  constructor(public payload: string) {}\n}\n/**\n* build action Reset\n*/\nexport class Reset implements Action {\n  public readonly type = ESettingsActions.Reset;\n}\n/**\n* export SettingsActions\n*/\nexport type SettingsActions = ChangeName | SetUserID | ChangeTheme | ChangeClock | ChangeSendOnEnter | ChangeLanguage | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatComponent.html":{"url":"components/ChatComponent.html","title":"component - ChatComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChatComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/chat/chat.component.ts\n\n\n    \n        Description\n    \n    \n        ChatComponent is a container for messages and chat input with it's options\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chat\n            \n\n            \n                styleUrls\n                ./chat.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./chat.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appstate$\n                            \n                            \n                                emojiShow\n                            \n                            \n                                messageField\n                            \n                            \n                                messagesItems\n                            \n                            \n                                scrollbarRef\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEmoji\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/chat/chat.component.ts:46\n                            \n                        \n\n                \n                    \n                            inject Store\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addEmoji\n                        \n                        \n                    \n                \n            \n            \n                \naddEmoji(ev: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat/chat.component.ts:114\n                \n            \n\n\n            \n                \n                    Add emoji to the input after selection\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ev\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat/chat.component.ts:79\n                \n            \n\n\n            \n                \n                    remove blick animation, reset the unread message counter and scroll messages to bottom\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat/chat.component.ts:106\n                \n            \n\n\n            \n                \n                    save current text in the input before leave the chat page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat/chat.component.ts:56\n                \n            \n\n\n            \n                \n                    declate state, subscribe to changes in userid, reset blink animation, reset unread message counter\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsendMessage(ev: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat/chat.component.ts:93\n                \n            \n\n\n            \n                \n                    build message object the dispatch the store with SendMessage action\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ev\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appstate$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chat/chat.component.ts:38\n                            \n                        \n\n                \n                    \n                        reference to State\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emojiShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chat/chat.component.ts:46\n                            \n                        \n\n                \n                    \n                        Boolean to show/hide emoji list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messageField\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('messageText')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/chat/chat.component.ts:26\n                            \n                        \n\n                \n                    \n                        reference to chat input element\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messagesItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('allMessagesItems')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/chat/chat.component.ts:34\n                            \n                        \n\n                \n                    \n                        reference to messages elements\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scrollbarRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgScrollbar\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(NgScrollbar)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/chat/chat.component.ts:30\n                            \n                        \n\n                \n                    \n                        reference to messages container element\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chat/chat.component.ts:42\n                            \n                        \n\n                \n                    \n                        reference to User object\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ElementRef, ViewChild, QueryList, ViewChildren } from '@angular/core';\nimport { NgScrollbar } from 'ngx-scrollbar';\nimport { MatListItem } from '@angular/material';\nimport { Message } from '@app/core/models/message.interface';\nimport { Store, select } from '@ngrx/store';\nimport { IAppState } from '@app/core/store/state/app.state';\nimport { Observable } from 'rxjs';\nimport { SendMessage, SaveCurrentMsg, BlinkTab, UnreadCount } from \"@app/core/store/actions/chat.actions\";\nimport { selectChat } from '@app/core/store/selectors/chat.selector';\nimport { map, first } from 'rxjs/operators';\nimport { IUser } from '@app/core/models/user.interface';\nimport { selectSettings } from '@app/core/store/selectors/settings.selector';\n\n/**\n* ChatComponent is a container for messages and chat input with it's options\n*/\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.scss']\n})\nexport class ChatComponent implements OnInit {\n  /**\n  * reference to chat input element\n  */\n  @ViewChild(\"messageText\") messageField: ElementRef;\n  /**\n  * reference to messages container element\n  */\n  @ViewChild(NgScrollbar) scrollbarRef: NgScrollbar;\n  /**\n  * reference to messages elements\n  */\n  @ViewChildren('allMessagesItems') messagesItems: QueryList;\n  /**\n  * reference to State\n  */\n  appstate$: Observable;\n  /**\n  * reference to User object\n  */\n  user: IUser;\n  /**\n  * Boolean to show/hide emoji list\n  */\n  emojiShow = false;\n  /**\n  * inject Store\n  */\n  constructor(\n    private store: Store\n    ) { }\n  /**\n  * declate state, subscribe to changes in userid, reset blink animation, reset unread message counter\n  */\n  ngOnInit() {\n    this.appstate$ = this.store;\n    this.appstate$.pipe(\n      select(selectSettings),\n      map(settings => settings.user)\n    ).subscribe(user =>{\n        this.user = user;\n    });\n    this.appstate$.pipe(\n      select(selectChat),\n      first()\n      ).subscribe(chat => {\n      if(chat.blink){\n        this.store.dispatch(new BlinkTab(false));\n      }\n      if(chat.unread) {\n        this.store.dispatch(new UnreadCount(0));\n      }\n    });\n  }\n  /**\n  * remove blick animation, reset the unread message counter and scroll messages to bottom\n  */\n  ngAfterViewInit(){\n    setTimeout(() => {\n      this.messageField.nativeElement.focus();\n      this.store.select(selectChat).subscribe((chat)=>{\n        this.messageField.nativeElement.value = chat.currentMessage;\n      });\n      this.messagesItems.changes.subscribe(() => {\n        this.scrollbarRef.scrollToBottom(200);\n      });\n    });\n  }\n  /**\n  * build message object the dispatch the store with SendMessage action\n  */\n  sendMessage(ev: string){\n    if(ev){\n      const msg = {\n        user: this.user,\n        time: new Date(),\n        message: ev\n      }\n      this.store.dispatch(new SendMessage(msg));\n    }\n  }\n  /**\n  * save current text in the input before leave the chat page\n  */\n  ngOnDestroy(){\n    if(this.messageField.nativeElement.value) {\n      this.store.dispatch(new SaveCurrentMsg(this.messageField.nativeElement.value));\n    }\n  }\n  /**\n  * Add emoji to the input after selection\n  */\n  addEmoji(ev: any) {\n    this.messageField.nativeElement.value += ' ' + ev.emoji.native + ' ';\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        \n        \n          \n            sentiment_satisfied_alt\n            \n              send\n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./chat.component.scss\n                \n                .no-padding {\n  padding: 0;\n}\nng-scrollbar {\n  height: calc( 100vh - 106px );\n}\n.chat-input {\n    margin: 0 0 -16px;\n    input {\n        border: none;\n        outline: none;\n        flex: 1;\n        padding: 0 12px;\n        &:focus {\n            outline: none;\n        }\n    }\n}\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard {\n  border-radius: 0;\n}\nemoji-mart {\n  position: absolute;\n  bottom: 48px;\n  right: 40px;\n}\n:host-context([dir=rtl])  {\n  emoji-mart {\n    right: auto;\n    left: 40px;\n  }\n}\n:host-context(.dark-theme) .chat-input input {\n  background: #424242;\n  color: #fff;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                      sentiment_satisfied_alt                          send                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChatComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChatEffects.html":{"url":"injectables/ChatEffects.html","title":"injectable - ChatEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ChatEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/effects/chat.effects.ts\n        \n\n            \n                Description\n            \n            \n                ChatEffects class used to attach side effects for store chat actions\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addMessage$\n                            \n                            \n                                persistSettings\n                            \n                            \n                                receiveMessage$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, store: Store, localStorageService: LocalStorageService, socket: SocketioService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/effects/chat.effects.ts:22\n                            \n                        \n\n                \n                    \n                            inject  Actions, Store, LocalStorageService, SocketioService\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        socket\n                                                  \n                                                        \n                                                                        SocketioService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addMessage$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.actions$.pipe(\n    ofType(EChatActions.SendMessage),\n    map((action: SendMessage) => action.payload),\n    tap(msg => this.socket.chatSend(msg))\n  )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/effects/chat.effects.ts:51\n                            \n                        \n\n                \n                    \n                        attach SendMessage to server event with each store dispatch SendMessage\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            persistSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.actions$.pipe(\n    ofType(\n      EChatActions.SaveCurrentMsg,\n      EChatActions.BlinkTab,\n      EChatActions.UnreadCount\n    ),\n    withLatestFrom(this.store.pipe(select(selectChat))),\n    tap(([action, chat]) =>\n      this.localStorageService.setItem('MESSAGES', chat)\n    )\n  )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/effects/chat.effects.ts:36\n                            \n                        \n\n                \n                    \n                        attach setitem to localstorage with each action in EChatActions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveMessage$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.actions$.pipe(\n    ofType(EChatActions.ReveiveMsg),\n    map((action: ReveiveMsg) => action.payload),\n    tap(() => {\n      this.store.pipe(\n        first()\n      ).subscribe((state)=>{\n        if(state.router.state.url !== '/chat'){\n          this.store.dispatch(new BlinkTab(true));\n          this.store.dispatch(new UnreadCount(state.chat.unread + 1));\n        }\n      })\n    })\n  )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/effects/chat.effects.ts:61\n                            \n                        \n\n                \n                    \n                        dispatch new BlinkTab(true) and new UnreadCount(state.chat.unread + 1) when ReveiveMsg while the user in another page \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { LocalStorageService } from \"@app/core\";\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\nimport {\n  ChatActions,\n  SendMessage,\n  EChatActions,\n  ReveiveMsg,\n  BlinkTab,\n  UnreadCount\n} from \"@app/core/store/actions/chat.actions\";\n\nimport { SocketioService } from \"@app/core/services/socketio/socketio.service\";\nimport { IAppState } from \"../state/app.state\";\nimport { Store, select } from \"@ngrx/store\";\nimport { map, tap, first, withLatestFrom } from \"rxjs/operators\";\nimport { selectChat } from \"../selectors/chat.selector\";\n/**\n* ChatEffects class used to attach side effects for store chat actions\n*/\n@Injectable()\nexport class ChatEffects {\n  /**\n  * inject  Actions, Store, LocalStorageService, SocketioService\n  */\n  constructor(\n    private actions$: Actions,\n    private store: Store,\n    private localStorageService: LocalStorageService,\n    private socket: SocketioService\n  ) {}\n  /**\n  * attach setitem to localstorage with each action in EChatActions\n  */\n  @Effect({ dispatch: false })\n  persistSettings = this.actions$.pipe(\n    ofType(\n      EChatActions.SaveCurrentMsg,\n      EChatActions.BlinkTab,\n      EChatActions.UnreadCount\n    ),\n    withLatestFrom(this.store.pipe(select(selectChat))),\n    tap(([action, chat]) =>\n      this.localStorageService.setItem('MESSAGES', chat)\n    )\n  );\n  /**\n  * attach SendMessage to server event with each store dispatch SendMessage\n  */\n  @Effect({ dispatch: false })\n  addMessage$ = this.actions$.pipe(\n    ofType(EChatActions.SendMessage),\n    map((action: SendMessage) => action.payload),\n    tap(msg => this.socket.chatSend(msg))\n  );\n\n  /**\n  * dispatch new BlinkTab(true) and new UnreadCount(state.chat.unread + 1) when ReveiveMsg while the user in another page \n  */\n  @Effect({ dispatch: false })\n  receiveMessage$ = this.actions$.pipe(\n    ofType(EChatActions.ReveiveMsg),\n    map((action: ReveiveMsg) => action.payload),\n    tap(() => {\n      this.store.pipe(\n        first()\n      ).subscribe((state)=>{\n        if(state.router.state.url !== '/chat'){\n          this.store.dispatch(new BlinkTab(true));\n          this.store.dispatch(new UnreadCount(state.chat.unread + 1));\n        }\n      })\n    })\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChatModule.html":{"url":"modules/ChatModule.html","title":"module - ChatModule","body":"\n                   \n\n\n\n\n    Modules\n    ChatModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ChatModule\n\n\n\ncluster_ChatModule_declarations\n\n\n\ncluster_ChatModule_imports\n\n\n\ncluster_ChatModule_providers\n\n\n\n\nChatComponent\n\nChatComponent\n\n\n\nChatModule\n\nChatModule\n\nChatModule -->\n\nChatComponent->ChatModule\n\n\n\n\n\nMessageComponent\n\nMessageComponent\n\nChatModule -->\n\nMessageComponent->ChatModule\n\n\n\n\n\nChatRoutingModule\n\nChatRoutingModule\n\nChatModule -->\n\nChatRoutingModule->ChatModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nChatModule -->\n\nCoreModule->ChatModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nChatModule -->\n\nMaterialModule->ChatModule\n\n\n\n\n\nSocketioService\n\nSocketioService\n\nChatModule -->\n\nSocketioService->ChatModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/chat/chat.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ChatComponent\n                        \n                        \n                            MessageComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            SocketioService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ChatRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { TranslateModule } from \"@ngx-translate/core\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { FormsModule } from \"@angular/forms\";\nimport { PickerModule } from '@ctrl/ngx-emoji-mart'\n\nimport { CoreModule } from \"@app/core\";\nimport { MaterialModule } from \"@app/material.module\";\nimport { NgScrollbarModule } from \"ngx-scrollbar\";\nimport { ChatRoutingModule } from \"./chat-routing.module\";\nimport { ChatComponent } from \"./chat.component\";\nimport { SocketioService } from \"@app/core/services/socketio/socketio.service\";\nimport { MessageComponent } from \"./message/message.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslateModule,\n    FormsModule,\n    CoreModule,\n    FlexLayoutModule,\n    MaterialModule,\n    NgScrollbarModule,\n    PickerModule,\n    ChatRoutingModule\n  ],\n  declarations: [ChatComponent, MessageComponent],\n  providers: [SocketioService]\n})\nexport class ChatModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChatRoutingModule.html":{"url":"modules/ChatRoutingModule.html","title":"module - ChatRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ChatRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/chat/chat-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { extract } from \"@app/core\";\nimport { ChatComponent } from \"./chat.component\";\n\nconst routes: Routes = [\n  { path: \"\", redirectTo: \"/chat\", pathMatch: \"full\" },\n  { path: \"chat\", component: ChatComponent, data: { title: \"extract(\\\"Chat\\\")\" } }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: []\n})\nexport class ChatRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_providers\n\n\n\n\n!environment\n\n!environment\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\n!environment->CoreModule\n\n\n\n\n\nI18nService\n\nI18nService\n\nCoreModule -->\n\nI18nService->CoreModule\n\n\n\n\n\nLocalStorageService\n\nLocalStorageService\n\nCoreModule -->\n\nLocalStorageService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            I18nService\n                        \n                        \n                            LocalStorageService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            !environment\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, Optional, SkipSelf } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { HttpClient, HttpClientModule } from \"@angular/common/http\";\nimport { RouteReuseStrategy, RouterModule } from \"@angular/router\";\nimport { TranslateModule } from \"@ngx-translate/core\";\nimport { RouteReusableStrategy } from \"./route-reusable-strategy\";\nimport { I18nService } from \"./i18n.service\";\nimport { LocalStorageService } from \"./services/local-storage/local-storage.service\";\nimport { environment } from \"@env/environment\";\n\nimport { StoreModule } from \"@ngrx/store\";\nimport { StoreDevtoolsModule } from \"@ngrx/store-devtools\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { StoreRouterConnectingModule } from \"@ngrx/router-store\";\nimport {\n  appReducers,\n  metaReducers\n} from \"@app/core/store/reducers/app.reducers\";\nimport { SettingsEffects } from \"@app/core/store/effects/settings.effects\";\nimport { ChatEffects } from \"@app/core/store/effects/chat.effects\";\nimport { SocketIoModule } from \"ngx-socket-io\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    TranslateModule,\n    StoreModule.forRoot(appReducers, { metaReducers }),\n    EffectsModule.forRoot([SettingsEffects, ChatEffects]),\n    StoreRouterConnectingModule.forRoot({ stateKey: \"router\" }),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n    SocketIoModule,\n    RouterModule\n  ],\n  providers: [\n    I18nService,\n    {\n      provide: RouteReuseStrategy,\n      useClass: RouteReusableStrategy\n    },\n    LocalStorageService\n  ]\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    // Import guard\n    if (parentModule) {\n      throw new Error(\n        `${parentModule} has already been loaded. Import Core module in the AppModule only.`\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/I18nService.html":{"url":"injectables/I18nService.html","title":"injectable - I18nService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  I18nService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/i18n.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultLanguage\n                            \n                            \n                                supportedLanguages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    language\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/i18n.service.ts:36\n                            \n                        \n\n                \n                    \n                            inject TranslateService\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            init\n                        \n                        \n                    \n                \n            \n            \n                \ninit(defaultLanguage: string, supportedLanguages: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/i18n.service.ts:52\n                \n            \n\n\n            \n                \n                    Initializes i18n for the application.\nLoads language from local storage if present, or sets default language.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    defaultLanguage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The default language to use.\n\n                                    \n                                \n                                \n                                    supportedLanguages\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The list of supported languages.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultLanguage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/i18n.service.ts:32\n                            \n                        \n\n                \n                    \n                        string refrence to system default language\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            supportedLanguages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/i18n.service.ts:36\n                            \n                        \n\n                \n                    \n                        string refrence to system supported languages\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        language\n                    \n                \n\n                \n                    \n                        getlanguage()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/i18n.service.ts:88\n                                \n                            \n                    \n                        \n                                Gets the current language.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setlanguage(language: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/i18n.service.ts:64\n                                \n                            \n                    \n                        \n                                Sets the current language.\nNote: The current language is saved to the local storage.\nIf no parameter is specified, the language is loaded from local storage (if present).\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            language\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    The IETF language code to set.\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\nimport { includes } from 'lodash';\n\nimport { Logger } from './logger.service';\nimport enUS from '../../translations/en-US.json';\nimport arEG from '../../translations/ar-EG.json';\n/**\n* initialize logger object with prefix 'I18nService'\n*/\nconst log = new Logger('I18nService');\n/**\n* initialize language key in local storage\n*/\nconst languageKey = 'language';\n\n/**\n * Pass-through function to mark a string for translation extraction.\n * Running `npm translations:extract` will include the given string by using this.\n * @param s The string to extract for translation.\n * @return The same string.\n */\nexport function extract(s: string) {\n  return s;\n}\n\n@Injectable()\nexport class I18nService {\n  /**\n  * string refrence to system default language\n  */\n  defaultLanguage: string;\n  /**\n  * string refrence to system supported languages\n  */\n  supportedLanguages: string[];\n  /**\n  * inject TranslateService\n  */\n  constructor(private translateService: TranslateService) {\n    // Embed languages to avoid extra HTTP requests\n    translateService.setTranslation('en-US', enUS);\n    translateService.setTranslation('ar-EG', arEG);\n  }\n\n  /**\n   * Initializes i18n for the application.\n   * Loads language from local storage if present, or sets default language.\n   * @param defaultLanguage The default language to use.\n   * @param supportedLanguages The list of supported languages.\n   */\n  init(defaultLanguage: string, supportedLanguages: string[]) {\n    this.defaultLanguage = defaultLanguage;\n    this.supportedLanguages = supportedLanguages;\n    this.language = '';\n  }\n\n  /**\n   * Sets the current language.\n   * Note: The current language is saved to the local storage.\n   * If no parameter is specified, the language is loaded from local storage (if present).\n   * @param language The IETF language code to set.\n   */\n  set language(language: string) {\n    language = language || localStorage.getItem(languageKey) || this.translateService.getBrowserCultureLang();\n    let isSupportedLanguage = includes(this.supportedLanguages, language);\n\n    // If no exact match is found, search without the region\n    if (language && !isSupportedLanguage) {\n      language = language.split('-')[0];\n      language = this.supportedLanguages.find(supportedLanguage => supportedLanguage.startsWith(language)) || '';\n      isSupportedLanguage = Boolean(language);\n    }\n\n    // Fallback if language is not supported\n    if (!isSupportedLanguage) {\n      language = this.defaultLanguage;\n    }\n\n    log.debug(`Language set to ${language}`);\n    this.translateService.use(language);\n  }\n\n  /**\n   * Gets the current language.\n   * @return The current language code.\n   */\n  get language(): string {\n    return this.translateService.currentLang;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAppState.html":{"url":"interfaces/IAppState.html","title":"interface - IAppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/state/app.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        chat\n                                \n                                \n                                            Optional\n                                        router\n                                \n                                \n                                        settings\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chat\n                                    \n                                \n                                \n                                    \n                                        chat:         IChatState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IChatState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        router\n                                    \n                                \n                                \n                                    \n                                        router:     RouterReducerState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RouterReducerState\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        settings\n                                    \n                                \n                                \n                                    \n                                        settings:         ISettingsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISettingsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RouterReducerState } from \"@ngrx/router-store\";\n\nimport { IChatState, initialChatState } from \"@app/core/store/state/chat.state\";\nimport { initialSettingsState, ISettingsState } from \"@app/core/store/state/settings.state\";\n\nexport interface IAppState {\n  router?: RouterReducerState;\n  chat: IChatState;\n  settings: ISettingsState;\n}\n\nexport const initialAppState: IAppState = {\n  chat: initialChatState,\n  settings: initialSettingsState\n};\n\nexport function getInitialState(): IAppState {\n  return initialAppState;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IChatState.html":{"url":"interfaces/IChatState.html","title":"interface - IChatState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IChatState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/state/chat.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blink\n                                \n                                \n                                        currentMessage\n                                \n                                \n                                        messages\n                                \n                                \n                                        unread\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blink\n                                    \n                                \n                                \n                                    \n                                        blink:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currentMessage\n                                    \n                                \n                                \n                                    \n                                        currentMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        messages\n                                    \n                                \n                                \n                                    \n                                        messages:         Message[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Message[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unread\n                                    \n                                \n                                \n                                    \n                                        unread:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Message } from \"@app/core/models/message.interface\";\n\nexport interface IChatState {\n    unread: number;\n    messages: Message[];\n    currentMessage: string;\n    blink: boolean;\n}\nexport const initialChatState: IChatState = {\n  unread: 0,\n  messages: [],\n  currentMessage: \"\",\n  blink: false\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISettingsState.html":{"url":"interfaces/ISettingsState.html","title":"interface - ISettingsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISettingsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/state/settings.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        clock\n                                \n                                \n                                        language\n                                \n                                \n                                        sendonenter\n                                \n                                \n                                        theme\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clock\n                                    \n                                \n                                \n                                    \n                                        clock:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sendonenter\n                                    \n                                \n                                \n                                    \n                                        sendonenter:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                    \n                                \n                                \n                                    \n                                        theme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         IUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IUser } from \"@app/core/models/user.interface\";\nimport { environment } from \"@env/environment.prod\";\n\nexport interface ISettingsState {\n    user: IUser;\n    theme: string;\n    clock: boolean;\n    sendonenter: boolean;\n    language: string;\n}\n\nexport const initialSettingsState: ISettingsState = {\n  user: {\n    userid: 0,\n    username: environment.defaultUserName\n  },\n  theme: \"light-theme\",\n  clock: true,\n  sendonenter: false,\n  language: \"en-US\"\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.interface.ts\n        \n\n            \n                Description\n            \n            \n                Build User Data Model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        userid\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userid\n                                    \n                                \n                                \n                                    \n                                        userid:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    user unique id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    username\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IUser {\n  /**\n   * user unique id\n   */\n  userid: number;\n  /**\n   * username\n   */\n  username: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/local-storage/local-storage.service.ts\n        \n\n            \n                Description\n            \n            \n                LocalStorageService service to get and set store changes to local storage\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getItem\n                            \n                            \n                                    Static\n                                loadInitialState\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                            \n                                testLocalStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getItem\n                        \n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/local-storage/local-storage.service.ts:55\n                \n            \n\n\n            \n                \n                    get item from localstorage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            loadInitialState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadInitialState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/local-storage/local-storage.service.ts:15\n                \n            \n\n\n            \n                \n                    check if the localstorage have store data and load it \n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeItem\n                        \n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/local-storage/local-storage.service.ts:61\n                \n            \n\n\n            \n                \n                    remove item from localstorage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setItem\n                        \n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/local-storage/local-storage.service.ts:49\n                \n            \n\n\n            \n                \n                    Set item to localstorage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            testLocalStorage\n                        \n                        \n                    \n                \n            \n            \n                \ntestLocalStorage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/local-storage/local-storage.service.ts:66\n                \n            \n\n\n            \n                \n                    Tests that localStorage exists, can be written to, and read from. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n  /**\n  * Prefix for our app keys in local storage\n  */\nconst APP_PREFIX = 'CHATAPP-';\n/**\n* LocalStorageService service to get and set store changes to local storage\n*/\n@Injectable()\nexport class LocalStorageService {\n  /**\n  * check if the localstorage have store data and load it \n  */\n  static loadInitialState() {\n    return Object.keys(localStorage).reduce((state: any, storageKey) => {\n      if (storageKey.includes(APP_PREFIX)) {\n        const stateKeys = storageKey\n          .replace(APP_PREFIX, '')\n          .toLowerCase()\n          .split('.')\n          .map(key =>\n            key\n              .split('-')\n              .map(\n                (token, index) =>\n                  index === 0\n                    ? token\n                    : token.charAt(0).toUpperCase() + token.slice(1)\n              )\n              .join('')\n          );\n        let currentStateRef = state;\n        stateKeys.forEach((key, index) => {\n          if (index === stateKeys.length - 1) {\n            currentStateRef[key] = JSON.parse(localStorage.getItem(storageKey));\n            return;\n          }\n          currentStateRef[key] = currentStateRef[key] || {};\n          currentStateRef = currentStateRef[key];\n        });\n      }\n      return state;\n    }, {});\n  }\n  /**\n  * Set item to localstorage\n  */\n  setItem(key: string, value: any) {\n    localStorage.setItem(`${APP_PREFIX}${key}`, JSON.stringify(value));\n  }\n  /**\n  * get item from localstorage\n  */\n  getItem(key: string) {\n    return JSON.parse(localStorage.getItem(`${APP_PREFIX}${key}`));\n  }\n  /**\n  * remove item from localstorage\n  */\n  removeItem(key: string) {\n    localStorage.removeItem(`${APP_PREFIX}${key}`);\n  }\n\n  /** Tests that localStorage exists, can be written to, and read from. */\n  testLocalStorage() {\n    const testValue = 'testValue';\n    const testKey = 'testKey';\n    let retrievedValue: string;\n    const errorMessage = 'localStorage did not return expected value';\n\n    this.setItem(testKey, testValue);\n    retrievedValue = this.getItem(testKey);\n    this.removeItem(testKey);\n\n    if (retrievedValue !== testValue) {\n      throw new Error(errorMessage);\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Logger.html":{"url":"classes/Logger.html","title":"class - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/logger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                level\n                            \n                            \n                                    Static\n                                outputs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                    Static\n                                enableProductionMode\n                            \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                    Private\n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(source?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/logger.service.ts:69\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            level\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LogLevel.Debug\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/logger.service.ts:56\n                            \n                        \n\n                \n                    \n                        Current logging level.\nSet it to LogLevel.Off to disable logs completely.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            outputs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogOutput[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/logger.service.ts:61\n                            \n                        \n\n                \n                    \n                        Additional log outputs.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(...objects: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/logger.service.ts:77\n                \n            \n\n\n            \n                \n                    Logs messages or objects  with the debug level.\nWorks the same as console.log().\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    objects\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            enableProductionMode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enableProductionMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/logger.service.ts:67\n                \n            \n\n\n            \n                \n                    Enables production mode.\nSets logging level to LogLevel.Warning.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(...objects: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/logger.service.ts:101\n                \n            \n\n\n            \n                \n                    Logs messages or objects  with the error level.\nWorks the same as console.log().\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    objects\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            info\n                        \n                        \n                    \n                \n            \n            \n                \ninfo(...objects: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/logger.service.ts:85\n                \n            \n\n\n            \n                \n                    Logs messages or objects  with the info level.\nWorks the same as console.log().\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    objects\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(func: Function, level: LogLevel, objects: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/logger.service.ts:107\n                \n            \n\n\n            \n                \n                    Logs messages or objects with log level.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    func\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    objects\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(...objects: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/logger.service.ts:93\n                \n            \n\n\n            \n                \n                    Logs messages or objects  with the warning level.\nWorks the same as console.log().\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    objects\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export enum LogLevel {\n  Off = 0,\n  Error,\n  Warning,\n  Info,\n  Debug\n}\n\n/**\n * Log output handler function.\n */\nexport type LogOutput = (source: string, level: LogLevel, ...objects: any[]) => void;\n\nexport class Logger {\n\n  /**\n   * Current logging level.\n   * Set it to LogLevel.Off to disable logs completely.\n   */\n  static level = LogLevel.Debug;\n\n  /**\n   * Additional log outputs.\n   */\n  static outputs: LogOutput[] = [];\n\n  /**\n   * Enables production mode.\n   * Sets logging level to LogLevel.Warning.\n   */\n  static enableProductionMode() {\n    Logger.level = LogLevel.Warning;\n  }\n\n  constructor(private source?: string) { }\n\n  /**\n   * Logs messages or objects  with the debug level.\n   * Works the same as console.log().\n   */\n  debug(...objects: any[]) {\n    this.log(console.log, LogLevel.Debug, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the info level.\n   * Works the same as console.log().\n   */\n  info(...objects: any[]) {\n    this.log(console.info, LogLevel.Info, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the warning level.\n   * Works the same as console.log().\n   */\n  warn(...objects: any[]) {\n    this.log(console.warn, LogLevel.Warning, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the error level.\n   * Works the same as console.log().\n   */\n  error(...objects: any[]) {\n    this.log(console.error, LogLevel.Error, objects);\n  }\n  /**\n  * Logs messages or objects with log level.\n  */\n  private log(func: Function, level: LogLevel, objects: any[]) {\n    if (level  output.apply(output, [this.source, level].concat(objects)));\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /*\n * This module imports and re-exports all Angular Material modules for convenience,\n * so only 1 module import is needed in your feature modules.\n * See https://material.angular.io/guide/getting-started#step-3-import-the-component-modules.\n *\n * To optimize your production builds, you should only import the components used in your app.\n */\n\nimport { NgModule } from '@angular/core';\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatCommonModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatLineModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatOptionModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatPseudoCheckboxModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n} from '@angular/material';\n\n@NgModule({\n  exports: [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatCommonModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatLineModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatOptionModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatPseudoCheckboxModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSlideToggleModule,\n    MatSliderModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule\n  ]\n})\nexport class MaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/message.interface.ts\n        \n\n            \n                Description\n            \n            \n                Build Message Data Model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                                \n                                        time\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Message text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Message sent datetime\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         IUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IUser\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Message sender info\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IUser } from \"./user.interface\";\n/**\n * Build Message Data Model\n */\nexport interface Message {\n  /**\n   * Message sender info\n   */\n  user: IUser;\n  /**\n   * Message sent datetime\n  */\n  time: Date;\n  /**\n   * Message text\n  */\n  message: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessageComponent.html":{"url":"components/MessageComponent.html","title":"component - MessageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MessageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/chat/message/message.component.ts\n\n\n    \n        Description\n    \n    \n        MessageComponent is an Angular component that takes Message object and display this message\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-message\n            \n\n            \n                styleUrls\n                ./message.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./message.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                format\n                            \n                            \n                                settings$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/chat/message/message.component.ts:38\n                            \n                        \n\n                \n                    \n                            inject Store\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Type :         Message\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/chat/message/message.component.ts:30\n                            \n                        \n                \n                    \n                        Message is the message object the carry the details of the message to be displayed\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat/message/message.component.ts:46\n                \n            \n\n\n            \n                \n                    Implements ngOnInit to update settings date from the store\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            format\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chat/message/message.component.ts:38\n                            \n                        \n\n                \n                    \n                        format string for the date pipe\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            settings$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chat/message/message.component.ts:34\n                            \n                        \n\n                \n                    \n                        settings used to retrieve settings store selection\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { Message } from '@app/core/models/message.interface';\nimport { Observable } from 'rxjs';\nimport { ISettingsState } from '@app/core/store/state/settings.state';\nimport { Store, select } from '@ngrx/store';\nimport { IAppState } from '@app/core/store/state/app.state';\nimport { selectSettings } from '@app/core/store/selectors/settings.selector';\n/**\n* MessageComponent is an Angular component that takes Message object and display this message\n*/\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.scss'],\n  animations: [\n    trigger('items', [\n      transition(':enter', [\n        style({ transform: 'scale(0.5)', opacity: 0 }),  // initial\n        animate('0.5s cubic-bezier(.8, -0.6, 0.2, 1.5)', \n          style({ transform: 'scale(1)', opacity: 1 }))  // final\n      ])\n    ])\n  ]\n})\nexport class MessageComponent implements OnInit {\n  /**\n\t* Message is the message object the carry the details of the message to be displayed\n\t*/\n  @Input() message: Message;\n  /**\n\t* settings used to retrieve settings store selection\n\t*/\n  settings$: Observable;\n  /**\n\t* format string for the date pipe\n\t*/\n  format: string;\n  /**\n  * inject Store\n  */\n  constructor(private store: Store) { }\n\t/**\n\t* Implements ngOnInit to update settings date from the store\n\t*/\n  ngOnInit() {\n    this.settings$ = this.store.pipe(select(selectSettings));\n    this.settings$.subscribe((settings)=>{\n      this.format = settings.clock ? 'hh:mm' : 'HH:mm';\n    })\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n      {{message.user?.username}} , \n      {{message.time | date: format}}\n    \n    \n      {{message.message}}\n    \n  \n\n    \n\n    \n                \n                    ./message.component.scss\n                \n                .message {\n    border-radius: 20px;\n    clear: both;\n    max-width: 80%;\n    padding: 10px 15px;\n    position: relative;\n  \n    &:after {\n      border-radius: 50%;\n      bottom: 0;\n      content: \" \";\n      height: 30px;\n      position: absolute;\n      width: 30px;\n      z-index: -1;\n    }\n}\n\n.message-meta {\n  margin: 0 50px;\n  color: #aaa;\n}\n.from-them, .from-me {\n  display: flex;\n  flex-direction: column;\n  margin: 5px 0;\n}\n.from-them {\n  transform-origin: bottom left;\n  order: 1;\n  .message {\n    background: #dedede;\n    margin-left: 30px;\n    &:after{\n      box-shadow: inset 1px 9px 0 4px #fff, inset -9px 0px 0 2px #dedede, 0 0 0 1px #fff;\n      left: -19px;\n    }\n    .message-meta {align-self: flex-start;}\n  }\n}\n.from-me {\n  transform-origin: bottom right;\n  order: 3;\n  text-align: right;\n  .message {\n    background: #2d8cfa;\n    color: #fff;\n    margin-right: 30px;\n    &:after {\n      box-shadow: inset -1px 9px 0 4px #fff, inset 9px 1px 0 2px #2d8cfa, 0 0 0 1px #fff;\n      right: -19px;\n    }\n  }\n  .message-meta {align-self: flex-end;}\n}\n.flex-fix {\n  flex: 1;\n  order: 2;\n}\n:host-context([dir=rtl])  {\n  .from-me {order: 1;}\n  .from-them {order: 3;text-align: left}\n}\n:host-context(.dark-theme) {\n  .from-them{\n    .message{\n      background: #333;\n      &:after {\n        box-shadow: inset 1px 9px 0 4px #424242, inset -9px 0px 0 2px #333, 0 0 0 1px #424242;\n      }\n    }\n  }\n  .from-me {\n    .message{\n      background: #666;\n      &:after {\n        box-shadow: inset -1px 9px 0 4px #424242, inset 9px 1px 0 2px #666, 0 0 0 1px #424242;\n      }\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{message.user?.username}} ,       {{message.time | date: format}}              {{message.message}}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MessageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockStore.html":{"url":"injectables/MockStore.html","title":"injectable - MockStore","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/testing/utils.ts\n        \n\n            \n                Description\n            \n            \n                MockStore for testing purposes\n\n            \n\n            \n                Extends\n            \n            \n                    Store\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(state$: StateObservable, actionsObserver: ActionsSubject, reducerManager: ReducerManager)\n                    \n                \n                        \n                            \n                                Defined in src/testing/utils.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state$\n                                                  \n                                                        \n                                                                    StateObservable\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionsObserver\n                                                  \n                                                        \n                                                                    ActionsSubject\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reducerManager\n                                                  \n                                                        \n                                                                    ReducerManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setState\n                        \n                        \n                    \n                \n            \n            \n                \nsetState(nextState: T)\n                \n            \n\n\n            \n                \n                    Defined in src/testing/utils.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nextState\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stateSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject({} as T)\n                        \n                    \n                        \n                            \n                                    Defined in src/testing/utils.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { NgModule, Injectable } from '@angular/core';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  Store,\n  StateObservable,\n  ActionsSubject,\n  ReducerManager,\n  StoreModule\n} from '@ngrx/store';\nimport { BehaviorSubject } from 'rxjs';\nimport { RouterTestingModule } from '@angular/router/testing';\n/**\n* MockStore for testing purposes\n*/\n@Injectable()\nexport class MockStore extends Store {\n  private stateSubject = new BehaviorSubject({} as T);\n\n  constructor(\n    state$: StateObservable,\n    actionsObserver: ActionsSubject,\n    reducerManager: ReducerManager\n  ) {\n    super(state$, actionsObserver, reducerManager);\n    this.source = this.stateSubject.asObservable();\n  }\n\n  setState(nextState: T) {\n    this.stateSubject.next(nextState);\n  }\n}\n/**\n* MockStore provider\n*/\nexport function provideMockStore() {\n  return {\n    provide: Store,\n    useClass: MockStore\n  };\n}\n\n@NgModule({\n  imports: [\n    NoopAnimationsModule,\n    RouterTestingModule,\n    TranslateModule.forRoot(),\n    StoreModule.forRoot({})\n  ],\n  exports: [\n    NoopAnimationsModule,\n    RouterTestingModule,\n    TranslateModule\n  ],\n  providers: [provideMockStore()]\n})\n/**\n* TestingModule for testing purposes\n*/\nexport class TestingModule {\n  constructor() {}\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset.html":{"url":"classes/Reset.html","title":"class - Reset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/actions/settings.actions.ts\n        \n\n            \n                Description\n            \n            \n                build action Reset\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ESettingsActions.Reset\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/settings.actions.ts:60\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from \"@ngrx/store\";\n/**\n* build enum for settings actions\n*/\nexport enum ESettingsActions {\n  ChangeName = \"[Settings] Change user name\",\n  SetUserID = \"[Settings] Set User ID\",\n  ChangeTheme = \"[Settings] Change theme\",\n  ChangeClock = \"[Settings] Change clock display\",\n  ChangeSendOnEnter = \"[Settings] Toggle sending message on ctrl + enter\",\n  ChangeLanguage = \"[Settings] Change language\",\n  Reset = \"[Settings] Reset Settings\"\n}\n/**\n* build action ChangeName\n*/\nexport class ChangeName implements Action {\n  public readonly type = ESettingsActions.ChangeName;\n  constructor(public payload: string) {}\n}\n/**\n* build action SetUserID\n*/\nexport class SetUserID implements Action {\n  public readonly type = ESettingsActions.SetUserID;\n  constructor(public payload: number) {}\n}\n/**\n* build action ChangeTheme\n*/\nexport class ChangeTheme implements Action {\n  public readonly type = ESettingsActions.ChangeTheme;\n  constructor(public payload: string) {}\n}\n/**\n* build action ChangeClock\n*/\nexport class ChangeClock implements Action {\n  public readonly type = ESettingsActions.ChangeClock;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action ChangeSendOnEnter\n*/\nexport class ChangeSendOnEnter implements Action {\n  public readonly type = ESettingsActions.ChangeSendOnEnter;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action ChangeLanguage\n*/\nexport class ChangeLanguage implements Action {\n  public readonly type = ESettingsActions.ChangeLanguage;\n  constructor(public payload: string) {}\n}\n/**\n* build action Reset\n*/\nexport class Reset implements Action {\n  public readonly type = ESettingsActions.Reset;\n}\n/**\n* export SettingsActions\n*/\nexport type SettingsActions = ChangeName | SetUserID | ChangeTheme | ChangeClock | ChangeSendOnEnter | ChangeLanguage | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReveiveMsg.html":{"url":"classes/ReveiveMsg.html","title":"class - ReveiveMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReveiveMsg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/actions/chat.actions.ts\n        \n\n            \n                Description\n            \n            \n                build action ReveiveMsg\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: Message)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/actions/chat.actions.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        Message\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Message\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/chat.actions.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EChatActions.ReveiveMsg\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/chat.actions.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from \"@ngrx/store\";\nimport { Message } from \"@app/core/models/message.interface\";\n/**\n* build enum for chat actions\n*/\nexport enum EChatActions {\n  ReveiveMsg = \"[Chat] Receive Message\",\n  SendMessage = \"[Chat] Send Message\",\n  SaveCurrentMsg = \"[Chat] Save current message\",\n  BlinkTab = \"[Chat] Toggle Tab Blink\",\n  UnreadCount = \"[Chat] Unread Messages Counted\"\n}\n/**\n* build action ReveiveMsg\n*/\nexport class ReveiveMsg implements Action {\n  public readonly type = EChatActions.ReveiveMsg;\n  constructor(public payload: Message) {}\n}\n/**\n* build action SaveCurrentMsg\n*/\nexport class SaveCurrentMsg implements Action {\n  public readonly type = EChatActions.SaveCurrentMsg;\n  constructor(public payload: string) {}\n}\n/**\n* build action SendMessage\n*/\nexport class SendMessage implements Action {\n  public readonly type = EChatActions.SendMessage;\n  constructor(public payload: Message) {}\n}\n/**\n* build action BlinkTab\n*/\nexport class BlinkTab implements Action {\n  public readonly type = EChatActions.BlinkTab;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action UnreadCount\n*/\nexport class UnreadCount implements Action {\n  public readonly type = EChatActions.UnreadCount;\n  constructor(public payload: number) {}\n}\n/**\n* export ChatActions\n*/\nexport type ChatActions = ReveiveMsg | SendMessage | SaveCurrentMsg | BlinkTab | UnreadCount;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouteReusableStrategy.html":{"url":"classes/RouteReusableStrategy.html","title":"class - RouteReusableStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouteReusableStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/route-reusable-strategy.ts\n        \n\n            \n                Description\n            \n            \n                A route strategy allowing for explicit route reuse.\nUsed as a workaround for https://github.com/angular/angular/issues/18374\nTo reuse a given route, add data: { reuse: true } to the route definition.\n\n            \n\n            \n                Extends\n            \n            \n                        RouteReuseStrategy\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                retrieve\n                            \n                            \n                                    Public\n                                shouldAttach\n                            \n                            \n                                    Public\n                                shouldDetach\n                            \n                            \n                                    Public\n                                shouldReuseRoute\n                            \n                            \n                                    Public\n                                store\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            retrieve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    retrieve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DetachedRouteHandle | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shouldAttach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldAttach(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shouldDetach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldDetach(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shouldReuseRoute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    future\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    curr\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            store\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    detachedTree\n                                    \n                                            DetachedRouteHandle | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ActivatedRouteSnapshot, DetachedRouteHandle, RouteReuseStrategy } from '@angular/router';\n\n/**\n * A route strategy allowing for explicit route reuse.\n * Used as a workaround for https://github.com/angular/angular/issues/18374\n * To reuse a given route, add `data: { reuse: true }` to the route definition.\n */\nexport class RouteReusableStrategy extends RouteReuseStrategy {\n\n  public shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle | null): void { }\n\n  public shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    return null;\n  }\n\n  public shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    return (future.routeConfig === curr.routeConfig) || future.data.reuse;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveCurrentMsg.html":{"url":"classes/SaveCurrentMsg.html","title":"class - SaveCurrentMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveCurrentMsg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/actions/chat.actions.ts\n        \n\n            \n                Description\n            \n            \n                build action SaveCurrentMsg\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/actions/chat.actions.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/chat.actions.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EChatActions.SaveCurrentMsg\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/chat.actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from \"@ngrx/store\";\nimport { Message } from \"@app/core/models/message.interface\";\n/**\n* build enum for chat actions\n*/\nexport enum EChatActions {\n  ReveiveMsg = \"[Chat] Receive Message\",\n  SendMessage = \"[Chat] Send Message\",\n  SaveCurrentMsg = \"[Chat] Save current message\",\n  BlinkTab = \"[Chat] Toggle Tab Blink\",\n  UnreadCount = \"[Chat] Unread Messages Counted\"\n}\n/**\n* build action ReveiveMsg\n*/\nexport class ReveiveMsg implements Action {\n  public readonly type = EChatActions.ReveiveMsg;\n  constructor(public payload: Message) {}\n}\n/**\n* build action SaveCurrentMsg\n*/\nexport class SaveCurrentMsg implements Action {\n  public readonly type = EChatActions.SaveCurrentMsg;\n  constructor(public payload: string) {}\n}\n/**\n* build action SendMessage\n*/\nexport class SendMessage implements Action {\n  public readonly type = EChatActions.SendMessage;\n  constructor(public payload: Message) {}\n}\n/**\n* build action BlinkTab\n*/\nexport class BlinkTab implements Action {\n  public readonly type = EChatActions.BlinkTab;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action UnreadCount\n*/\nexport class UnreadCount implements Action {\n  public readonly type = EChatActions.UnreadCount;\n  constructor(public payload: number) {}\n}\n/**\n* export ChatActions\n*/\nexport type ChatActions = ReveiveMsg | SendMessage | SaveCurrentMsg | BlinkTab | UnreadCount;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMessage.html":{"url":"classes/SendMessage.html","title":"class - SendMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/actions/chat.actions.ts\n        \n\n            \n                Description\n            \n            \n                build action SendMessage\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: Message)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/actions/chat.actions.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        Message\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Message\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/chat.actions.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EChatActions.SendMessage\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/chat.actions.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from \"@ngrx/store\";\nimport { Message } from \"@app/core/models/message.interface\";\n/**\n* build enum for chat actions\n*/\nexport enum EChatActions {\n  ReveiveMsg = \"[Chat] Receive Message\",\n  SendMessage = \"[Chat] Send Message\",\n  SaveCurrentMsg = \"[Chat] Save current message\",\n  BlinkTab = \"[Chat] Toggle Tab Blink\",\n  UnreadCount = \"[Chat] Unread Messages Counted\"\n}\n/**\n* build action ReveiveMsg\n*/\nexport class ReveiveMsg implements Action {\n  public readonly type = EChatActions.ReveiveMsg;\n  constructor(public payload: Message) {}\n}\n/**\n* build action SaveCurrentMsg\n*/\nexport class SaveCurrentMsg implements Action {\n  public readonly type = EChatActions.SaveCurrentMsg;\n  constructor(public payload: string) {}\n}\n/**\n* build action SendMessage\n*/\nexport class SendMessage implements Action {\n  public readonly type = EChatActions.SendMessage;\n  constructor(public payload: Message) {}\n}\n/**\n* build action BlinkTab\n*/\nexport class BlinkTab implements Action {\n  public readonly type = EChatActions.BlinkTab;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action UnreadCount\n*/\nexport class UnreadCount implements Action {\n  public readonly type = EChatActions.UnreadCount;\n  constructor(public payload: number) {}\n}\n/**\n* export ChatActions\n*/\nexport type ChatActions = ReveiveMsg | SendMessage | SaveCurrentMsg | BlinkTab | UnreadCount;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetUserID.html":{"url":"classes/SetUserID.html","title":"class - SetUserID","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetUserID\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/actions/settings.actions.ts\n        \n\n            \n                Description\n            \n            \n                build action SetUserID\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/actions/settings.actions.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/settings.actions.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ESettingsActions.SetUserID\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/settings.actions.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from \"@ngrx/store\";\n/**\n* build enum for settings actions\n*/\nexport enum ESettingsActions {\n  ChangeName = \"[Settings] Change user name\",\n  SetUserID = \"[Settings] Set User ID\",\n  ChangeTheme = \"[Settings] Change theme\",\n  ChangeClock = \"[Settings] Change clock display\",\n  ChangeSendOnEnter = \"[Settings] Toggle sending message on ctrl + enter\",\n  ChangeLanguage = \"[Settings] Change language\",\n  Reset = \"[Settings] Reset Settings\"\n}\n/**\n* build action ChangeName\n*/\nexport class ChangeName implements Action {\n  public readonly type = ESettingsActions.ChangeName;\n  constructor(public payload: string) {}\n}\n/**\n* build action SetUserID\n*/\nexport class SetUserID implements Action {\n  public readonly type = ESettingsActions.SetUserID;\n  constructor(public payload: number) {}\n}\n/**\n* build action ChangeTheme\n*/\nexport class ChangeTheme implements Action {\n  public readonly type = ESettingsActions.ChangeTheme;\n  constructor(public payload: string) {}\n}\n/**\n* build action ChangeClock\n*/\nexport class ChangeClock implements Action {\n  public readonly type = ESettingsActions.ChangeClock;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action ChangeSendOnEnter\n*/\nexport class ChangeSendOnEnter implements Action {\n  public readonly type = ESettingsActions.ChangeSendOnEnter;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action ChangeLanguage\n*/\nexport class ChangeLanguage implements Action {\n  public readonly type = ESettingsActions.ChangeLanguage;\n  constructor(public payload: string) {}\n}\n/**\n* build action Reset\n*/\nexport class Reset implements Action {\n  public readonly type = ESettingsActions.Reset;\n}\n/**\n* export SettingsActions\n*/\nexport type SettingsActions = ChangeName | SetUserID | ChangeTheme | ChangeClock | ChangeSendOnEnter | ChangeLanguage | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/settings.component.ts\n\n\n    \n        Description\n    \n    \n        SettingsComponent is an angular component used to customize application interface\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                ./settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                settings$\n                            \n                            \n                                usernameFiels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLanguageSelect\n                            \n                            \n                                onSendOnEnterToggle\n                            \n                            \n                                onThemeChange\n                            \n                            \n                                onTimeDisplayChange\n                            \n                            \n                                onUserNameChange\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    languages\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/settings.component.ts:26\n                            \n                        \n\n                \n                    \n                            inject Store\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/settings.component.ts:40\n                \n            \n\n\n            \n                \n                    Focus on username input after view init\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/settings.component.ts:34\n                \n            \n\n\n            \n                \n                    Implements ngOnInit to update settings date from the store\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLanguageSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonLanguageSelect(language: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/settings.component.ts:76\n                \n            \n\n\n            \n                \n                    dispatch store with ChangeLanguage action on select change\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    language\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSendOnEnterToggle\n                        \n                        \n                    \n                \n            \n            \n                \nonSendOnEnterToggle(sendonenter: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/settings.component.ts:70\n                \n            \n\n\n            \n                \n                    dispatch store with ChangeSendOnEnter action on slider change\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sendonenter\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onThemeChange\n                        \n                        \n                    \n                \n            \n            \n                \nonThemeChange(theme: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/settings.component.ts:64\n                \n            \n\n\n            \n                \n                    dispatch store with ChangeTheme action on theme selection change\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    theme\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onTimeDisplayChange\n                        \n                        \n                    \n                \n            \n            \n                \nonTimeDisplayChange(clock: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/settings.component.ts:58\n                \n            \n\n\n            \n                \n                    dispatch store with ChangeClock action on clock button toggle change\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clock\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUserNameChange\n                        \n                        \n                    \n                \n            \n            \n                \nonUserNameChange(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/settings.component.ts:52\n                \n            \n\n\n            \n                \n                    dispatch store with ChangeName action on username change\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/settings.component.ts:82\n                \n            \n\n\n            \n                \n                    dispatch store with Reset action on click reset button\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            settings$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/settings.component.ts:22\n                            \n                        \n\n                \n                    \n                        settings used to retrieve settings store selection\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            usernameFiels\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('userName')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/settings.component.ts:26\n                            \n                        \n\n                \n                    \n                        reference to username input element\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        languages\n                    \n                \n\n                \n                    \n                        getlanguages()\n                    \n                \n                            \n                                \n                                    Defined in src/app/settings/settings.component.ts:46\n                                \n                            \n                    \n                        \n                                return supported languages array to be used for language select\n\n\n                                \n                                    Returns :     string[]\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ISettingsState } from '@app/core/store/state/settings.state';\nimport { Observable } from 'rxjs';\nimport { Store, select } from '@ngrx/store';\nimport { ChangeSendOnEnter, ChangeLanguage, ChangeClock, ChangeTheme, ChangeName, Reset } from \"@app/core/store/actions/settings.actions\";\nimport { IAppState } from '@app/core/store/state/app.state';\nimport { selectSettings } from '@app/core/store/selectors/settings.selector';\nimport { environment } from '@env/environment';\n\n/**\n* SettingsComponent is an angular component used to customize application interface\n*/\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n  /**\n\t* settings used to retrieve settings store selection\n\t*/\n  settings$: Observable;\n  /**\n\t* reference to username input element\n\t*/\n  @ViewChild(\"userName\") usernameFiels: ElementRef;\n  /**\n  * inject Store\n  */\n  constructor(private store: Store) { }\n\t/**\n\t* Implements ngOnInit to update settings date from the store\n\t*/\n  ngOnInit() {\n    this.settings$ = this.store.pipe(select(selectSettings));\n  }\n  /**\n  * Focus on username input after view init\n  */\n  ngAfterViewInit(){\n    setTimeout(() => {this.usernameFiels.nativeElement.focus()});\n  }\n  /**\n  * return supported languages array to be used for language select\n  */\n  get languages(): string[] {\n    return environment.supportedLanguages;\n  }\n  /**\n  * dispatch store with ChangeName action on username change\n  */\n  onUserNameChange(name: string) {\n    this.store.dispatch(new ChangeName(name));\n  }\n  /**\n  * dispatch store with ChangeClock action on clock button toggle change\n  */\n  onTimeDisplayChange(clock: boolean) {\n    this.store.dispatch(new ChangeClock(clock));\n  }\n  /**\n  * dispatch store with ChangeTheme action on theme selection change\n  */\n  onThemeChange(theme: string) {\n    this.store.dispatch(new ChangeTheme(theme));\n  }\n  /**\n  * dispatch store with ChangeSendOnEnter action on slider change\n  */\n  onSendOnEnterToggle(sendonenter: boolean) {\n    this.store.dispatch(new ChangeSendOnEnter(sendonenter));\n  }\n  /**\n  * dispatch store with ChangeLanguage action on select change\n  */\n  onLanguageSelect(language: string) {\n    this.store.dispatch(new ChangeLanguage(language));\n  }\n  /**\n  * dispatch store with Reset action on click reset button\n  */\n  reset(){\n    this.store.dispatch(new Reset());\n  }\n  \n}\n\n    \n\n    \n        \n  \n    \n\n      \n        SettingsView.Username\n        account_circle\n        \n      \n\n      \n        \n          invert_colors {{\"SettingsView.InterfaceColor\" | translate}}:\n        \n        \n          \n            Light\n          \n            Dark\n        \n      \n\n      \n        \n          access_time {{\"SettingsView.ClockDisplay\" | translate}}:\n        \n        \n          12\n            {{\"SettingsView.Hours\" | translate}}\n          24\n            {{\"SettingsView.Hours\" | translate}}\n        \n      \n\n      \n        send\n        \n          SettingsView.SendOnEnter\n        \n      \n      \n        SettingsView.Language\n        language\n        \n          {{language | translate}}\n        \n      \n      \n          \n      \n      \n        \n          settings_backup_restore {{\"SettingsView.Reset\" | translate}}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./settings.component.scss\n                \n                @media screen and (min-width: 768px) {\n  .field-label {\n    margin-right: 20px;\n    font-size: 1.2em;\n  }\n}\n\n.mat-icon {\n  vertical-align: middle;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    SettingsView.Username        account_circle                                      invert_colors {{\"SettingsView.InterfaceColor\" | translate}}:                                      Light                      Dark                                      access_time {{\"SettingsView.ClockDisplay\" | translate}}:                          12            {{\"SettingsView.Hours\" | translate}}          24            {{\"SettingsView.Hours\" | translate}}                            send                  SettingsView.SendOnEnter                            SettingsView.Language        language                  {{language | translate}}                                                            settings_backup_restore {{\"SettingsView.Reset\" | translate}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsEffects.html":{"url":"injectables/SettingsEffects.html","title":"injectable - SettingsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/effects/settings.effects.ts\n        \n\n            \n                Description\n            \n            \n                SettingsEffects class used to attach side effects for store settings actions\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                persistSettings\n                            \n                            \n                                setTranslateServiceLanguage\n                            \n                            \n                                updateTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, store: Store, localStorageService: LocalStorageService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/effects/settings.effects.ts:15\n                            \n                        \n\n                \n                    \n                            inject  Actions, Store, LocalStorageService, TranslateService\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            persistSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.actions$.pipe(\n    ofType(\n      ESettingsActions.ChangeClock,\n      ESettingsActions.SetUserID,\n      ESettingsActions.ChangeLanguage,\n      ESettingsActions.ChangeName,\n      ESettingsActions.ChangeSendOnEnter,\n      ESettingsActions.ChangeTheme,\n      ESettingsActions.Reset\n    ),\n    withLatestFrom(this.store.pipe(select(selectSettings))),\n    tap(([action, settings]) =>\n      this.localStorageService.setItem('SETTINGS', settings)\n    )\n  )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/effects/settings.effects.ts:29\n                            \n                        \n\n                \n                    \n                        attach setitem to localstorage with each action in ESettingsActions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setTranslateServiceLanguage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.store.pipe(\n    select(selectSettings),\n    map(settings => settings.language),\n    distinctUntilChanged(),\n    tap(language => {\n      this.translateService.use(language);\n      language == \"en-US\" ? (document.dir = \"ltr\") : (document.dir = \"rtl\");\n    })\n  )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/effects/settings.effects.ts:48\n                            \n                        \n\n                \n                    \n                        attach translateservice use method with each change in store settings.language\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.store.pipe(\n    select(selectSettings),\n    map(settings => settings.theme),\n    distinctUntilChanged(),\n    tap((theme) => {\n      const classList = document.body.classList;\n      const toRemove = Array.from(classList).filter((item: string) =>\n        item.includes('-theme')\n      );\n      if (toRemove.length) {\n        classList.remove(...toRemove);\n      }\n      classList.add(theme);\n    })\n  )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/effects/settings.effects.ts:63\n                            \n                        \n\n                \n                    \n                        add current theme class to document.bosy on each settings.theme change\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { select, Store } from \"@ngrx/store\";\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { SettingsActions, ESettingsActions } from \"@app/core/store/actions/settings.actions\";\nimport { LocalStorageService } from \"@app/core\";\n\nimport { tap, withLatestFrom, map, distinctUntilChanged } from \"rxjs/operators\";\nimport { IAppState } from \"@app/core/store/state/app.state\";\nimport { selectSettings } from \"@app/core/store/selectors/settings.selector\";\n/**\n* SettingsEffects class used to attach side effects for store settings actions\n*/\n@Injectable()\nexport class SettingsEffects {\n  /**\n  * inject  Actions, Store, LocalStorageService, TranslateService\n  */\n  constructor(\n    private actions$: Actions,\n    private store: Store,\n    private localStorageService: LocalStorageService,\n    private translateService: TranslateService\n  ) {}\n  /**\n  * attach setitem to localstorage with each action in ESettingsActions\n  */\n  @Effect({ dispatch: false })\n  persistSettings = this.actions$.pipe(\n    ofType(\n      ESettingsActions.ChangeClock,\n      ESettingsActions.SetUserID,\n      ESettingsActions.ChangeLanguage,\n      ESettingsActions.ChangeName,\n      ESettingsActions.ChangeSendOnEnter,\n      ESettingsActions.ChangeTheme,\n      ESettingsActions.Reset\n    ),\n    withLatestFrom(this.store.pipe(select(selectSettings))),\n    tap(([action, settings]) =>\n      this.localStorageService.setItem('SETTINGS', settings)\n    )\n  );\n  /**\n  * attach translateservice use method with each change in store settings.language\n  */\n  @Effect({ dispatch: false })\n  setTranslateServiceLanguage = this.store.pipe(\n    select(selectSettings),\n    map(settings => settings.language),\n    distinctUntilChanged(),\n    tap(language => {\n      this.translateService.use(language);\n      language == \"en-US\" ? (document.dir = \"ltr\") : (document.dir = \"rtl\");\n    })\n  );\n\n\n  /**\n  * add current theme class to document.bosy on each settings.theme change\n  */\n  @Effect({ dispatch: false })\n  updateTheme = this.store.pipe(\n    select(selectSettings),\n    map(settings => settings.theme),\n    distinctUntilChanged(),\n    tap((theme) => {\n      const classList = document.body.classList;\n      const toRemove = Array.from(classList).filter((item: string) =>\n        item.includes('-theme')\n      );\n      if (toRemove.length) {\n        classList.remove(...toRemove);\n      }\n      classList.add(theme);\n    })\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSettingsModule -->\n\nMaterialModule->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/settings/settings.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SettingsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                        \n                            SettingsRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule } from '@angular/forms';\n\nimport { MaterialModule } from '@app/material.module';\nimport { SettingsRoutingModule } from './settings-routing.module';\nimport { SettingsComponent } from './settings.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslateModule,\n    FlexLayoutModule,\n    FormsModule,\n    MaterialModule,\n    SettingsRoutingModule\n  ],\n  declarations: [\n    SettingsComponent\n  ]\n})\nexport class SettingsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsRoutingModule.html":{"url":"modules/SettingsRoutingModule.html","title":"module - SettingsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/settings/settings-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { extract } from '@app/core';\nimport { SettingsComponent } from './settings.component';\n\nconst routes: Routes = [\n  { path: 'settings', component: SettingsComponent, data: { title: \"extract('Settings')\" } }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: []\n})\nexport class SettingsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SocketioService.html":{"url":"injectables/SocketioService.html","title":"injectable - SocketioService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SocketioService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/socketio/socketio.service.ts\n        \n\n            \n                Description\n            \n            \n                SocketioService extends Socket class and used to initialize server connection then listen,emit to it\n\n            \n\n            \n                Extends\n            \n            \n                    Socket\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chatReceived$\n                            \n                            \n                                userCreated$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                chatSend\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/socketio/socketio.service.ts:20\n                            \n                        \n\n                \n                    \n                            initialize the connection with the \"url\"\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            chatSend\n                        \n                        \n                    \n                \n            \n            \n                \nchatSend(msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/socketio/socketio.service.ts:33\n                \n            \n\n\n            \n                \n                    emit \"chat\" event to server with msg data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chatReceived$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.fromEvent(\"chat-received\")\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/socketio/socketio.service.ts:16\n                            \n                        \n\n                \n                    \n                        chatReceived is a listner to \"chat-received\" server event\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userCreated$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.fromOneTimeEvent(\"user-created\")\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/socketio/socketio.service.ts:20\n                            \n                        \n\n                \n                    \n                        userCreated is a one time listner to \"user-created\" server event\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Socket } from \"ngx-socket-io\";\nimport { environment } from \"@env/environment\";\nimport { Message } from \"../../models/message.interface\";\n\n/**\n* SocketioService extends Socket class and used to initialize server connection then listen,emit to it\n*/\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SocketioService extends Socket {\n  /**\n  * chatReceived is a listner to \"chat-received\" server event\n  */\n  chatReceived$ = this.fromEvent(\"chat-received\");\n  /**\n  * userCreated is a one time listner to \"user-created\" server event\n  */\n  userCreated$ = this.fromOneTimeEvent(\"user-created\");\n  /**\n  * initialize the connection with the \"url\"\n  */\n  constructor() {\n    super({\n      url: environment.serverUrl,\n      options: {}\n    });\n  }\n  /**\n  * emit \"chat\" event to server with msg data\n  */\n  chatSend(msg: Message) {\n    this.emit(\"chat\", msg);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TestingModule.html":{"url":"modules/TestingModule.html","title":"module - TestingModule","body":"\n                   \n\n\n\n\n    Modules\n    TestingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/testing/utils.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, Injectable } from '@angular/core';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  Store,\n  StateObservable,\n  ActionsSubject,\n  ReducerManager,\n  StoreModule\n} from '@ngrx/store';\nimport { BehaviorSubject } from 'rxjs';\nimport { RouterTestingModule } from '@angular/router/testing';\n/**\n* MockStore for testing purposes\n*/\n@Injectable()\nexport class MockStore extends Store {\n  private stateSubject = new BehaviorSubject({} as T);\n\n  constructor(\n    state$: StateObservable,\n    actionsObserver: ActionsSubject,\n    reducerManager: ReducerManager\n  ) {\n    super(state$, actionsObserver, reducerManager);\n    this.source = this.stateSubject.asObservable();\n  }\n\n  setState(nextState: T) {\n    this.stateSubject.next(nextState);\n  }\n}\n/**\n* MockStore provider\n*/\nexport function provideMockStore() {\n  return {\n    provide: Store,\n    useClass: MockStore\n  };\n}\n\n@NgModule({\n  imports: [\n    NoopAnimationsModule,\n    RouterTestingModule,\n    TranslateModule.forRoot(),\n    StoreModule.forRoot({})\n  ],\n  exports: [\n    NoopAnimationsModule,\n    RouterTestingModule,\n    TranslateModule\n  ],\n  providers: [provideMockStore()]\n})\n/**\n* TestingModule for testing purposes\n*/\nexport class TestingModule {\n  constructor() {}\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnreadCount.html":{"url":"classes/UnreadCount.html","title":"class - UnreadCount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnreadCount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/actions/chat.actions.ts\n        \n\n            \n                Description\n            \n            \n                build action UnreadCount\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/actions/chat.actions.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/chat.actions.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EChatActions.UnreadCount\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/actions/chat.actions.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from \"@ngrx/store\";\nimport { Message } from \"@app/core/models/message.interface\";\n/**\n* build enum for chat actions\n*/\nexport enum EChatActions {\n  ReveiveMsg = \"[Chat] Receive Message\",\n  SendMessage = \"[Chat] Send Message\",\n  SaveCurrentMsg = \"[Chat] Save current message\",\n  BlinkTab = \"[Chat] Toggle Tab Blink\",\n  UnreadCount = \"[Chat] Unread Messages Counted\"\n}\n/**\n* build action ReveiveMsg\n*/\nexport class ReveiveMsg implements Action {\n  public readonly type = EChatActions.ReveiveMsg;\n  constructor(public payload: Message) {}\n}\n/**\n* build action SaveCurrentMsg\n*/\nexport class SaveCurrentMsg implements Action {\n  public readonly type = EChatActions.SaveCurrentMsg;\n  constructor(public payload: string) {}\n}\n/**\n* build action SendMessage\n*/\nexport class SendMessage implements Action {\n  public readonly type = EChatActions.SendMessage;\n  constructor(public payload: Message) {}\n}\n/**\n* build action BlinkTab\n*/\nexport class BlinkTab implements Action {\n  public readonly type = EChatActions.BlinkTab;\n  constructor(public payload: boolean) {}\n}\n/**\n* build action UnreadCount\n*/\nexport class UnreadCount implements Action {\n  public readonly type = EChatActions.UnreadCount;\n  constructor(public payload: number) {}\n}\n/**\n* export ChatActions\n*/\nexport type ChatActions = ReveiveMsg | SendMessage | SaveCurrentMsg | BlinkTab | UnreadCount;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            variable\n            log\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/chat/chat.component.ts\n            \n            component\n            ChatComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/chat/message/message.component.ts\n            \n            component\n            MessageComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/core/i18n.service.ts\n            \n            injectable\n            I18nService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/core/i18n.service.ts\n            \n            function\n            extract\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/i18n.service.ts\n            \n            variable\n            languageKey\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/i18n.service.ts\n            \n            variable\n            log\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/logger.service.ts\n            \n            class\n            Logger\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/core/models/message.interface.ts\n            \n            interface\n            Message\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/models/user.interface.ts\n            \n            interface\n            IUser\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/route-reusable-strategy.ts\n            \n            class\n            RouteReusableStrategy\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/core/services/local-storage/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/core/services/local-storage/local-storage.service.ts\n            \n            variable\n            APP_PREFIX\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/services/socketio/socketio.service.ts\n            \n            injectable\n            SocketioService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/store/actions/chat.actions.ts\n            \n            class\n            BlinkTab\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/store/actions/chat.actions.ts\n            \n            class\n            ReveiveMsg\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/store/actions/chat.actions.ts\n            \n            class\n            SaveCurrentMsg\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/store/actions/chat.actions.ts\n            \n            class\n            SendMessage\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/store/actions/chat.actions.ts\n            \n            class\n            UnreadCount\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/store/actions/settings.actions.ts\n            \n            class\n            ChangeClock\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/store/actions/settings.actions.ts\n            \n            class\n            ChangeLanguage\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/store/actions/settings.actions.ts\n            \n            class\n            ChangeName\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/store/actions/settings.actions.ts\n            \n            class\n            ChangeSendOnEnter\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/store/actions/settings.actions.ts\n            \n            class\n            ChangeTheme\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/store/actions/settings.actions.ts\n            \n            class\n            Reset\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/core/store/actions/settings.actions.ts\n            \n            class\n            SetUserID\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/store/effects/chat.effects.ts\n            \n            injectable\n            ChatEffects\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/store/effects/settings.effects.ts\n            \n            injectable\n            SettingsEffects\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/store/reducers/app.reducers.ts\n            \n            variable\n            appReducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/reducers/app.reducers.ts\n            \n            variable\n            metaReducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/reducers/chat.reducer.ts\n            \n            function\n            chatReducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/reducers/local-storage.reducer.ts\n            \n            function\n            initStateFromLocalStorage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/reducers/settings.reducer.ts\n            \n            function\n            settingsReducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/selectors/chat.selector.ts\n            \n            variable\n            chatState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/selectors/chat.selector.ts\n            \n            variable\n            selectChat\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/selectors/settings.selector.ts\n            \n            variable\n            selectSettings\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/selectors/settings.selector.ts\n            \n            variable\n            settingsState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/state/app.state.ts\n            \n            interface\n            IAppState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/store/state/app.state.ts\n            \n            function\n            getInitialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/state/app.state.ts\n            \n            variable\n            initialAppState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/state/chat.state.ts\n            \n            interface\n            IChatState\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/store/state/chat.state.ts\n            \n            variable\n            initialChatState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/state/settings.state.ts\n            \n            interface\n            ISettingsState\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/store/state/settings.state.ts\n            \n            variable\n            initialSettingsState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/testing/utils.ts\n            \n            injectable\n            MockStore\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/testing/utils.ts\n            \n            function\n            provideMockStore\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.0.0\n        \n            @angular/cdk : ^7.0.1\n        \n            @angular/common : ^7.0.0\n        \n            @angular/compiler : ^7.0.0\n        \n            @angular/core : ^7.0.0\n        \n            @angular/flex-layout : 7.0.0-beta.19\n        \n            @angular/forms : ^7.0.0\n        \n            @angular/http : ^7.0.0\n        \n            @angular/material : ^7.0.1\n        \n            @angular/platform-browser : ^7.0.0\n        \n            @angular/platform-browser-dynamic : ^7.0.0\n        \n            @angular/router : ^7.0.0\n        \n            @angular/service-worker : ^7.0.0\n        \n            @ctrl/ngx-emoji-mart : ^0.14.0\n        \n            @ngrx/core : ^1.2.0\n        \n            @ngrx/effects : ^7.4.0\n        \n            @ngrx/router-store : ^7.4.0\n        \n            @ngrx/store : ^7.4.0\n        \n            @ngrx/store-devtools : ^7.4.0\n        \n            @ngx-translate/core : ^10.0.1\n        \n            core-js : ^2.5.6\n        \n            hammerjs : ^2.0.8\n        \n            lodash : ^4.17.10\n        \n            material-design-icons-iconfont : ^3.0.3\n        \n            ngx-scrollbar : ^4.1.1\n        \n            ngx-socket-io : ^2.1.1\n        \n            rxjs : ^6.3.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EChatActions   (src/.../chat.actions.ts)\n                        \n                        \n                            ESettingsActions   (src/.../settings.actions.ts)\n                        \n                        \n                            LogLevel   (src/.../logger.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/store/actions/chat.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        EChatActions\n                    \n                \n                    \n                        \n                            build enum for chat actions\n\n                        \n                    \n                        \n                            \n                                 ReveiveMsg\n                            \n                        \n                        \n                            \n                                Value : [Chat] Receive Message\n                            \n                        \n                        \n                            \n                                 SendMessage\n                            \n                        \n                        \n                            \n                                Value : [Chat] Send Message\n                            \n                        \n                        \n                            \n                                 SaveCurrentMsg\n                            \n                        \n                        \n                            \n                                Value : [Chat] Save current message\n                            \n                        \n                        \n                            \n                                 BlinkTab\n                            \n                        \n                        \n                            \n                                Value : [Chat] Toggle Tab Blink\n                            \n                        \n                        \n                            \n                                 UnreadCount\n                            \n                        \n                        \n                            \n                                Value : [Chat] Unread Messages Counted\n                            \n                        \n            \n        \n\n    src/app/core/store/actions/settings.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        ESettingsActions\n                    \n                \n                    \n                        \n                            build enum for settings actions\n\n                        \n                    \n                        \n                            \n                                 ChangeName\n                            \n                        \n                        \n                            \n                                Value : [Settings] Change user name\n                            \n                        \n                        \n                            \n                                 SetUserID\n                            \n                        \n                        \n                            \n                                Value : [Settings] Set User ID\n                            \n                        \n                        \n                            \n                                 ChangeTheme\n                            \n                        \n                        \n                            \n                                Value : [Settings] Change theme\n                            \n                        \n                        \n                            \n                                 ChangeClock\n                            \n                        \n                        \n                            \n                                Value : [Settings] Change clock display\n                            \n                        \n                        \n                            \n                                 ChangeSendOnEnter\n                            \n                        \n                        \n                            \n                                Value : [Settings] Toggle sending message on ctrl + enter\n                            \n                        \n                        \n                            \n                                 ChangeLanguage\n                            \n                        \n                        \n                            \n                                Value : [Settings] Change language\n                            \n                        \n                        \n                            \n                                 Reset\n                            \n                        \n                        \n                            \n                                Value : [Settings] Reset Settings\n                            \n                        \n            \n        \n\n    src/app/core/logger.service.ts\n    \n        \n            \n                \n                    \n                        \n                        LogLevel\n                    \n                \n                    \n                        \n                            Simple logger system with the possibility of registering custom outputs.\n4 different log levels are provided, with corresponding methods:\n- debug   : for debug information\n- info    : for informative status of the application (success, ...)\n- warning : for non-critical errors that do not prevent normal application behavior\n- error   : for critical errors that prevent normal application behavior\nExample usage:\n* import { Logger } from 'app/core/logger.service';\n *\n * const log = new Logger('myFile');\n * ...\n * log.debug('something happened');\n *\nTo disable debug and info logs in production, add this snippet to your root component:\n```\n * export class AppComponent implements OnInit {\n *   ngOnInit() {\n *     if (environment.production) {\n *       Logger.enableProductionMode();\n *     }\n *     ...\n *   }\n * }\n *\n * If you want to process logs through other outputs than console, you can add LogOutput functions to Logger.outputs.\n *\n\n                        \n                    \n                        \n                            \n                                 Off\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                 Warning\n                            \n                        \n                        \n                            \n                                 Info\n                            \n                        \n                        \n                            \n                                 Debug\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            chatReducers   (src/.../chat.reducer.ts)\n                        \n                        \n                            extract   (src/.../i18n.service.ts)\n                        \n                        \n                            getInitialState   (src/.../app.state.ts)\n                        \n                        \n                            initStateFromLocalStorage   (src/.../local-storage.reducer.ts)\n                        \n                        \n                            provideMockStore   (src/.../utils.ts)\n                        \n                        \n                            settingsReducers   (src/.../settings.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/store/reducers/chat.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            chatReducers\n                        \n                        \n                    \n                \n            \n            \n                \nchatReducers(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IChatState\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/core/i18n.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            extract\n                        \n                        \n                    \n                \n            \n            \n                \nextract(s)\n                \n            \n\n\n\n\n            \n                \n                    Pass-through function to mark a string for translation extraction.\nRunning npm translations:extract will include the given string by using this.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The string to extract for translation.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/core/store/state/app.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getInitialState\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialState()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         IAppState\n\n                    \n                \n            \n        \n    \n    src/app/core/store/reducers/local-storage.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            initStateFromLocalStorage\n                        \n                        \n                    \n                \n            \n            \n                \ninitStateFromLocalStorage(reducer)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reducer\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionReducer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/testing/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            provideMockStore\n                        \n                        \n                    \n                \n            \n            \n                \nprovideMockStore()\n                \n            \n\n\n\n\n            \n                \n                    MockStore provider\n\n\n                \n            \n        \n    \n    src/app/core/store/reducers/settings.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            settingsReducers\n                        \n                        \n                    \n                \n            \n            \n                \nsettingsReducers(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ISettingsState\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nchat-app\nAn Angular Chat Application with Redux implementation using ngrx and Angular material.\nFeatures\nApp\n- NGRX implementation\n- 2 Languages \"English and Arabic\"\n- 2 interface directions \"LTR, RTL\"\n- All customization saved in local storageSettings Page\n- Ability to customize \"User name, Interface theme, Clock Display, Send messages on CTRL+ENTER, - - - Interface Language\"\n- Ability to reset all customization to defaultsChat Page\n- Socket.io based chat interface\n- Unique User Ids to identify user messages\n- 2 message themes one for current user messages floated right and other one for other people floated to left\n- animations for messages enterance\n- Emoji :)\n- Blink when receive message when the user on another tab\n- Unread messages counter\n- Nice Custom scrollbar with auto scroll to bottom\n- save user entered text before leaving the page and restore it once get back to the page\n- send message on click send button or on CTRL+ENTER while focus on input.\n- Input autofocus on page init\n- Input text with Off autocompleteTODO\n- Real Authentication\n- Chat history\n- Browser notifications and \"favico.js\" for Unread messages\n- Sounds for each action \"Audio sprite using HowlerJS\"Getting started\n\nGo to project folder and install dependencies:\n| npm install\n\nLaunch development server, and open localhost:4200 in your browser:\nsh\nnpm start\n\n\nProject structure\nsh\ndist/                        web app production build\ndocs/                        project docs and coding guides\ndocumentation/               Full project documentation\ne2e/                         end-to-end tests\nsrc/                         project source code\n|- app/                      app components\n|  |- core/                  core module (singleton services and store)\n|  |- chat/                  chat module  (chat component, message component)\n|  |- settings/              settings module  (settings component)\n|  |- app.component.*        app root component (shell)\n|  |- app.module.ts          app root module definition\n|  |- app-routing.module.ts  app routes\n|  +- ...                    additional modules and components\n|- assets/                   app assets (images, fonts, sounds...)\n|- environments/             values for various build environments\n|- theme/                    app global scss variables and theme\n|- translations/             translations files\n|- testing/                  testing utils\n|- index.html                html entry point\n|- main.scss                 global style entry point\n|- main.ts                   app entry point\n|- polyfills.ts              polyfills needed by Angular\n+- test.ts                   unit tests entry point\nreports/                     test and coverage reports\nMain tasks\nTask automation is based on NPM scripts.\nTask                            | Description\n--------------------------------|--------------------------------------------------------------------------------------\nnpm start                     | Run development server on http://localhost:4200/\nnpm run serve:sw              | Run test server on http://localhost:4200/ with service worker enabled\nnpm run build [-- --configuration=production] | Lint code and build web app for production (with AOT) in dist/ folder\nnpm test                      | Run unit tests via Karma in watch mode\nnpm run test:ci               | Lint code and run unit tests once for continuous integration\nnpm run e2e                   | Run e2e tests using Protractor\nnpm run lint                  | Lint code\nnpm run translations:extract  | Extract strings from code and templates to src/app/translations/template.json\nnpm run docs                  | Display project documentation\nWhen building the application, you can specify the target configuration using the additional flag\n--configuration  (do not forget to prepend -- to pass arguments to npm scripts).\nThe default build configuration is prod.\nDevelopment server\nRun npm start for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change\nany of the source files.\nYou should not use ng serve directly, as it does not use the backend proxy configuration by default.\nCode scaffolding\nRun npm run generate -- component  to generate a new component. You can also use\nnpm run generate -- directive|pipe|service|class|module.\nIf you have installed angular-cli globally with npm install -g @angular/cli,\nyou can also use the command ng generate directly.\nAdditional tools\nTasks are mostly based on the angular-cli tool. Use ng help to get more help or go check out the\nAngular-CLI README.\nWhat's in the box\nThe app template is based on HTML5, TypeScript and\nSass. The translation files use the common JSON format.\nTools\nDevelopment, build and quality processes are based on angular-cli and\nNPM scripts, which includes:\n\nOptimized build and bundling process with Webpack\nDevelopment server with backend proxy and live reload\nCross-browser CSS with autoprefixer and\nbrowserslist\nAsset revisioning for better cache management\nUnit tests using Jasmine and Karma\nEnd-to-end tests using Protractor\nStatic code analysis: TSLint, Codelyzer,\nStylelint and HTMLHint\nLocal knowledgebase server using Hads\n\nLibraries\n\nAngular\nAngular Material\nAngular Flex Layout\nMaterial Icons\nRxJS\nngx-translate\nLodash\n\nCoding guides\n\nAngular\nTypeScript\nSass\nHTML\nUnit tests\nEnd-to-end tests\n\nOther documentation\n\nI18n guide\nUpdating dependencies and tools\nBrowser routing\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChatModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChatRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TestingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ChatModule\n\n\n\ncluster_ChatModule_declarations\n\n\n\ncluster_ChatModule_imports\n\n\n\ncluster_ChatModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nChatModule\n\nChatModule\n\nAppModule -->\n\nChatModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\nChatModule -->\n\nCoreModule->ChatModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\nChatModule -->\n\nMaterialModule->ChatModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nMaterialModule->SettingsModule\n\n\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\n\n\nChatComponent\n\nChatComponent\n\nChatModule -->\n\nChatComponent->ChatModule\n\n\n\n\n\nMessageComponent\n\nMessageComponent\n\nChatModule -->\n\nMessageComponent->ChatModule\n\n\n\n\n\nChatRoutingModule\n\nChatRoutingModule\n\nChatModule -->\n\nChatRoutingModule->ChatModule\n\n\n\n\n\nSocketioService\n\nSocketioService\n\nChatModule -->\n\nSocketioService->ChatModule\n\n\n\n\n\n!environment\n\n!environment\n\nCoreModule -->\n\n!environment->CoreModule\n\n\n\n\n\nI18nService\n\nI18nService\n\nCoreModule -->\n\nI18nService->CoreModule\n\n\n\n\n\nLocalStorageService\n\nLocalStorageService\n\nCoreModule -->\n\nLocalStorageService->CoreModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        2 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ChatActions   (src/.../chat.actions.ts)\n                        \n                        \n                            LogOutput   (src/.../logger.service.ts)\n                        \n                        \n                            SettingsActions   (src/.../settings.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/store/actions/chat.actions.ts\n    \n    \n        \n            \n                \n                    \n                    ChatActions\n                \n            \n            \n                \n                    export ChatActions\n\n                \n            \n            \n                \n                            ReveiveMsg | SendMessage | SaveCurrentMsg | BlinkTab | UnreadCount\n\n                \n            \n        \n    \n    src/app/core/logger.service.ts\n    \n    \n        \n            \n                \n                    \n                    LogOutput\n                \n            \n            \n                \n                    Log output handler function.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/app/core/store/actions/settings.actions.ts\n    \n    \n        \n            \n                \n                    \n                    SettingsActions\n                \n            \n            \n                \n                    export SettingsActions\n\n                \n            \n            \n                \n                        ChangeName | SetUserID | ChangeTheme | ChangeClock | ChangeSendOnEnter | ChangeLanguage | Reset\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            APP_PREFIX   (src/.../local-storage.service.ts)\n                        \n                        \n                            appReducers   (src/.../app.reducers.ts)\n                        \n                        \n                            chatState   (src/.../chat.selector.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            initialAppState   (src/.../app.state.ts)\n                        \n                        \n                            initialChatState   (src/.../chat.state.ts)\n                        \n                        \n                            initialSettingsState   (src/.../settings.state.ts)\n                        \n                        \n                            languageKey   (src/.../i18n.service.ts)\n                        \n                        \n                            log   (src/.../i18n.service.ts)\n                        \n                        \n                            log   (src/.../app.component.ts)\n                        \n                        \n                            metaReducers   (src/.../app.reducers.ts)\n                        \n                        \n                            selectChat   (src/.../chat.selector.ts)\n                        \n                        \n                            selectSettings   (src/.../settings.selector.ts)\n                        \n                        \n                            settingsState   (src/.../settings.selector.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/services/local-storage/local-storage.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            APP_PREFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'CHATAPP-'\n                        \n                    \n\n                \n                    \n                        Prefix for our app keys in local storage\n\n                    \n                \n\n            \n        \n\n    src/app/core/store/reducers/app.reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            appReducers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  router: routerReducer,\n  settings: settingsReducers,\n  chat: chatReducers\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            metaReducers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MetaReducer[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  initStateFromLocalStorage\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/core/store/selectors/chat.selector.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            chatState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: IAppState) => state.chat\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectChat\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n  chatState,\n  (state: IChatState) => state\n)\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  serverUrl: 'http://localhost:3000',\n  defaultLanguage: 'en-US',\n  defaultUserName: 'Guest',\n  supportedLanguages: [\n    'en-US',\n    'ar-EG'\n  ]\n}\n                        \n                    \n\n                \n                    \n                        we can add more environment related variables like API's baseurl\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  serverUrl: 'http://localhost:3000',\n  defaultLanguage: 'en-US',\n  defaultUserName: 'Guest',\n  supportedLanguages: [\n    'en-US',\n    'ar-EG'\n  ]\n}\n                        \n                    \n\n                \n                    \n                        we can add more environment related variables like API's baseurl\n\n                    \n                \n\n            \n        \n\n    src/app/core/store/state/app.state.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialAppState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IAppState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  chat: initialChatState,\n  settings: initialSettingsState\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/core/store/state/chat.state.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialChatState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IChatState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  unread: 0,\n  messages: [],\n  currentMessage: \"\",\n  blink: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/core/store/state/settings.state.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialSettingsState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ISettingsState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  user: {\n    userid: 0,\n    username: environment.defaultUserName\n  },\n  theme: \"light-theme\",\n  clock: true,\n  sendonenter: false,\n  language: \"en-US\"\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/core/i18n.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            languageKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'language'\n                        \n                    \n\n                \n                    \n                        initialize language key in local storage\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            log\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('I18nService')\n                        \n                    \n\n                \n                    \n                        initialize logger object with prefix 'I18nService'\n\n                    \n                \n\n            \n        \n\n    src/app/app.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            log\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(\"App\")\n                        \n                    \n\n\n            \n        \n\n    src/app/core/store/selectors/settings.selector.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selectSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n  settingsState,\n  (state: ISettingsState) => state\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            settingsState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: IAppState) => state.settings\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
